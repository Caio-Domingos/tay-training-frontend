{"version":3,"file":"default-src_app_core_classes_control_class_ts-src_app_core_classes_master-table_class_ts-src_-6c57d9.js","mappings":"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","sources":["./src/app/core/classes/control.class.ts","./src/app/core/classes/master-table.class.ts","./src/app/core/shared/directives/cpf-validator.directive.ts","./src/app/core/shared/directives/driven-forms-directives.module.ts","./src/app/core/shared/directives/url-validator.directive.ts","./src/app/core/shared/validators/cpf-validator.validator.ts","./src/app/core/shared/validators/url-validator.validator.ts","./src/app/services/base-model.service.ts","./src/environments/environment.development.ts","./node_modules/rxjs/dist/esm/internal/firstValueFrom.js","./node_modules/ngx-mask/fesm2020/ngx-mask.mjs","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["interface Control {\n  value?: number | string | Date | boolean;\n  label?: string;\n\n  selectOptions?: { name: string; value: any }[];\n  config?: {\n    name?: string;\n    type?: string;\n    placeholder?: string;\n    hint?: string;\n    required?: boolean;\n    disabled?: boolean;\n    readonly?: boolean;\n    email?: boolean;\n    maxlength?: number;\n    minlength?: number;\n    pattern?: string;\n    mask?: boolean;\n    customValidators?: {\n      [validatorName: string]: any;\n    };\n    maskConfig?: {\n      mask?: string;\n      dropSpecialCharacters?: boolean;\n      validation?: boolean;\n    };\n    dateConfig?: {\n      minDate?: Date;\n      maxDate?: Date;\n    };\n    errors?: {\n      required?: string;\n      minlength?: string;\n      maxlength?: string;\n      email?: string;\n      pattern?: string;\n      mask?: string;\n      invalidCpf?: string;\n      invalidUrl?: string;\n    };\n  };\n}\n\nexport class ControlInput implements Control {\n  value: string | number | Date | boolean;\n  label: string;\n  selectOptions: { name: string; value: any }[];\n\n  config: {\n    name: string;\n    type: string;\n    placeholder: string;\n    hint: string;\n    required: boolean;\n    disabled: boolean;\n    readonly: boolean;\n    email: boolean;\n    maxlength: number;\n    minlength: number;\n    pattern: string;\n    mask: boolean;\n    customValidators: {\n      [validatorName: string]: any;\n    };\n    maskConfig: {\n      mask?: string;\n      dropSpecialCharacters?: boolean;\n      validation?: boolean;\n    };\n    dateConfig: {\n      minDate?: Date;\n      maxDate?: Date;\n    };\n    errors: {\n      required?: string;\n      minlength?: string;\n      maxlength?: string;\n      email?: string;\n      pattern?: string;\n      mask?: string;\n      invalidCpf?: string;\n      invalidUrl?: string;\n    };\n  };\n  constructor(args: Control) {\n    this.value = args.value || '';\n    this.label = args.label || '';\n    this.selectOptions = args.selectOptions || [];\n    this.config = {\n      name: args.config?.name || '',\n      type: args.config?.type || 'text',\n      placeholder: args.config?.placeholder || '',\n      hint: args.config?.hint || '',\n      required: args.config?.required || false,\n      disabled: args.config?.disabled || false,\n      readonly: args.config?.readonly || false,\n      email: args.config?.email || false,\n      maxlength: args.config?.maxlength || 9999999999,\n      minlength: args.config?.minlength || 0,\n      pattern: args.config?.pattern || '',\n      mask: args.config?.mask || false,\n      customValidators: args.config?.customValidators || {},\n      maskConfig: args.config?.maskConfig || {},\n      dateConfig: args.config?.dateConfig || {},\n      errors: args.config?.errors || {},\n    };\n  }\n}\n","import { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { ServiceBackendItemService } from 'src/app/services/service-backend-item.service';\nimport { DataMasterTable } from '../interfaces/data-master-table.interface';\nimport { LoadingService } from 'src/app/services/loading.service';\n\ninterface IsService {\n  delete: (id: number) => Promise<void>;\n}\n\nexport class MasterTable<T extends IsService> {\n  title: string;\n  targetFilters: string[];\n  columns: { name: string; title: string }[];\n\n  path: string;\n\n  filterChange$: BehaviorSubject<string> = new BehaviorSubject('');\n\n  constructor(\n    public router: Router,\n    public service: T,\n    data: DataMasterTable,\n    public loadingService: LoadingService\n  ) {\n    this.title = data.title || 'Master Details Example';\n    this.targetFilters = data.targetFilters || [\n      'Nome',\n      'Email',\n      'Telefone',\n      'CPF',\n    ];\n    this.columns = data.columns || [\n      { name: 'id', title: 'ID' },\n      { name: 'name', title: 'Name' },\n    ];\n    this.path = data.path || '/master-details';\n  }\n\n  add() {\n    this.router.navigate([this.path, 'new']);\n  }\n\n  changeFilter(filter: any) {\n    const value = filter.target!.value || '';\n    this.filterChange$.next(value);\n  }\n  edit(row: any) {\n    console.log('edit row', row);\n    this.router.navigate([this.path, row.id]);\n  }\n  async delete(row: any) {\n    this.loadingService.activeLoading();\n    console.log('delete row', row);\n    await this.service.delete(row.id);\n    // console.log('render table',z this.table);\n  }\n  changeTable(event: any) {\n    console.log('changeTable', event);\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport {\n  AbstractControl,\n  NG_VALIDATORS,\n  ValidationErrors,\n} from '@angular/forms';\nimport { cpfValidator } from '../validators/cpf-validator.validator';\n\n// selector: '[appCpfValidator]',\n@Directive({\n  selector: '[v-cpf-validator]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: CpfValidatorDirective, multi: true },\n  ],\n})\nexport class CpfValidatorDirective {\n  @Input('v-cpf-validator') hasActive!: boolean;\n  validate(control: AbstractControl): ValidationErrors | null {\n    return cpfValidator()(control);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CpfValidatorDirective } from './cpf-validator.directive';\nimport { UrlValidatorDirective } from './url-validator.directive';\n\n@NgModule({\n  declarations: [CpfValidatorDirective, UrlValidatorDirective],\n  imports: [CommonModule],\n  exports: [CpfValidatorDirective, UrlValidatorDirective],\n})\nexport class DrivenFormsDirectivesModule {}\n","import { Directive, Input } from '@angular/core';\nimport {\n  AbstractControl,\n  NG_VALIDATORS,\n  ValidationErrors,\n} from '@angular/forms';\nimport { urlValidator } from '../validators/url-validator.validator';\n\n@Directive({\n  selector: '[v-url-validator]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: UrlValidatorDirective, multi: true },\n  ],\n})\nexport class UrlValidatorDirective {\n  @Input('v-url-validator') hasActive!: boolean;\n  validate(control: AbstractControl): ValidationErrors | null {\n    return urlValidator()(control);\n  }\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nexport function cpfValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (\n      control.value === null ||\n      control.value === undefined ||\n      control.value === ''\n    ) {\n      return null;\n    }\n\n    const cpf = control.value.replace(/\\D/g, '');\n\n    if (cpf.length !== 11 || cpf.match(/(\\d)\\1{10}/)) {\n      return { invalidCpf: true };\n    }\n\n    let sum = 0;\n    let rest;\n\n    for (let i = 1; i <= 9; i++) {\n      sum = sum + parseInt(cpf.substring(i - 1, i)) * (11 - i);\n    }\n\n    rest = (sum * 10) % 11;\n\n    if (rest === 10 || rest === 11) {\n      rest = 0;\n    }\n\n    if (rest !== parseInt(cpf.substring(9, 10))) {\n      return { invalidCpf: true };\n    }\n\n    sum = 0;\n\n    for (let i = 1; i <= 10; i++) {\n      sum = sum + parseInt(cpf.substring(i - 1, i)) * (12 - i);\n    }\n\n    rest = (sum * 10) % 11;\n\n    if (rest === 10 || rest === 11) {\n      rest = 0;\n    }\n\n    if (rest !== parseInt(cpf.substring(10, 11))) {\n      return { invalidCpf: true };\n    }\n\n    return null;\n  };\n}\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\nexport function urlValidator(): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (\n      control.value === null ||\n      control.value === undefined ||\n      control.value === ''\n    ) {\n      return null;\n    }\n\n    // expressão regular para validar URLs\n    const urlRegex = /^(ftp|http|https):\\/\\/[^ \"]+$/;\n\n    // verifica se a URL corresponde à expressão regular\n    if (!urlRegex.test(control.value)) {\n      // se a URL for inválida, retorne uma chave 'invalidUrl' com valor verdadeiro\n      return { invalidUrl: true };\n    }\n\n    // se a URL passar por todas as verificações acima, ela é válida\n    return null;\n  };\n}\n","import { Observable, firstValueFrom, map } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\nexport class BaseModelService {\n  path: string;\n  constructor(subPath: string, public http: HttpClient) {\n    this.path = `${environment.apiUrl}${subPath}`;\n  }\n\n  public async request(req: Observable<any>) {\n    return firstValueFrom(req);\n  }\n\n  // private mockupRequest() {\n  //   return this.http\n  //     .get('https://binaryjazz.us/wp-json/genrenator/v1/genre/10 ')\n  //     .pipe(\n  //       map((res: any) => {\n  //         const ret = {\n  //           items: res.map((item: any, index: number) => {\n  //             return {\n  //               id: index,\n  //               name: item,\n  //             };\n  //           }),\n  //           total: res.length,\n  //         };\n\n  //         return ret;\n  //       })\n  //     );\n  // }\n\n  getAll() {\n    console.log('Get All', this.path);\n    const req = this.http.get(this.path);\n    return this.request(req);\n  }\n\n  getByFilter(filter: { [key: string]: string }) {\n    console.log('Get By Filter', this.path);\n    const filterQuery = Object.entries(filter).reduce(\n      (acc, [key, value], index) => {\n        return Object.entries(filter).length !== index + 1\n          ? `${acc}${key}=${value}&`\n          : `${acc}${key}=${value}`;\n      },\n      ''\n    );\n    const req = this.http.get(`${this.path}/filter?${filterQuery}`);\n    return this.request(req);\n    // return this.request(this.mockupRequest());\n  }\n\n  getById(id: number, relations?: string[]) {\n    const rel = relations ? relations.join(',') : '';\n    const req = this.http.get(`${this.path}/${id}?relations=${rel}`);\n    return this.request(req);\n  }\n\n  create(item: any) {\n    const req = this.http.post(this.path, item);\n    return this.request(req);\n  }\n  createMany(item: any[]) {\n    const req = this.http.post(`${this.path}/many/`, item);\n    return this.request(req);\n  }\n\n  update(id: number, item: any) {\n    const req = this.http.patch(`${this.path}/single/${id}`, item);\n    return this.request(req);\n  }\n  updateMany(id: number, item: any[]) {\n    const req = this.http.patch(`${this.path}/many`, item);\n    return this.request(req);\n  }\n\n  delete(id: number) {\n    const req = this.http.delete(`${this.path}/${id}`);\n    return this.request(req);\n  }\n}\n","export const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000',\n};\n","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    const hasConfig = typeof config === 'object';\n    return new Promise((resolve, reject) => {\n        const subscriber = new SafeSubscriber({\n            next: (value) => {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: () => {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, inject, Injectable, ElementRef, Renderer2, makeEnvironmentProviders, Directive, Input, Output, HostListener, Pipe } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nconst NGX_MASK_CONFIG = new InjectionToken('ngx-mask config');\nconst NEW_CONFIG = new InjectionToken('new ngx-mask config');\nconst INITIAL_CONFIG = new InjectionToken('initial ngx-mask config');\nconst initialConfig = {\n    suffix: '',\n    prefix: '',\n    thousandSeparator: ' ',\n    decimalMarker: ['.', ','],\n    clearIfNotMatch: false,\n    showTemplate: false,\n    showMaskTyped: false,\n    placeHolderCharacter: '_',\n    dropSpecialCharacters: true,\n    hiddenInput: undefined,\n    shownMaskExpression: '',\n    separatorLimit: '',\n    allowNegativeNumbers: false,\n    validation: true,\n    // eslint-disable-next-line @typescript-eslint/quotes\n    specialCharacters: ['-', '/', '(', ')', '.', ':', ' ', '+', ',', '@', '[', ']', '\"', \"'\"],\n    leadZeroDateTime: false,\n    triggerOnMaskChange: false,\n    maskFilled: new EventEmitter(),\n    patterns: {\n        '0': {\n            pattern: new RegExp('\\\\d'),\n        },\n        '9': {\n            pattern: new RegExp('\\\\d'),\n            optional: true,\n        },\n        X: {\n            pattern: new RegExp('\\\\d'),\n            symbol: '*',\n        },\n        A: {\n            pattern: new RegExp('[a-zA-Z0-9]'),\n        },\n        S: {\n            pattern: new RegExp('[a-zA-Z]'),\n        },\n        U: {\n            pattern: new RegExp('[A-Z]'),\n        },\n        L: {\n            pattern: new RegExp('[a-z]'),\n        },\n        d: {\n            pattern: new RegExp('\\\\d'),\n        },\n        m: {\n            pattern: new RegExp('\\\\d'),\n        },\n        M: {\n            pattern: new RegExp('\\\\d'),\n        },\n        H: {\n            pattern: new RegExp('\\\\d'),\n        },\n        h: {\n            pattern: new RegExp('\\\\d'),\n        },\n        s: {\n            pattern: new RegExp('\\\\d'),\n        },\n    },\n};\nconst timeMasks = ['Hh:m0:s0', 'Hh:m0', 'm0:s0'];\nconst withoutValidation = [\n    'percent',\n    'Hh',\n    's0',\n    'm0',\n    'separator',\n    'd0/M0/0000',\n    'd0/M0',\n    'd0',\n    'M0',\n];\n\nclass NgxMaskApplierService {\n    constructor() {\n        this._config = inject(NGX_MASK_CONFIG);\n        this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n        this.hiddenInput = this._config.hiddenInput;\n        this.clearIfNotMatch = this._config.clearIfNotMatch;\n        this.specialCharacters = this._config.specialCharacters;\n        this.patterns = this._config.patterns;\n        this.prefix = this._config.prefix;\n        this.suffix = this._config.suffix;\n        this.thousandSeparator = this._config.thousandSeparator;\n        this.decimalMarker = this._config.decimalMarker;\n        this.showMaskTyped = this._config.showMaskTyped;\n        this.placeHolderCharacter = this._config.placeHolderCharacter;\n        this.validation = this._config.validation;\n        this.separatorLimit = this._config.separatorLimit;\n        this.allowNegativeNumbers = this._config.allowNegativeNumbers;\n        this.leadZeroDateTime = this._config.leadZeroDateTime;\n        this._shift = new Set();\n        this.maskExpression = '';\n        this.actualValue = '';\n        this.shownMaskExpression = '';\n        this._formatWithSeparators = (str, thousandSeparatorChar, decimalChars, precision) => {\n            let x = [];\n            let decimalChar = '';\n            if (Array.isArray(decimalChars)) {\n                const regExp = new RegExp(decimalChars.map((v) => ('[\\\\^$.|?*+()'.indexOf(v) >= 0 ? `\\\\${v}` : v)).join('|'));\n                x = str.split(regExp);\n                decimalChar = str.match(regExp)?.[0] ?? '';\n            }\n            else {\n                x = str.split(decimalChars);\n                decimalChar = decimalChars;\n            }\n            const decimals = x.length > 1 ? `${decimalChar}${x[1]}` : '';\n            let res = x[0] ?? '';\n            const separatorLimit = this.separatorLimit.replace(/\\s/g, '');\n            if (separatorLimit && +separatorLimit) {\n                if (res[0] === '-') {\n                    res = `-${res.slice(1, res.length).slice(0, separatorLimit.length)}`;\n                }\n                else {\n                    res = res.slice(0, separatorLimit.length);\n                }\n            }\n            const rgx = /(\\d+)(\\d{3})/;\n            while (thousandSeparatorChar && rgx.test(res)) {\n                res = res.replace(rgx, '$1' + thousandSeparatorChar + '$2');\n            }\n            if (precision === undefined) {\n                return res + decimals;\n            }\n            else if (precision === 0) {\n                return res;\n            }\n            return res + decimals.substring(0, precision + 1);\n        };\n        this.percentage = (str) => {\n            return Number(str) >= 0 && Number(str) <= 100;\n        };\n        this.getPrecision = (maskExpression) => {\n            const x = maskExpression.split('.');\n            if (x.length > 1) {\n                return Number(x[x.length - 1]);\n            }\n            return Infinity;\n        };\n        this.checkAndRemoveSuffix = (inputValue) => {\n            for (let i = this.suffix?.length - 1; i >= 0; i--) {\n                const substr = this.suffix.substring(i, this.suffix?.length);\n                if (inputValue.includes(substr) &&\n                    i !== this.suffix?.length - 1 &&\n                    (i - 1 < 0 ||\n                        !inputValue.includes(this.suffix.substring(i - 1, this.suffix?.length)))) {\n                    return inputValue.replace(substr, '');\n                }\n            }\n            return inputValue;\n        };\n        this.checkInputPrecision = (inputValue, precision, decimalMarker) => {\n            if (precision < Infinity) {\n                // TODO need think about decimalMarker\n                if (Array.isArray(decimalMarker)) {\n                    const marker = decimalMarker.find((dm) => dm !== this.thousandSeparator);\n                    // eslint-disable-next-line no-param-reassign\n                    decimalMarker = marker ? marker : decimalMarker[0];\n                }\n                const precisionRegEx = new RegExp(this._charToRegExpExpression(decimalMarker) + `\\\\d{${precision}}.*$`);\n                const precisionMatch = inputValue.match(precisionRegEx);\n                const precisionMatchLength = (precisionMatch && precisionMatch[0]?.length) ?? 0;\n                if (precisionMatchLength - 1 > precision) {\n                    const diff = precisionMatchLength - 1 - precision;\n                    // eslint-disable-next-line no-param-reassign\n                    inputValue = inputValue.substring(0, inputValue.length - diff);\n                }\n                if (precision === 0 &&\n                    this._compareOrIncludes(inputValue[inputValue.length - 1], decimalMarker, this.thousandSeparator)) {\n                    // eslint-disable-next-line no-param-reassign\n                    inputValue = inputValue.substring(0, inputValue.length - 1);\n                }\n            }\n            return inputValue;\n        };\n    }\n    applyMaskWithPattern(inputValue, maskAndPattern) {\n        const [mask, customPattern] = maskAndPattern;\n        this.customPattern = customPattern;\n        return this.applyMask(inputValue, mask);\n    }\n    applyMask(inputValue, maskExpression, position = 0, justPasted = false, backspaced = false, \n    // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-explicit-any\n    cb = () => { }) {\n        if (!maskExpression || typeof inputValue !== 'string') {\n            return '';\n        }\n        let cursor = 0;\n        let result = '';\n        let multi = false;\n        let backspaceShift = false;\n        let shift = 1;\n        let stepBack = false;\n        if (inputValue.slice(0, this.prefix.length) === this.prefix) {\n            // eslint-disable-next-line no-param-reassign\n            inputValue = inputValue.slice(this.prefix.length, inputValue.length);\n        }\n        if (!!this.suffix && inputValue?.length > 0) {\n            // eslint-disable-next-line no-param-reassign\n            inputValue = this.checkAndRemoveSuffix(inputValue);\n        }\n        const inputArray = inputValue.toString().split('');\n        if (maskExpression === 'IP') {\n            const valuesIP = inputValue.split('.');\n            this.ipError = this._validIP(valuesIP);\n            // eslint-disable-next-line no-param-reassign\n            maskExpression = '099.099.099.099';\n        }\n        const arr = [];\n        for (let i = 0; i < inputValue.length; i++) {\n            if (inputValue[i]?.match('\\\\d')) {\n                arr.push(inputValue[i] ?? '');\n            }\n        }\n        if (maskExpression === 'CPF_CNPJ') {\n            this.cpfCnpjError = arr.length !== 11 && arr.length !== 14;\n            if (arr.length > 11) {\n                // eslint-disable-next-line no-param-reassign\n                maskExpression = '00.000.000/0000-00';\n            }\n            else {\n                // eslint-disable-next-line no-param-reassign\n                maskExpression = '000.000.000-00';\n            }\n        }\n        if (maskExpression.startsWith('percent')) {\n            if (inputValue.match('[a-z]|[A-Z]') ||\n                // eslint-disable-next-line no-useless-escape\n                inputValue.match(/[-!$%^&*()_+|~=`{}\\[\\]:\";'<>?,\\/.]/)) {\n                // eslint-disable-next-line no-param-reassign\n                inputValue = this._stripToDecimal(inputValue);\n                const precision = this.getPrecision(maskExpression);\n                // eslint-disable-next-line no-param-reassign\n                inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\n            }\n            if (inputValue.indexOf('.') > 0 &&\n                !this.percentage(inputValue.substring(0, inputValue.indexOf('.')))) {\n                const base = inputValue.substring(0, inputValue.indexOf('.') - 1);\n                // eslint-disable-next-line no-param-reassign\n                inputValue = `${base}${inputValue.substring(inputValue.indexOf('.'), inputValue.length)}`;\n            }\n            if (this.percentage(inputValue)) {\n                result = inputValue;\n            }\n            else {\n                result = inputValue.substring(0, inputValue.length - 1);\n            }\n        }\n        else if (maskExpression.startsWith('separator')) {\n            if (inputValue.match('[wа-яА-Я]') ||\n                inputValue.match('[ЁёА-я]') ||\n                inputValue.match('[a-z]|[A-Z]') ||\n                inputValue.match(/[-@#!$%\\\\^&*()_£¬'+|~=`{}\\]:\";<>.?/]/) ||\n                inputValue.match('[^A-Za-z0-9,]')) {\n                // eslint-disable-next-line no-param-reassign\n                inputValue = this._stripToDecimal(inputValue);\n            }\n            // eslint-disable-next-line no-param-reassign\n            inputValue =\n                inputValue.length > 1 &&\n                    inputValue[0] === '0' &&\n                    inputValue[1] !== this.thousandSeparator &&\n                    !this._compareOrIncludes(inputValue[1], this.decimalMarker, this.thousandSeparator) &&\n                    !backspaced\n                    ? inputValue.slice(0, inputValue.length - 1)\n                    : inputValue;\n            if (backspaced) {\n                // eslint-disable-next-line no-param-reassign\n                inputValue = this._compareOrIncludes(inputValue[inputValue.length - 1], this.decimalMarker, this.thousandSeparator)\n                    ? inputValue.slice(0, inputValue.length - 1)\n                    : inputValue;\n            }\n            // TODO: we had different rexexps here for the different cases... but tests dont seam to bother - check this\n            //  separator: no COMMA, dot-sep: no SPACE, COMMA OK, comma-sep: no SPACE, COMMA OK\n            const thousandSeparatorCharEscaped = this._charToRegExpExpression(this.thousandSeparator);\n            let invalidChars = '@#!$%^&*()_+|~=`{}\\\\[\\\\]:\\\\s,\\\\.\";<>?\\\\/'.replace(thousandSeparatorCharEscaped, '');\n            //.replace(decimalMarkerEscaped, '');\n            if (Array.isArray(this.decimalMarker)) {\n                for (const marker of this.decimalMarker) {\n                    invalidChars = invalidChars.replace(this._charToRegExpExpression(marker), '');\n                }\n            }\n            else {\n                invalidChars = invalidChars.replace(this._charToRegExpExpression(this.decimalMarker), '');\n            }\n            const invalidCharRegexp = new RegExp('[' + invalidChars + ']');\n            if (inputValue.match(invalidCharRegexp) ||\n                (inputValue.length === 1 &&\n                    this._compareOrIncludes(inputValue, this.decimalMarker, this.thousandSeparator))) {\n                // eslint-disable-next-line no-param-reassign\n                inputValue = inputValue.substring(0, inputValue.length - 1);\n            }\n            const precision = this.getPrecision(maskExpression);\n            // eslint-disable-next-line no-param-reassign\n            inputValue = this.checkInputPrecision(inputValue, precision, this.decimalMarker);\n            const strForSep = inputValue.replace(new RegExp(thousandSeparatorCharEscaped, 'g'), '');\n            result = this._formatWithSeparators(strForSep, this.thousandSeparator, this.decimalMarker, precision);\n            const commaShift = result.indexOf(',') - inputValue.indexOf(',');\n            const shiftStep = result.length - inputValue.length;\n            if (shiftStep > 0 && result[position] !== ',') {\n                backspaceShift = true;\n                let _shift = 0;\n                do {\n                    this._shift.add(position + _shift);\n                    _shift++;\n                } while (_shift < shiftStep);\n            }\n            else if ((commaShift !== 0 &&\n                position > 0 &&\n                !(result.indexOf(',') >= position && position > 3)) ||\n                (!(result.indexOf('.') >= position && position > 3) && shiftStep <= 0)) {\n                this._shift.clear();\n                backspaceShift = true;\n                shift = shiftStep;\n                // eslint-disable-next-line no-param-reassign\n                position += shiftStep;\n                this._shift.add(position);\n            }\n            else {\n                this._shift.clear();\n            }\n        }\n        else {\n            for (\n            // eslint-disable-next-line\n            let i = 0, inputSymbol = inputArray[0]; i < inputArray.length; i++, inputSymbol = inputArray[i] ?? '') {\n                if (cursor === maskExpression.length) {\n                    break;\n                }\n                if (this._checkSymbolMask(inputSymbol, maskExpression[cursor] ?? '') &&\n                    maskExpression[cursor + 1] === '?') {\n                    result += inputSymbol;\n                    cursor += 2;\n                }\n                else if (maskExpression[cursor + 1] === '*' &&\n                    multi &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2] ?? '')) {\n                    result += inputSymbol;\n                    cursor += 3;\n                    multi = false;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor] ?? '') &&\n                    maskExpression[cursor + 1] === '*') {\n                    result += inputSymbol;\n                    multi = true;\n                }\n                else if (maskExpression[cursor + 1] === '?' &&\n                    this._checkSymbolMask(inputSymbol, maskExpression[cursor + 2] ?? '')) {\n                    result += inputSymbol;\n                    cursor += 3;\n                }\n                else if (this._checkSymbolMask(inputSymbol, maskExpression[cursor] ?? '')) {\n                    if (maskExpression[cursor] === 'H') {\n                        if (Number(inputSymbol) > 2) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'h') {\n                        if (result === '2' && Number(inputSymbol) > 3) {\n                            cursor += 1;\n                            i--;\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'm') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 's') {\n                        if (Number(inputSymbol) > 5) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    const daysCount = 31;\n                    if (maskExpression[cursor] === 'd') {\n                        if ((Number(inputSymbol) > 3 && this.leadZeroDateTime) ||\n                            Number(inputValue.slice(cursor, cursor + 2)) > daysCount ||\n                            inputValue[cursor + 1] === '/') {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    if (maskExpression[cursor] === 'M') {\n                        const monthsCount = 12;\n                        // mask without day\n                        const withoutDays = cursor === 0 &&\n                            (Number(inputSymbol) > 2 ||\n                                Number(inputValue.slice(cursor, cursor + 2)) > monthsCount ||\n                                inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for input\n                        const day1monthInput = inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            ((inputValue[cursor - 2] === '/' &&\n                                Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount &&\n                                inputValue[cursor] !== '/') ||\n                                inputValue[cursor] === '/' ||\n                                (inputValue[cursor - 3] === '/' &&\n                                    Number(inputValue.slice(cursor - 2, cursor)) > monthsCount &&\n                                    inputValue[cursor - 1] !== '/') ||\n                                inputValue[cursor - 1] === '/');\n                        // 10<day<31 && month<12 for input\n                        const day2monthInput = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] === '/' &&\n                            (Number(inputValue.slice(cursor, cursor + 2)) > monthsCount ||\n                                inputValue[cursor + 1] === '/');\n                        // day<10 && month<12 for paste whole data\n                        const day1monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) > daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            !inputValue.slice(cursor - 2, cursor).includes('/') &&\n                            Number(inputValue.slice(cursor - 2, cursor)) > monthsCount;\n                        // 10<day<31 && month<12 for paste whole data\n                        const day2monthPaste = Number(inputValue.slice(cursor - 3, cursor - 1)) <= daysCount &&\n                            !inputValue.slice(cursor - 3, cursor - 1).includes('/') &&\n                            inputValue[cursor - 1] !== '/' &&\n                            Number(inputValue.slice(cursor - 1, cursor + 1)) > monthsCount;\n                        if ((Number(inputSymbol) > 1 && this.leadZeroDateTime) ||\n                            withoutDays ||\n                            day1monthInput ||\n                            day2monthInput ||\n                            day1monthPaste ||\n                            day2monthPaste) {\n                            cursor += 1;\n                            this._shiftStep(maskExpression, cursor, inputArray.length);\n                            i--;\n                            if (this.leadZeroDateTime) {\n                                result += '0';\n                            }\n                            continue;\n                        }\n                    }\n                    result += inputSymbol;\n                    cursor++;\n                }\n                else if (inputSymbol === ' ' && maskExpression[cursor] === ' ') {\n                    result += inputSymbol;\n                    cursor++;\n                }\n                else if (this.specialCharacters.indexOf(maskExpression[cursor] ?? '') !== -1) {\n                    result += maskExpression[cursor];\n                    cursor++;\n                    this._shiftStep(maskExpression, cursor, inputArray.length);\n                    i--;\n                }\n                else if (this.specialCharacters.indexOf(inputSymbol) > -1 &&\n                    this.patterns[maskExpression[cursor] ?? ''] &&\n                    this.patterns[maskExpression[cursor] ?? '']?.optional) {\n                    if (!!inputArray[cursor] &&\n                        maskExpression !== '099.099.099.099' &&\n                        maskExpression !== '000.000.000-00' &&\n                        maskExpression !== '00.000.000/0000-00' &&\n                        !maskExpression.match(/^9+\\.0+$/)) {\n                        result += inputArray[cursor];\n                    }\n                    cursor++;\n                    i--;\n                }\n                else if (this.maskExpression[cursor + 1] === '*' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2] ?? '') &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.maskExpression[cursor + 1] === '?' &&\n                    this._findSpecialChar(this.maskExpression[cursor + 2] ?? '') &&\n                    this._findSpecialChar(inputSymbol) === this.maskExpression[cursor + 2] &&\n                    multi) {\n                    cursor += 3;\n                    result += inputSymbol;\n                }\n                else if (this.showMaskTyped &&\n                    this.specialCharacters.indexOf(inputSymbol) < 0 &&\n                    inputSymbol !== this.placeHolderCharacter) {\n                    stepBack = true;\n                }\n            }\n        }\n        if (result.length + 1 === maskExpression.length &&\n            this.specialCharacters.indexOf(maskExpression[maskExpression.length - 1] ?? '') !== -1) {\n            result += maskExpression[maskExpression.length - 1];\n        }\n        let newPosition = position + 1;\n        while (this._shift.has(newPosition)) {\n            shift++;\n            newPosition++;\n        }\n        let actualShift = justPasted && !maskExpression.startsWith('separator')\n            ? cursor\n            : this._shift.has(position)\n                ? shift\n                : 0;\n        if (stepBack) {\n            actualShift--;\n        }\n        cb(actualShift, backspaceShift);\n        if (shift < 0) {\n            this._shift.clear();\n        }\n        let onlySpecial = false;\n        if (backspaced) {\n            onlySpecial = inputArray.every((char) => this.specialCharacters.includes(char));\n        }\n        let res = `${this.prefix}${onlySpecial ? '' : result}${this.suffix}`;\n        if (result.length === 0) {\n            res = `${this.prefix}${result}`;\n        }\n        return res;\n    }\n    _findSpecialChar(inputSymbol) {\n        return this.specialCharacters.find((val) => val === inputSymbol);\n    }\n    _checkSymbolMask(inputSymbol, maskSymbol) {\n        this.patterns = this.customPattern ? this.customPattern : this.patterns;\n        return ((this.patterns[maskSymbol]?.pattern &&\n            this.patterns[maskSymbol]?.pattern.test(inputSymbol)) ??\n            false);\n    }\n    _stripToDecimal(str) {\n        return str\n            .split('')\n            .filter((i, idx) => {\n            const isDecimalMarker = typeof this.decimalMarker === 'string'\n                ? i === this.decimalMarker\n                : // TODO (inepipenko) use utility type\n                    this.decimalMarker.includes(i);\n            return (i.match('^-?\\\\d') ||\n                i === this.thousandSeparator ||\n                isDecimalMarker ||\n                (i === '-' && idx === 0 && this.allowNegativeNumbers));\n        })\n            .join('');\n    }\n    _charToRegExpExpression(char) {\n        // if (Array.isArray(char)) {\n        // \treturn char.map((v) => ('[\\\\^$.|?*+()'.indexOf(v) >= 0 ? `\\\\${v}` : v)).join('|');\n        // }\n        if (char) {\n            const charsToEscape = '[\\\\^$.|?*+()';\n            return char === ' ' ? '\\\\s' : charsToEscape.indexOf(char) >= 0 ? `\\\\${char}` : char;\n        }\n        return char;\n    }\n    _shiftStep(maskExpression, cursor, inputLength) {\n        const shiftStep = /[*?]/g.test(maskExpression.slice(0, cursor))\n            ? inputLength\n            : cursor;\n        this._shift.add(shiftStep + this.prefix.length || 0);\n    }\n    _compareOrIncludes(value, comparedValue, excludedValue) {\n        return Array.isArray(comparedValue)\n            ? comparedValue.filter((v) => v !== excludedValue).includes(value)\n            : value === comparedValue;\n    }\n    _validIP(valuesIP) {\n        return !(valuesIP.length === 4 &&\n            !valuesIP.some((value, index) => {\n                if (valuesIP.length !== index + 1) {\n                    return value === '' || Number(value) > 255;\n                }\n                return value === '' || Number(value.substring(0, 3)) > 255;\n            }));\n    }\n}\nNgxMaskApplierService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: NgxMaskApplierService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxMaskApplierService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: NgxMaskApplierService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: NgxMaskApplierService, decorators: [{\n            type: Injectable\n        }] });\n\nclass NgxMaskService extends NgxMaskApplierService {\n    constructor() {\n        super(...arguments);\n        this.isNumberValue = false;\n        this.maskIsShown = '';\n        this.selStart = null;\n        this.selEnd = null;\n        /**\n         * Whether we are currently in writeValue function, in this case when applying the mask we don't want to trigger onChange function,\n         * since writeValue should be a one way only process of writing the DOM value based on the Angular model value.\n         */\n        this.writingValue = false;\n        this.maskChanged = false;\n        this.triggerOnMaskChange = false;\n        // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-explicit-any\n        this.onChange = (_) => { };\n        this.document = inject(DOCUMENT);\n        this._config = inject(NGX_MASK_CONFIG);\n        this._elementRef = inject(ElementRef, { optional: true });\n        this._renderer = inject(Renderer2, { optional: true });\n    }\n    // eslint-disable-next-line complexity\n    applyMask(inputValue, maskExpression, position = 0, justPasted = false, backspaced = false, \n    // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-explicit-any\n    cb = () => { }) {\n        if (!maskExpression) {\n            return inputValue !== this.actualValue ? this.actualValue : inputValue;\n        }\n        this.maskIsShown = this.showMaskTyped ? this.showMaskInInput() : '';\n        if (this.maskExpression === 'IP' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (this.maskExpression === 'CPF_CNPJ' && this.showMaskTyped) {\n            this.maskIsShown = this.showMaskInInput(inputValue || '#');\n        }\n        if (!inputValue && this.showMaskTyped) {\n            this.formControlResult(this.prefix);\n            return this.prefix + this.maskIsShown;\n        }\n        const getSymbol = !!inputValue && typeof this.selStart === 'number'\n            ? inputValue[this.selStart] ?? ''\n            : '';\n        let newInputValue = '';\n        if (this.hiddenInput !== undefined && !this.writingValue) {\n            let actualResult = this.actualValue.split('');\n            // eslint-disable  @typescript-eslint/no-unused-expressions\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            inputValue !== '' && actualResult.length\n                ? typeof this.selStart === 'number' && typeof this.selEnd === 'number'\n                    ? inputValue.length > actualResult.length\n                        ? actualResult.splice(this.selStart, 0, getSymbol)\n                        : inputValue.length < actualResult.length\n                            ? actualResult.length - inputValue.length === 1\n                                ? actualResult.splice(this.selStart - 1, 1)\n                                : actualResult.splice(this.selStart, this.selEnd - this.selStart)\n                            : null\n                    : null\n                : (actualResult = []);\n            if (this.showMaskTyped) {\n                // eslint-disable-next-line no-param-reassign\n                inputValue = this.removeMask(inputValue);\n            }\n            // eslint-enable  @typescript-eslint/no-unused-expressions\n            newInputValue =\n                this.actualValue.length && actualResult.length <= inputValue.length\n                    ? this.shiftTypedSymbols(actualResult.join(''))\n                    : inputValue;\n        }\n        if (this.showMaskTyped) {\n            // eslint-disable-next-line no-param-reassign\n            inputValue = this.removeMask(inputValue);\n        }\n        newInputValue = Boolean(newInputValue) && newInputValue.length ? newInputValue : inputValue;\n        const result = super.applyMask(newInputValue, maskExpression, position, justPasted, backspaced, cb);\n        this.actualValue = this.getActualValue(result);\n        // handle some separator implications:\n        // a.) adjust decimalMarker default (. -> ,) if thousandSeparator is a dot\n        if (this.thousandSeparator === '.' && this.decimalMarker === '.') {\n            this.decimalMarker = ',';\n        }\n        // b) remove decimal marker from list of special characters to mask\n        if (this.maskExpression.startsWith('separator') && this.dropSpecialCharacters === true) {\n            this.specialCharacters = this.specialCharacters.filter((item) => !this._compareOrIncludes(item, this.decimalMarker, this.thousandSeparator) //item !== this.decimalMarker, // !\n            );\n        }\n        this.formControlResult(result);\n        if (!this.showMaskTyped) {\n            if (this.hiddenInput) {\n                return result && result.length\n                    ? this.hideInput(result, this.maskExpression)\n                    : result;\n            }\n            return result;\n        }\n        const resLen = result.length;\n        const prefNmask = this.prefix + this.maskIsShown;\n        if (this.maskExpression.includes('H')) {\n            const countSkipedSymbol = this._numberSkipedSymbols(result);\n            return result + prefNmask.slice(resLen + countSkipedSymbol);\n        }\n        else if (this.maskExpression === 'IP' || this.maskExpression === 'CPF_CNPJ') {\n            return result + prefNmask;\n        }\n        return result + prefNmask.slice(resLen);\n    }\n    // get the number of characters that were shifted\n    _numberSkipedSymbols(value) {\n        const regex = /(^|\\D)(\\d\\D)/g;\n        let match = regex.exec(value);\n        let countSkipedSymbol = 0;\n        while (match != null) {\n            countSkipedSymbol += 1;\n            match = regex.exec(value);\n        }\n        return countSkipedSymbol;\n    }\n    applyValueChanges(position, justPasted, backspaced, \n    // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-explicit-any\n    cb = () => { }) {\n        const formElement = this._elementRef?.nativeElement;\n        if (!formElement) {\n            return;\n        }\n        formElement.value = this.applyMask(formElement.value, this.maskExpression, position, justPasted, backspaced, cb);\n        if (formElement === this._getActiveElement()) {\n            return;\n        }\n        this.clearIfNotMatchFn();\n    }\n    hideInput(inputValue, maskExpression) {\n        return inputValue\n            .split('')\n            .map((curr, index) => {\n            if (this.patterns &&\n                this.patterns[maskExpression[index] ?? ''] &&\n                this.patterns[maskExpression[index] ?? '']?.symbol) {\n                return this.patterns[maskExpression[index] ?? '']?.symbol;\n            }\n            return curr;\n        })\n            .join('');\n    }\n    // this function is not necessary, it checks result against maskExpression\n    getActualValue(res) {\n        const compare = res.split('').filter((symbol, i) => {\n            const maskChar = this.maskExpression[i] ?? '';\n            return (this._checkSymbolMask(symbol, maskChar) ||\n                (this.specialCharacters.includes(maskChar) && symbol === maskChar));\n        });\n        if (compare.join('') === res) {\n            return compare.join('');\n        }\n        return res;\n    }\n    shiftTypedSymbols(inputValue) {\n        let symbolToReplace = '';\n        const newInputValue = (inputValue &&\n            inputValue.split('').map((currSymbol, index) => {\n                if (this.specialCharacters.includes(inputValue[index + 1] ?? '') &&\n                    inputValue[index + 1] !== this.maskExpression[index + 1]) {\n                    symbolToReplace = currSymbol;\n                    return inputValue[index + 1];\n                }\n                if (symbolToReplace.length) {\n                    const replaceSymbol = symbolToReplace;\n                    symbolToReplace = '';\n                    return replaceSymbol;\n                }\n                return currSymbol;\n            })) ||\n            [];\n        return newInputValue.join('');\n    }\n    /**\n     * Convert number value to string\n     * 3.1415 -> '3.1415'\n     * 1e-7 -> '0.0000001'\n     */\n    numberToString(value) {\n        if (!value && value !== 0) {\n            return String(value);\n        }\n        return Number(value).toLocaleString('fullwide', {\n            useGrouping: false,\n            maximumFractionDigits: 20,\n        });\n    }\n    showMaskInInput(inputVal) {\n        if (this.showMaskTyped && !!this.shownMaskExpression) {\n            if (this.maskExpression.length !== this.shownMaskExpression.length) {\n                throw new Error('Mask expression must match mask placeholder length');\n            }\n            else {\n                return this.shownMaskExpression;\n            }\n        }\n        else if (this.showMaskTyped) {\n            if (inputVal) {\n                if (this.maskExpression === 'IP') {\n                    return this._checkForIp(inputVal);\n                }\n                if (this.maskExpression === 'CPF_CNPJ') {\n                    return this._checkForCpfCnpj(inputVal);\n                }\n            }\n            return this.maskExpression.replace(/\\w/g, this.placeHolderCharacter);\n        }\n        return '';\n    }\n    clearIfNotMatchFn() {\n        const formElement = this._elementRef?.nativeElement;\n        if (!formElement) {\n            return;\n        }\n        if (this.clearIfNotMatch &&\n            this.prefix.length + this.maskExpression.length + this.suffix.length !==\n                formElement.value.replace(/_/g, '').length) {\n            this.formElementProperty = ['value', ''];\n            this.applyMask(formElement.value, this.maskExpression);\n        }\n    }\n    set formElementProperty([name, value]) {\n        if (!this._renderer || !this._elementRef) {\n            return;\n        }\n        Promise.resolve().then(() => this._renderer?.setProperty(this._elementRef?.nativeElement, name, value));\n    }\n    checkSpecialCharAmount(mask) {\n        const chars = mask\n            .split('')\n            .filter((item) => this._findSpecialChar(item));\n        return chars.length;\n    }\n    removeMask(inputValue) {\n        return this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.specialCharacters.concat('_').concat(this.placeHolderCharacter));\n    }\n    _checkForIp(inputVal) {\n        if (inputVal === '#') {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        const arr = [];\n        for (let i = 0; i < inputVal.length; i++) {\n            const value = inputVal[i] ?? '';\n            if (!value) {\n                continue;\n            }\n            if (value.match('\\\\d')) {\n                arr.push(value);\n            }\n        }\n        if (arr.length <= 3) {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return `${this.placeHolderCharacter}.${this.placeHolderCharacter}`;\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return this.placeHolderCharacter;\n        }\n        if (arr.length > 9 && arr.length <= 12) {\n            return '';\n        }\n        return '';\n    }\n    _checkForCpfCnpj(inputVal) {\n        const cpf = `${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `-${this.placeHolderCharacter}${this.placeHolderCharacter}`;\n        const cnpj = `${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `.${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `/${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}${this.placeHolderCharacter}` +\n            `-${this.placeHolderCharacter}${this.placeHolderCharacter}`;\n        if (inputVal === '#') {\n            return cpf;\n        }\n        const arr = [];\n        for (let i = 0; i < inputVal.length; i++) {\n            const value = inputVal[i] ?? '';\n            if (!value) {\n                continue;\n            }\n            if (value.match('\\\\d')) {\n                arr.push(value);\n            }\n        }\n        if (arr.length <= 3) {\n            return cpf.slice(arr.length, cpf.length);\n        }\n        if (arr.length > 3 && arr.length <= 6) {\n            return cpf.slice(arr.length + 1, cpf.length);\n        }\n        if (arr.length > 6 && arr.length <= 9) {\n            return cpf.slice(arr.length + 2, cpf.length);\n        }\n        if (arr.length > 9 && arr.length < 11) {\n            return cpf.slice(arr.length + 3, cpf.length);\n        }\n        if (arr.length === 11) {\n            return '';\n        }\n        if (arr.length === 12) {\n            if (inputVal.length === 17) {\n                return cnpj.slice(16, cnpj.length);\n            }\n            return cnpj.slice(15, cnpj.length);\n        }\n        if (arr.length > 12 && arr.length <= 14) {\n            return cnpj.slice(arr.length + 4, cnpj.length);\n        }\n        return '';\n    }\n    /**\n     * Recursively determine the current active element by navigating the Shadow DOM until the Active Element is found.\n     */\n    _getActiveElement(document = this.document) {\n        const shadowRootEl = document?.activeElement?.shadowRoot;\n        if (!shadowRootEl?.activeElement) {\n            return document.activeElement;\n        }\n        else {\n            return this._getActiveElement(shadowRootEl);\n        }\n    }\n    /**\n     * Propogates the input value back to the Angular model by triggering the onChange function. It won't do this if writingValue\n     * is true. If that is true it means we are currently in the writeValue function, which is supposed to only update the actual\n     * DOM element based on the Angular model value. It should be a one way process, i.e. writeValue should not be modifying the Angular\n     * model value too. Therefore, we don't trigger onChange in this scenario.\n     * @param inputValue the current form input value\n     */\n    formControlResult(inputValue) {\n        if (this.writingValue || (!this.triggerOnMaskChange && this.maskChanged)) {\n            this.maskChanged = false;\n            return;\n        }\n        if (Array.isArray(this.dropSpecialCharacters)) {\n            this.onChange(this._toNumber(this._removeMask(this._removeSuffix(this._removePrefix(inputValue)), this.dropSpecialCharacters)));\n        }\n        else if (this.dropSpecialCharacters) {\n            this.onChange(this._toNumber(this._checkSymbols(inputValue)));\n        }\n        else {\n            this.onChange(this._removeSuffix(inputValue));\n        }\n    }\n    _toNumber(value) {\n        if (!this.isNumberValue || value === '') {\n            return value;\n        }\n        const num = Number(value);\n        return Number.isNaN(num) ? value : num;\n    }\n    _removeMask(value, specialCharactersForRemove) {\n        return value ? value.replace(this._regExpForRemove(specialCharactersForRemove), '') : value;\n    }\n    _removePrefix(value) {\n        if (!this.prefix) {\n            return value;\n        }\n        return value ? value.replace(this.prefix, '') : value;\n    }\n    _removeSuffix(value) {\n        if (!this.suffix) {\n            return value;\n        }\n        return value ? value.replace(this.suffix, '') : value;\n    }\n    _retrieveSeparatorValue(result) {\n        return this._removeMask(this._removeSuffix(this._removePrefix(result)), this.specialCharacters);\n    }\n    _regExpForRemove(specialCharactersForRemove) {\n        return new RegExp(specialCharactersForRemove.map((item) => `\\\\${item}`).join('|'), 'gi');\n    }\n    _replaceDecimalMarkerToDot(value) {\n        const markers = Array.isArray(this.decimalMarker)\n            ? this.decimalMarker\n            : [this.decimalMarker];\n        return value.replace(this._regExpForRemove(markers), '.');\n    }\n    _checkSymbols(result) {\n        if (result === '') {\n            return result;\n        }\n        const separatorPrecision = this._retrieveSeparatorPrecision(this.maskExpression);\n        const separatorValue = this._replaceDecimalMarkerToDot(this._retrieveSeparatorValue(result));\n        if (!this.isNumberValue) {\n            return separatorValue;\n        }\n        if (separatorPrecision) {\n            if (result === this.decimalMarker) {\n                return null;\n            }\n            return this._checkPrecision(this.maskExpression, separatorValue);\n        }\n        else {\n            return Number(separatorValue);\n        }\n    }\n    // TODO should think about helpers or separting decimal precision to own property\n    _retrieveSeparatorPrecision(maskExpretion) {\n        const matcher = maskExpretion.match(new RegExp(`^separator\\\\.([^d]*)`));\n        return matcher ? Number(matcher[1]) : null;\n    }\n    _checkPrecision(separatorExpression, separatorValue) {\n        if (separatorExpression.indexOf('2') > 0) {\n            return Number(separatorValue).toFixed(2);\n        }\n        return Number(separatorValue);\n    }\n}\nNgxMaskService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: NgxMaskService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nNgxMaskService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: NgxMaskService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: NgxMaskService, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @internal\n */\nfunction _configFactory() {\n    const initConfig = inject(INITIAL_CONFIG);\n    const configValue = inject(NEW_CONFIG);\n    return configValue instanceof Function\n        ? { ...initConfig, ...configValue() }\n        : { ...initConfig, ...configValue };\n}\nfunction provideNgxMask(configValue) {\n    return [\n        {\n            provide: NEW_CONFIG,\n            useValue: configValue,\n        },\n        {\n            provide: INITIAL_CONFIG,\n            useValue: initialConfig,\n        },\n        {\n            provide: NGX_MASK_CONFIG,\n            useFactory: _configFactory,\n        },\n        NgxMaskService,\n    ];\n}\nfunction provideEnvironmentNgxMask(configValue) {\n    return makeEnvironmentProviders(provideNgxMask(configValue));\n}\n\nclass NgxMaskDirective {\n    constructor() {\n        // eslint-disable-next-line @angular-eslint/no-input-rename\n        this.maskExpression = '';\n        this.specialCharacters = [];\n        this.patterns = {};\n        this.prefix = '';\n        this.suffix = '';\n        this.thousandSeparator = ' ';\n        this.decimalMarker = '.';\n        this.dropSpecialCharacters = null;\n        this.hiddenInput = null;\n        this.showMaskTyped = null;\n        this.placeHolderCharacter = null;\n        this.shownMaskExpression = null;\n        this.showTemplate = null;\n        this.clearIfNotMatch = null;\n        this.validation = null;\n        this.separatorLimit = null;\n        this.allowNegativeNumbers = null;\n        this.leadZeroDateTime = null;\n        this.triggerOnMaskChange = null;\n        this.maskFilled = new EventEmitter();\n        this._maskValue = '';\n        this._position = null;\n        this._maskExpressionArray = [];\n        this._justPasted = false;\n        this.document = inject(DOCUMENT);\n        this._maskService = inject(NgxMaskService, { self: true });\n        this._config = inject(NGX_MASK_CONFIG);\n        // eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/no-explicit-any\n        this.onChange = (_) => { };\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.onTouch = () => { };\n    }\n    ngOnChanges(changes) {\n        const { maskExpression, specialCharacters, patterns, prefix, suffix, thousandSeparator, decimalMarker, dropSpecialCharacters, hiddenInput, showMaskTyped, placeHolderCharacter, shownMaskExpression, showTemplate, clearIfNotMatch, validation, separatorLimit, allowNegativeNumbers, leadZeroDateTime, triggerOnMaskChange, } = changes;\n        if (maskExpression) {\n            if (maskExpression.currentValue !== maskExpression.previousValue &&\n                !maskExpression.firstChange) {\n                this._maskService.maskChanged = true;\n            }\n            if (maskExpression.currentValue && maskExpression.currentValue.split('||').length > 1) {\n                this._maskExpressionArray = maskExpression.currentValue\n                    .split('||')\n                    .sort((a, b) => {\n                    return a.length - b.length;\n                });\n                this._setMask();\n            }\n            else {\n                this._maskExpressionArray = [];\n                this._maskValue = maskExpression.currentValue || '';\n                this._maskService.maskExpression = this._maskValue;\n            }\n        }\n        if (specialCharacters) {\n            if (!specialCharacters.currentValue || !Array.isArray(specialCharacters.currentValue)) {\n                return;\n            }\n            else {\n                this._maskService.specialCharacters = specialCharacters.currentValue || [];\n            }\n        }\n        // Only overwrite the mask available patterns if a pattern has actually been passed in\n        if (patterns && patterns.currentValue) {\n            this._maskService.patterns = patterns.currentValue;\n        }\n        if (prefix) {\n            this._maskService.prefix = prefix.currentValue;\n        }\n        if (suffix) {\n            this._maskService.suffix = suffix.currentValue;\n        }\n        if (thousandSeparator) {\n            this._maskService.thousandSeparator = thousandSeparator.currentValue;\n        }\n        if (decimalMarker) {\n            this._maskService.decimalMarker = decimalMarker.currentValue;\n        }\n        if (dropSpecialCharacters) {\n            this._maskService.dropSpecialCharacters = dropSpecialCharacters.currentValue;\n        }\n        if (hiddenInput) {\n            this._maskService.hiddenInput = hiddenInput.currentValue;\n        }\n        if (showMaskTyped) {\n            this._maskService.showMaskTyped = showMaskTyped.currentValue;\n        }\n        if (placeHolderCharacter) {\n            this._maskService.placeHolderCharacter = placeHolderCharacter.currentValue;\n        }\n        if (shownMaskExpression) {\n            this._maskService.shownMaskExpression = shownMaskExpression.currentValue;\n        }\n        if (showTemplate) {\n            this._maskService.showTemplate = showTemplate.currentValue;\n        }\n        if (clearIfNotMatch) {\n            this._maskService.clearIfNotMatch = clearIfNotMatch.currentValue;\n        }\n        if (validation) {\n            this._maskService.validation = validation.currentValue;\n        }\n        if (separatorLimit) {\n            this._maskService.separatorLimit = separatorLimit.currentValue;\n        }\n        if (allowNegativeNumbers) {\n            this._maskService.allowNegativeNumbers = allowNegativeNumbers.currentValue;\n            if (this._maskService.allowNegativeNumbers) {\n                this._maskService.specialCharacters = this._maskService.specialCharacters.filter((c) => c !== '-');\n            }\n        }\n        if (leadZeroDateTime) {\n            this._maskService.leadZeroDateTime = leadZeroDateTime.currentValue;\n        }\n        if (triggerOnMaskChange) {\n            this._maskService.triggerOnMaskChange = triggerOnMaskChange.currentValue;\n        }\n        this._applyMask();\n    }\n    // eslint-disable-next-line complexity\n    validate({ value }) {\n        if (!this._maskService.validation || !this._maskValue) {\n            return null;\n        }\n        if (this._maskService.ipError) {\n            return this._createValidationError(value);\n        }\n        if (this._maskService.cpfCnpjError) {\n            return this._createValidationError(value);\n        }\n        if (this._maskValue.startsWith('separator')) {\n            return null;\n        }\n        if (withoutValidation.includes(this._maskValue)) {\n            return null;\n        }\n        if (this._maskService.clearIfNotMatch) {\n            return null;\n        }\n        if (timeMasks.includes(this._maskValue)) {\n            return this._validateTime(value);\n        }\n        if (value && value.toString().length >= 1) {\n            let counterOfOpt = 0;\n            for (const key in this._maskService.patterns) {\n                if (this._maskService.patterns[key]?.optional) {\n                    if (this._maskValue.indexOf(key) !== this._maskValue.lastIndexOf(key)) {\n                        const opt = this._maskValue\n                            .split('')\n                            .filter((i) => i === key)\n                            .join('');\n                        counterOfOpt += opt.length;\n                    }\n                    else if (this._maskValue.indexOf(key) !== -1) {\n                        counterOfOpt++;\n                    }\n                    if (this._maskValue.indexOf(key) !== -1 &&\n                        value.toString().length >= this._maskValue.indexOf(key)) {\n                        return null;\n                    }\n                    if (counterOfOpt === this._maskValue.length) {\n                        return null;\n                    }\n                }\n            }\n            if (this._maskValue.indexOf('{') === 1 &&\n                value.toString().length ===\n                    this._maskValue.length +\n                        Number((this._maskValue.split('{')[1] ?? '').split('}')[0]) -\n                        4) {\n                return null;\n            }\n            if (this._maskValue.indexOf('*') === 1 || this._maskValue.indexOf('?') === 1) {\n                return null;\n            }\n            else if ((this._maskValue.indexOf('*') > 1 &&\n                value.toString().length < this._maskValue.indexOf('*')) ||\n                (this._maskValue.indexOf('?') > 1 &&\n                    value.toString().length < this._maskValue.indexOf('?')) ||\n                this._maskValue.indexOf('{') === 1) {\n                return this._createValidationError(value);\n            }\n            if (this._maskValue.indexOf('*') === -1 || this._maskValue.indexOf('?') === -1) {\n                const length = this._maskService.dropSpecialCharacters\n                    ? this._maskValue.length -\n                        this._maskService.checkSpecialCharAmount(this._maskValue) -\n                        counterOfOpt\n                    : this._maskValue.length - counterOfOpt;\n                if (value.toString().length < length) {\n                    return this._createValidationError(value);\n                }\n            }\n        }\n        if (value) {\n            this.maskFilled.emit();\n            return null;\n        }\n        return null;\n    }\n    onPaste() {\n        this._justPasted = true;\n    }\n    onModelChange(value) {\n        // on form reset we need to update the actualValue\n        if ((value === '' || value === null || value === undefined) &&\n            this._maskService.actualValue) {\n            this._maskService.actualValue = this._maskService.getActualValue('');\n        }\n    }\n    onInput(e) {\n        const el = e.target;\n        this._inputValue = el.value;\n        this._setMask();\n        if (!this._maskValue) {\n            this.onChange(el.value);\n            return;\n        }\n        let position = el.selectionStart === 1\n            ? el.selectionStart + this._maskService.prefix.length\n            : el.selectionStart;\n        let caretShift = 0;\n        let backspaceShift = false;\n        this._maskService.applyValueChanges(position, this._justPasted, this._code === 'Backspace' || this._code === 'Delete', (shift, _backspaceShift) => {\n            this._justPasted = false;\n            caretShift = shift;\n            backspaceShift = _backspaceShift;\n        });\n        // only set the selection if the element is active\n        if (this._getActiveElement() !== el) {\n            return;\n        }\n        // update position after applyValueChanges to prevent cursor on wrong position when it has an array of maskExpression\n        if (this._maskExpressionArray.length) {\n            position =\n                el.selectionStart === 1\n                    ? el.selectionStart + this._maskService.prefix.length\n                    : el.selectionStart;\n        }\n        this._position =\n            this._position === 1 && this._inputValue.length === 1 ? null : this._position;\n        let positionToApply = this._position\n            ? this._inputValue.length + position + caretShift\n            : position + (this._code === 'Backspace' && !backspaceShift ? 0 : caretShift);\n        if (positionToApply > this._getActualInputLength()) {\n            positionToApply = this._getActualInputLength();\n        }\n        if (positionToApply < 0) {\n            positionToApply = 0;\n        }\n        el.setSelectionRange(positionToApply, positionToApply);\n        this._position = null;\n    }\n    onBlur() {\n        if (this._maskValue) {\n            this._maskService.clearIfNotMatchFn();\n        }\n        this.onTouch();\n    }\n    onClick(e) {\n        if (!this._maskValue) {\n            return;\n        }\n        const el = e.target;\n        const posStart = 0;\n        const posEnd = 0;\n        if (el !== null &&\n            el.selectionStart !== null &&\n            el.selectionStart === el.selectionEnd &&\n            el.selectionStart > this._maskService.prefix.length &&\n            // eslint-disable-next-line\n            e.keyCode !== 38) {\n            if (this._maskService.showMaskTyped) {\n                // We are showing the mask in the input\n                this._maskService.maskIsShown = this._maskService.showMaskInInput();\n                if (el.setSelectionRange &&\n                    this._maskService.prefix + this._maskService.maskIsShown === el.value) {\n                    // the input ONLY contains the mask, so position the cursor at the start\n                    el.focus();\n                    el.setSelectionRange(posStart, posEnd);\n                }\n                else {\n                    // the input contains some characters already\n                    if (el.selectionStart > this._maskService.actualValue.length) {\n                        // if the user clicked beyond our value's length, position the cursor at the end of our value\n                        el.setSelectionRange(this._maskService.actualValue.length, this._maskService.actualValue.length);\n                    }\n                }\n            }\n        }\n        const nextValue = el &&\n            (!el.value || el.value === this._maskService.prefix\n                ? this._maskService.prefix + this._maskService.maskIsShown\n                : el.value);\n        /** Fix of cursor position jumping to end in most browsers no matter where cursor is inserted onFocus */\n        if (el && el.value !== nextValue) {\n            el.value = nextValue;\n        }\n        /** fix of cursor position with prefix when mouse click occur */\n        if (el &&\n            (el.selectionStart || el.selectionEnd) <=\n                this._maskService.prefix.length) {\n            el.selectionStart = this._maskService.prefix.length;\n            return;\n        }\n        /** select only inserted text */\n        if (el && el.selectionEnd > this._getActualInputLength()) {\n            el.selectionEnd = this._getActualInputLength();\n        }\n    }\n    // eslint-disable-next-line complexity\n    onKeyDown(e) {\n        if (!this._maskValue) {\n            return;\n        }\n        this._code = e.code ? e.code : e.key;\n        const el = e.target;\n        this._inputValue = el.value;\n        this._setMask();\n        if (e.keyCode === 38) {\n            e.preventDefault();\n        }\n        if (e.keyCode === 37 || e.keyCode === 8 || e.keyCode === 46) {\n            if (e.keyCode === 8 && el.value.length === 0) {\n                el.selectionStart = el.selectionEnd;\n            }\n            if (e.keyCode === 8 && el.selectionStart !== 0) {\n                // If specialChars is false, (shouldn't ever happen) then set to the defaults\n                this.specialCharacters = this.specialCharacters?.length\n                    ? this.specialCharacters\n                    : this._config.specialCharacters;\n                if (this.prefix.length > 1 && el.selectionStart <= this.prefix.length) {\n                    el.setSelectionRange(this.prefix.length, el.selectionEnd);\n                }\n                else {\n                    if (this._inputValue.length !== el.selectionStart &&\n                        el.selectionStart !== 1) {\n                        while (this.specialCharacters.includes((this._inputValue[el.selectionStart - 1] ?? '').toString()) &&\n                            ((this.prefix.length >= 1 &&\n                                el.selectionStart > this.prefix.length) ||\n                                this.prefix.length === 0)) {\n                            el.setSelectionRange(el.selectionStart - 1, el.selectionEnd);\n                        }\n                    }\n                }\n            }\n            this.checkSelectionOnDeletion(el);\n            if (this._maskService.prefix.length &&\n                el.selectionStart <= this._maskService.prefix.length &&\n                el.selectionEnd <= this._maskService.prefix.length) {\n                e.preventDefault();\n            }\n            const cursorStart = el.selectionStart;\n            if (e.keyCode === 8 &&\n                !el.readOnly &&\n                cursorStart === 0 &&\n                el.selectionEnd === el.value.length &&\n                el.value.length !== 0) {\n                this._position = this._maskService.prefix ? this._maskService.prefix.length : 0;\n                this._maskService.applyMask(this._maskService.prefix, this._maskService.maskExpression, this._position);\n            }\n        }\n        if (!!this.suffix &&\n            this.suffix.length > 1 &&\n            this._inputValue.length - this.suffix.length < el.selectionStart) {\n            el.setSelectionRange(this._inputValue.length - this.suffix.length, this._inputValue.length);\n        }\n        else if ((e.keyCode === 65 && e.ctrlKey) ||\n            (e.keyCode === 65 && e.metaKey) // Cmd + A (Mac)\n        ) {\n            el.setSelectionRange(0, this._getActualInputLength());\n            e.preventDefault();\n        }\n        this._maskService.selStart = el.selectionStart;\n        this._maskService.selEnd = el.selectionEnd;\n    }\n    /** It writes the value in the input */\n    async writeValue(inputValue) {\n        if (typeof inputValue === 'object' && inputValue !== null && 'value' in inputValue) {\n            if ('disable' in inputValue) {\n                this.setDisabledState(Boolean(inputValue.disable));\n            }\n            // eslint-disable-next-line no-param-reassign\n            inputValue = inputValue.value;\n        }\n        if (typeof inputValue === 'number' || this._maskValue.startsWith('separator')) {\n            // eslint-disable-next-line no-param-reassign\n            inputValue = this._maskService.numberToString(inputValue);\n            if (!Array.isArray(this.decimalMarker)) {\n                // eslint-disable-next-line no-param-reassign\n                inputValue =\n                    this.decimalMarker !== '.'\n                        ? inputValue.replace('.', this.decimalMarker)\n                        : inputValue;\n            }\n            this._maskService.isNumberValue = true;\n        }\n        if (typeof inputValue !== 'string') {\n            // eslint-disable-next-line no-param-reassign\n            inputValue = '';\n        }\n        this._inputValue = inputValue;\n        this._setMask();\n        if ((inputValue && this._maskService.maskExpression) ||\n            (this._maskService.maskExpression &&\n                (this._maskService.prefix || this._maskService.showMaskTyped))) {\n            // Let the service we know we are writing value so that triggering onChange function won't happen during applyMask\n            this._maskService.writingValue = true;\n            this._maskService.formElementProperty = [\n                'value',\n                this._maskService.applyMask(inputValue, this._maskService.maskExpression),\n            ];\n            // Let the service know we've finished writing value\n            this._maskService.writingValue = false;\n        }\n        else {\n            this._maskService.formElementProperty = ['value', inputValue];\n        }\n        this._inputValue = inputValue;\n    }\n    registerOnChange(fn) {\n        this._maskService.onChange = this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouch = fn;\n    }\n    _getActiveElement(document = this.document) {\n        const shadowRootEl = document?.activeElement?.shadowRoot;\n        if (!shadowRootEl?.activeElement) {\n            return document.activeElement;\n        }\n        else {\n            return this._getActiveElement(shadowRootEl);\n        }\n    }\n    checkSelectionOnDeletion(el) {\n        el.selectionStart = Math.min(Math.max(this.prefix.length, el.selectionStart), this._inputValue.length - this.suffix.length);\n        el.selectionEnd = Math.min(Math.max(this.prefix.length, el.selectionEnd), this._inputValue.length - this.suffix.length);\n    }\n    /** It disables the input element */\n    setDisabledState(isDisabled) {\n        this._maskService.formElementProperty = ['disabled', isDisabled];\n    }\n    _repeatPatternSymbols(maskExp) {\n        return ((maskExp.match(/{[0-9]+}/) &&\n            maskExp\n                .split('')\n                .reduce((accum, currVal, index) => {\n                this._start = currVal === '{' ? index : this._start;\n                if (currVal !== '}') {\n                    return this._maskService._findSpecialChar(currVal)\n                        ? accum + currVal\n                        : accum;\n                }\n                this._end = index;\n                const repeatNumber = Number(maskExp.slice(this._start + 1, this._end));\n                const replaceWith = new Array(repeatNumber + 1).join(maskExp[this._start - 1]);\n                return accum + replaceWith;\n            }, '')) ||\n            maskExp);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _applyMask() {\n        this._maskService.maskExpression = this._repeatPatternSymbols(this._maskValue || '');\n        this._maskService.formElementProperty = [\n            'value',\n            this._maskService.applyMask(this._inputValue, this._maskService.maskExpression),\n        ];\n    }\n    _validateTime(value) {\n        const rowMaskLen = this._maskValue\n            .split('')\n            .filter((s) => s !== ':').length;\n        if (!value) {\n            return null; // Don't validate empty values to allow for optional form control\n        }\n        if ((+(value[value.length - 1] ?? -1) === 0 && value.length < rowMaskLen) ||\n            value.length <= rowMaskLen - 2) {\n            return this._createValidationError(value);\n        }\n        return null;\n    }\n    _getActualInputLength() {\n        return (this._maskService.actualValue.length ||\n            this._maskService.actualValue.length + this._maskService.prefix.length);\n    }\n    _createValidationError(actualValue) {\n        return {\n            mask: {\n                requiredMask: this._maskValue,\n                actualValue,\n            },\n        };\n    }\n    _setMask() {\n        if (this._maskExpressionArray.length > 0) {\n            this._maskExpressionArray.some((mask) => {\n                const test = this._maskService.removeMask(this._inputValue)?.length <=\n                    this._maskService.removeMask(mask)?.length;\n                if (this._inputValue && test) {\n                    this._maskValue = mask;\n                    this.maskExpression = mask;\n                    this._maskService.maskExpression = mask;\n                    return test;\n                }\n                else {\n                    const expression = this._maskExpressionArray[this._maskExpressionArray.length - 1] ?? '';\n                    this._maskValue =\n                        this.maskExpression =\n                            this._maskService.maskExpression =\n                                expression;\n                }\n            });\n        }\n    }\n}\nNgxMaskDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: NgxMaskDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nNgxMaskDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.2\", type: NgxMaskDirective, isStandalone: true, selector: \"input[mask], textarea[mask]\", inputs: { maskExpression: [\"mask\", \"maskExpression\"], specialCharacters: \"specialCharacters\", patterns: \"patterns\", prefix: \"prefix\", suffix: \"suffix\", thousandSeparator: \"thousandSeparator\", decimalMarker: \"decimalMarker\", dropSpecialCharacters: \"dropSpecialCharacters\", hiddenInput: \"hiddenInput\", showMaskTyped: \"showMaskTyped\", placeHolderCharacter: \"placeHolderCharacter\", shownMaskExpression: \"shownMaskExpression\", showTemplate: \"showTemplate\", clearIfNotMatch: \"clearIfNotMatch\", validation: \"validation\", separatorLimit: \"separatorLimit\", allowNegativeNumbers: \"allowNegativeNumbers\", leadZeroDateTime: \"leadZeroDateTime\", triggerOnMaskChange: \"triggerOnMaskChange\" }, outputs: { maskFilled: \"maskFilled\" }, host: { listeners: { \"paste\": \"onPaste()\", \"ngModelChange\": \"onModelChange($event)\", \"input\": \"onInput($event)\", \"blur\": \"onBlur()\", \"click\": \"onClick($event)\", \"keydown\": \"onKeyDown($event)\" } }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: NgxMaskDirective,\n            multi: true,\n        },\n        {\n            provide: NG_VALIDATORS,\n            useExisting: NgxMaskDirective,\n            multi: true,\n        },\n        NgxMaskService,\n    ], exportAs: [\"mask\", \"ngxMask\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: NgxMaskDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[mask], textarea[mask]',\n                    standalone: true,\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: NgxMaskDirective,\n                            multi: true,\n                        },\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: NgxMaskDirective,\n                            multi: true,\n                        },\n                        NgxMaskService,\n                    ],\n                    exportAs: 'mask,ngxMask',\n                }]\n        }], propDecorators: { maskExpression: [{\n                type: Input,\n                args: ['mask']\n            }], specialCharacters: [{\n                type: Input\n            }], patterns: [{\n                type: Input\n            }], prefix: [{\n                type: Input\n            }], suffix: [{\n                type: Input\n            }], thousandSeparator: [{\n                type: Input\n            }], decimalMarker: [{\n                type: Input\n            }], dropSpecialCharacters: [{\n                type: Input\n            }], hiddenInput: [{\n                type: Input\n            }], showMaskTyped: [{\n                type: Input\n            }], placeHolderCharacter: [{\n                type: Input\n            }], shownMaskExpression: [{\n                type: Input\n            }], showTemplate: [{\n                type: Input\n            }], clearIfNotMatch: [{\n                type: Input\n            }], validation: [{\n                type: Input\n            }], separatorLimit: [{\n                type: Input\n            }], allowNegativeNumbers: [{\n                type: Input\n            }], leadZeroDateTime: [{\n                type: Input\n            }], triggerOnMaskChange: [{\n                type: Input\n            }], maskFilled: [{\n                type: Output\n            }], onPaste: [{\n                type: HostListener,\n                args: ['paste']\n            }], onModelChange: [{\n                type: HostListener,\n                args: ['ngModelChange', ['$event']]\n            }], onInput: [{\n                type: HostListener,\n                args: ['input', ['$event']]\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\nclass NgxMaskPipe {\n    constructor() {\n        this.defaultOptions = {};\n        this._maskService = inject(NgxMaskService);\n    }\n    transform(value, mask, { patterns, ...config } = {}) {\n        const currentConfig = {\n            maskExpression: mask,\n            ...this.defaultOptions,\n            ...config,\n            patterns: {\n                ...this._maskService.patterns,\n                ...patterns,\n            },\n        };\n        Object.entries(currentConfig).forEach(([key, value]) => {\n            //eslint-disable-next-line  @typescript-eslint/no-explicit-any\n            this._maskService[key] = value;\n        });\n        return this._maskService.applyMask(`${value}`, mask);\n    }\n}\nNgxMaskPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: NgxMaskPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nNgxMaskPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.2.2\", ngImport: i0, type: NgxMaskPipe, isStandalone: true, name: \"mask\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.2\", ngImport: i0, type: NgxMaskPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'mask',\n                    pure: true,\n                    standalone: true,\n                }]\n        }] });\n\nconst commonjsGlobal = typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof window !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : typeof self !== 'undefined'\n                ? self\n                : {};\n(function () {\n    if (!commonjsGlobal.KeyboardEvent) {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        commonjsGlobal.KeyboardEvent = function (_eventType, _init) { };\n    }\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { INITIAL_CONFIG, NEW_CONFIG, NGX_MASK_CONFIG, NgxMaskApplierService, NgxMaskDirective, NgxMaskPipe, NgxMaskService, initialConfig, provideEnvironmentNgxMask, provideNgxMask, timeMasks, withoutValidation };\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["ControlInput","constructor","args","value","label","selectOptions","config","name","type","placeholder","hint","required","disabled","readonly","email","maxlength","minlength","pattern","mask","customValidators","maskConfig","dateConfig","errors","BehaviorSubject","MasterTable","router","service","data","loadingService","title","targetFilters","columns","path","add","navigate","changeFilter","filter","target","filterChange$","next","edit","row","console","log","id","delete","activeLoading","changeTable","event","NG_VALIDATORS","cpfValidator","CpfValidatorDirective","validate","control","selectors","inputs","hasActive","features","provide","useExisting","multi","CommonModule","UrlValidatorDirective","DrivenFormsDirectivesModule","declarations","imports","exports","urlValidator","undefined","cpf","replace","length","match","invalidCpf","sum","rest","i","parseInt","substring","urlRegex","test","invalidUrl","firstValueFrom","environment","BaseModelService","subPath","http","apiUrl","request","req","getAll","get","getByFilter","filterQuery","Object","entries","reduce","acc","key","index","getById","relations","rel","join","create","item","post","createMany","update","patch","updateMany","production","EmptyError","SafeSubscriber","source","hasConfig","Promise","resolve","reject","subscriber","unsubscribe","error","complete","defaultValue","subscribe","i0","InjectionToken","EventEmitter","inject","Injectable","ElementRef","Renderer2","makeEnvironmentProviders","Directive","Input","Output","HostListener","Pipe","DOCUMENT","NG_VALUE_ACCESSOR","NGX_MASK_CONFIG","NEW_CONFIG","INITIAL_CONFIG","initialConfig","suffix","prefix","thousandSeparator","decimalMarker","clearIfNotMatch","showTemplate","showMaskTyped","placeHolderCharacter","dropSpecialCharacters","hiddenInput","shownMaskExpression","separatorLimit","allowNegativeNumbers","validation","specialCharacters","leadZeroDateTime","triggerOnMaskChange","maskFilled","patterns","RegExp","optional","X","symbol","A","S","U","L","d","m","M","H","h","s","timeMasks","withoutValidation","NgxMaskApplierService","_config","_shift","Set","maskExpression","actualValue","_formatWithSeparators","str","thousandSeparatorChar","decimalChars","precision","x","decimalChar","Array","isArray","regExp","map","v","indexOf","split","decimals","res","slice","rgx","percentage","Number","getPrecision","Infinity","checkAndRemoveSuffix","inputValue","substr","includes","checkInputPrecision","marker","find","dm","precisionRegEx","_charToRegExpExpression","precisionMatch","precisionMatchLength","diff","_compareOrIncludes","applyMaskWithPattern","maskAndPattern","customPattern","applyMask","position","justPasted","backspaced","cb","cursor","result","backspaceShift","shift","stepBack","inputArray","toString","valuesIP","ipError","_validIP","arr","push","cpfCnpjError","startsWith","_stripToDecimal","base","thousandSeparatorCharEscaped","invalidChars","invalidCharRegexp","strForSep","commaShift","shiftStep","clear","inputSymbol","_checkSymbolMask","_shiftStep","daysCount","monthsCount","withoutDays","day1monthInput","day2monthInput","day1monthPaste","day2monthPaste","_findSpecialChar","newPosition","has","actualShift","onlySpecial","every","char","val","maskSymbol","idx","isDecimalMarker","charsToEscape","inputLength","comparedValue","excludedValue","some","ɵfac","ɵprov","NgxMaskService","arguments","isNumberValue","maskIsShown","selStart","selEnd","writingValue","maskChanged","onChange","_","document","_elementRef","_renderer","showMaskInInput","formControlResult","getSymbol","newInputValue","actualResult","splice","removeMask","shiftTypedSymbols","Boolean","getActualValue","hideInput","resLen","prefNmask","countSkipedSymbol","_numberSkipedSymbols","regex","exec","applyValueChanges","formElement","nativeElement","_getActiveElement","clearIfNotMatchFn","curr","compare","maskChar","symbolToReplace","currSymbol","replaceSymbol","numberToString","String","toLocaleString","useGrouping","maximumFractionDigits","inputVal","Error","_checkForIp","_checkForCpfCnpj","formElementProperty","then","setProperty","checkSpecialCharAmount","chars","_removeMask","_removeSuffix","_removePrefix","concat","cnpj","shadowRootEl","activeElement","shadowRoot","_toNumber","_checkSymbols","num","isNaN","specialCharactersForRemove","_regExpForRemove","_retrieveSeparatorValue","_replaceDecimalMarkerToDot","markers","separatorPrecision","_retrieveSeparatorPrecision","separatorValue","_checkPrecision","maskExpretion","matcher","separatorExpression","toFixed","_configFactory","initConfig","configValue","Function","provideNgxMask","useValue","useFactory","provideEnvironmentNgxMask","NgxMaskDirective","_maskValue","_position","_maskExpressionArray","_justPasted","_maskService","self","onTouch","ngOnChanges","changes","currentValue","previousValue","firstChange","sort","a","b","_setMask","c","_applyMask","_createValidationError","_validateTime","counterOfOpt","lastIndexOf","opt","emit","onPaste","onModelChange","onInput","e","el","_inputValue","selectionStart","caretShift","_code","_backspaceShift","positionToApply","_getActualInputLength","setSelectionRange","onBlur","onClick","posStart","posEnd","selectionEnd","keyCode","focus","nextValue","onKeyDown","code","preventDefault","checkSelectionOnDeletion","cursorStart","readOnly","ctrlKey","metaKey","writeValue","setDisabledState","disable","registerOnChange","fn","registerOnTouched","Math","min","max","isDisabled","_repeatPatternSymbols","maskExp","accum","currVal","_start","_end","repeatNumber","replaceWith","rowMaskLen","requiredMask","expression","ɵdir","selector","standalone","providers","exportAs","NgxMaskPipe","defaultOptions","transform","currentConfig","forEach","ɵpipe","pure","commonjsGlobal","globalThis","window","global","KeyboardEvent","_eventType","_init"],"sourceRoot":"webpack:///","x_google_ignoreList":[9,10,11]}
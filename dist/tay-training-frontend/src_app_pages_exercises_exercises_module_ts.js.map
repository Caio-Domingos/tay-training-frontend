{"version":3,"file":"src_app_pages_exercises_exercises_module_ts.js","mappings":"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","sources":["./src/app/pages/exercises/exercise-details/exercise-details.component.ts","./src/app/pages/exercises/exercise-details/exercise-details.component.html","./src/app/pages/exercises/exercises-routing.module.ts","./src/app/pages/exercises/exercises.component.ts","./src/app/pages/exercises/exercises.component.html","./src/app/pages/exercises/exercises.module.ts"],"sourcesContent":["import { ExercisesService } from './../../../services/exercises.service';\nimport { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ControlInput } from 'src/app/core/classes/control.class';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { UtilsService } from 'src/app/services/utils.service';\n\n@Component({\n  selector: 'app-exercise-details',\n  templateUrl: './exercise-details.component.html',\n  styleUrls: [\n    '../../../core/shared/scss/details-item.shared.scss',\n    './exercise-details.component.scss',\n  ],\n})\nexport class ExerciseDetailsComponent {\n  form: { [id: string]: ControlInput } = {\n    name: new ControlInput({\n      label: 'Nome',\n      config: {\n        name: 'name',\n        hint: 'Nome do usuário',\n        required: true,\n        errors: {\n          required: 'Campo obrigatório',\n        },\n      },\n    }),\n    description: new ControlInput({\n      label: 'Descrição',\n      config: {\n        name: 'description',\n        required: true,\n        errors: {\n          required: 'Campo obrigatório',\n        },\n      },\n    }),\n    hasMethod: new ControlInput({\n      label: 'Tem método?',\n      value: true,\n      config: {\n        name: 'hasMethod',\n      },\n    }),\n    videoUrl: new ControlInput({\n      label: 'Link do treino',\n      config: {\n        name: 'videoUrl',\n\n        required: true,\n        maxlength: 100,\n        minlength: 10,\n        customValidators: {\n          urlValidator: true,\n        },\n        errors: {\n          required: 'Campo obrigatório',\n          minlength: 'Mínimo de 10 caracteres',\n          maxlength: 'Máximo de 100 caracteres',\n          invalidUrl: 'Url inválida',\n        },\n      },\n    }),\n  };\n\n  @ViewChild('reactiveForm') formRef!: NgForm;\n\n  isEdit = false;\n  editId: number | null = null;\n  constructor(\n    private utilsService: UtilsService,\n    private actRoute: ActivatedRoute,\n    private router: Router,\n    public loadingService: LoadingService,\n    private exercisesService: ExercisesService\n  ) {\n    actRoute.params.subscribe((params) => {\n      console.log('params', params);\n    });\n  }\n\n  ngOnInit(): void {}\n  ngAfterViewInit() {\n    this.actRoute.params.subscribe(async (params) => {\n      if (params['id'] !== 'new') {\n        this.isEdit = true;\n        this.editId = +params['id'];\n        // Load data...\n        setTimeout(() => {\n          this.loadingService.activeLoading();\n        }, 50);\n        // setTimeout(() => {\n        //   this.formRef.setValue({\n        //     name: 'Teste',\n        //     description: 'Mais um teste',\n        //   });\n        //   this.loadingService.deactiveLoading();\n        // }, 2000);\n\n        // Get data from API\n        try {\n          const data = await this.exercisesService.getById(+params['id']);\n          console.log('data', data);\n          this.formRef.setValue({\n            name: data.name,\n            description: data.description,\n            videoUrl: data.videoUrl,\n            hasMethod: data.hasMethod,\n          });\n        } catch (error) {\n          console.error(error);\n        } finally {\n          setTimeout(() => {\n            this.loadingService.deactiveLoading();\n          }, 200);\n        }\n      }\n    });\n  }\n\n  getErrorText(control: ControlInput) {\n    return this.utilsService.getErrorText(this.formRef, control);\n  }\n\n  issueValues() {\n    if (!this.formRef || !this.formRef.form) {\n      return '';\n    }\n\n    const controls = this.formRef.form.controls;\n    const keys = Object.keys(controls);\n\n    let ret = '';\n    for (const key of keys) {\n      if (this.getErrorText(this.form[key]))\n        ret += `${this.form[key].label}: ${this.getErrorText(\n          this.form[key]\n        )}\\r\\n`;\n    }\n\n    return ret;\n  }\n\n  maskFilled(control: ControlInput) {\n    console.log('maskFilled');\n  }\n\n  dateEvents(name: string, event: any) {\n    console.log('dateEvents', name, event);\n  }\n\n  async onSubmit() {\n    console.log('onSubmit', this.formRef);\n    const data = this.formRef.value;\n    console.log('form value', data);\n\n    if (this.isEdit) {\n      // Update\n\n      try {\n        await this.exercisesService.update(this.editId!, data);\n        this.router.navigate(['exercises']);\n      } catch (error) {\n        console.log('error on update', error);\n      }\n    } else {\n      // Create\n      try {\n        await this.exercisesService.create(data);\n        this.router.navigate(['exercises']);\n      } catch (error) {\n        console.log('error on create', error);\n      }\n    }\n  }\n}\n","<section class=\"master mat-elevation-z2\">\n  <div class=\"loading-shade all\" *ngIf=\"loadingService.loading\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <form class=\"form\" #reactiveForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <mat-form-field>\n          <mat-label>{{ form[\"name\"].label }}</mat-label>\n          <input\n            matInput\n            [type]=\"form['name'].config.type\"\n            [name]=\"form['name'].config.name\"\n            [(ngModel)]=\"form['name'].value\"\n            [placeholder]=\"form['name'].config.placeholder\"\n            [disabled]=\"form['name'].config.disabled\"\n            [readonly]=\"form['name'].config.readonly\"\n            [required]=\"form['name'].config.required\"\n            [minlength]=\"form['name'].config.minlength\"\n            [maxlength]=\"form['name'].config.maxlength\"\n            [pattern]=\"form['name'].config.pattern\"\n            [email]=\"form['name'].config.email\"\n            [mask]=\"\n              form['name'].config.mask && form['name'].config.maskConfig.mask\n                ? form['name'].config.maskConfig.mask\n                : null\n            \"\n            [dropSpecialCharacters]=\"\n              form['name'].config.mask &&\n              form['name'].config.maskConfig.dropSpecialCharacters\n                ? form['name'].config.maskConfig.dropSpecialCharacters\n                : true\n            \"\n            [validation]=\"\n              form['name'].config.mask &&\n              form['name'].config.maskConfig.validation\n                ? form['name'].config.maskConfig.validation\n                : false\n            \"\n          />\n          <mat-hint *ngIf=\"form['name'].config.hint\">{{\n            form[\"name\"].config.hint\n          }}</mat-hint>\n          <mat-error *ngIf=\"getErrorText(form['name'])\">\n            {{ getErrorText(form[\"name\"]) }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col\">\n        <mat-form-field>\n          <mat-label>{{ form[\"description\"].label }}</mat-label>\n          <input\n            matInput\n            [type]=\"form['description'].config.type\"\n            [name]=\"form['description'].config.name\"\n            [(ngModel)]=\"form['description'].value\"\n            [placeholder]=\"form['description'].config.placeholder\"\n            [disabled]=\"form['description'].config.disabled\"\n            [readonly]=\"form['description'].config.readonly\"\n            [required]=\"form['description'].config.required\"\n            [minlength]=\"form['description'].config.minlength\"\n            [maxlength]=\"form['description'].config.maxlength\"\n            [pattern]=\"form['description'].config.pattern\"\n            [email]=\"form['description'].config.email\"\n            [mask]=\"\n              form['description'].config.mask &&\n              form['description'].config.maskConfig.mask\n                ? form['description'].config.maskConfig.mask\n                : null\n            \"\n            [dropSpecialCharacters]=\"\n              form['description'].config.mask &&\n              form['description'].config.maskConfig.dropSpecialCharacters\n                ? form['description'].config.maskConfig.dropSpecialCharacters\n                : true\n            \"\n            [validation]=\"\n              form['description'].config.mask &&\n              form['description'].config.maskConfig.validation\n                ? form['description'].config.maskConfig.validation\n                : false\n            \"\n          />\n          <mat-hint *ngIf=\"form['description'].config.hint\">{{\n            form[\"description\"].config.hint\n          }}</mat-hint>\n          <mat-error *ngIf=\"getErrorText(form['description'])\">\n            {{ getErrorText(form[\"description\"]) }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <mat-form-field>\n          <mat-label>{{ form[\"videoUrl\"].label }}</mat-label>\n          <input\n            matInput\n            [type]=\"form['videoUrl'].config.type\"\n            [name]=\"form['videoUrl'].config.name\"\n            [(ngModel)]=\"form['videoUrl'].value\"\n            [placeholder]=\"form['videoUrl'].config.placeholder\"\n            [disabled]=\"form['videoUrl'].config.disabled\"\n            [readonly]=\"form['videoUrl'].config.readonly\"\n            [required]=\"form['videoUrl'].config.required\"\n            [minlength]=\"form['videoUrl'].config.minlength\"\n            [maxlength]=\"form['videoUrl'].config.maxlength\"\n            [pattern]=\"form['videoUrl'].config.pattern\"\n            [email]=\"form['videoUrl'].config.email\"\n            [v-url-validator]=\"\n              !!form['videoUrl'].config.customValidators['urlValidator']\n            \"\n            [mask]=\"\n              form['videoUrl'].config.mask && form['videoUrl'].config.maskConfig.mask\n                ? form['videoUrl'].config.maskConfig.mask\n                : null\n            \"\n            [dropSpecialCharacters]=\"\n              form['videoUrl'].config.mask &&\n              form['videoUrl'].config.maskConfig.dropSpecialCharacters\n                ? form['videoUrl'].config.maskConfig.dropSpecialCharacters\n                : true\n            \"\n            [validation]=\"\n              form['videoUrl'].config.mask &&\n              form['videoUrl'].config.maskConfig.validation\n                ? form['videoUrl'].config.maskConfig.validation\n                : false\n            \"\n          />\n          <mat-hint *ngIf=\"form['videoUrl'].config.hint\">{{\n            form[\"videoUrl\"].config.hint\n          }}</mat-hint>\n          <mat-error *ngIf=\"getErrorText(form['videoUrl'])\">\n            {{ getErrorText(form[\"videoUrl\"]) }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col\"></div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <mat-checkbox\n          [name]=\"form['hasMethod'].config.name\"\n          [(ngModel)]=\"form['hasMethod'].value\"\n          [disabled]=\"form['hasMethod'].config.disabled\"\n        >\n          {{ form[\"hasMethod\"].label }}\n        </mat-checkbox>\n      </div>\n      <div class=\"col\"></div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\"></div>\n      <div class=\"col submit-col\">\n        <button\n          class=\"submit-btn\"\n          type=\"button\"\n          mat-raised-button\n          color=\"accent\"\n          [disabled]=\"reactiveForm.invalid\"\n          (click)=\"onSubmit()\"\n        >\n          Salvar\n        </button>\n        <button\n          mat-icon-button\n          aria-label=\"Help Form Button\"\n          type=\"button\"\n          class=\"help-btn\"\n          [class.show]=\"reactiveForm.invalid\"\n          [matTooltip]=\"issueValues()\"\n          matTooltipClass=\"multiline-tooltip\"\n        >\n          <mat-icon>help</mat-icon>\n        </button>\n      </div>\n    </div>\n  </form>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ExercisesComponent } from './exercises.component';\nimport { ExerciseDetailsComponent } from './exercise-details/exercise-details.component';\n\nconst routes: Routes = [\n  { path: '', component: ExercisesComponent },\n  {\n    path: ':id',\n    component: ExerciseDetailsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExercisesRoutingModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MasterTable } from 'src/app/core/classes/master-table.class';\nimport { DataMasterTable } from 'src/app/core/interfaces/data-master-table.interface';\nimport { ExercisesService } from 'src/app/services/exercises.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ServiceBackendItemService } from 'src/app/services/service-backend-item.service';\n\n@Component({\n  selector: 'app-exercises',\n  templateUrl: './exercises.component.html',\n  styleUrls: [\n    '../../core/shared/scss/master-details.shared.scss',\n    './exercises.component.scss',\n  ],\n})\nexport class ExercisesComponent extends MasterTable<ServiceBackendItemService> {\n  constructor(\n    router: Router,\n    public exercisesService: ExercisesService,\n    loadingService: LoadingService\n  ) {\n    const data: DataMasterTable = {\n      title: 'Exercises',\n      targetFilters: ['Name', 'Description'],\n      columns: [\n        { name: 'id', title: 'ID' },\n        { name: 'name', title: 'Name' },\n        // { name: 'description', title: 'Description' },\n      ],\n      path: '/exercises',\n    };\n    super(router, exercisesService, data, loadingService);\n  }\n\n  // add()\n  // changeFilter(filter: any)\n  // edit(row: any)\n  deleteOne(row: any) {\n    console.log('deleteOne', row);\n  }\n  // changeTable(event: any)\n}\n","<section class=\"master mat-elevation-z2\">\n  <div class=\"header-content\">\n    <h2 class=\"title\">{{ title }}</h2>\n    <button mat-raised-button color=\"accent\" (click)=\"add()\">\n      <mat-icon class=\"mat-24\">add</mat-icon>\n      Add\n    </button>\n  </div>\n\n  <div class=\"filter-content\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Filtrar</mat-label>\n      <input\n        matInput\n        placeholder=\"Filtre aqui\"\n        (input)=\"changeFilter($event)\"\n      />\n\n      <mat-icon matPrefix>search</mat-icon>\n      <mat-hint>Filtre por {{ targetFilters.join(\", \") }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <!-- Table -->\n  <app-master-table\n    [columns]=\"columns\"\n    [service]=\"exercisesService\"\n    functionName=\"getByFilter\"\n    [filterChange$]=\"filterChange$\"\n    (edit$)=\"edit($event)\"\n    (delete$)=\"delete($event)\"\n    (changeTable$)=\"changeTable($event)\"\n  ></app-master-table>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ExercisesRoutingModule } from './exercises-routing.module';\nimport { ExercisesComponent } from './exercises.component';\nimport { ExerciseDetailsComponent } from './exercise-details/exercise-details.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\nimport { MaterialBundleModule } from 'src/app/core/material-bundle/material-bundle.module';\nimport { ComponentsModule } from 'src/app/core/shared/components/components.module';\nimport { DrivenFormsDirectivesModule } from 'src/app/core/shared/directives/driven-forms-directives.module';\n\n@NgModule({\n  declarations: [ExercisesComponent, ExerciseDetailsComponent],\n  imports: [\n    CommonModule,\n    ExercisesRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DrivenFormsDirectivesModule,\n    MaterialBundleModule,\n    ComponentsModule,\n    NgxMaskDirective,\n    NgxMaskPipe,\n  ],\n  providers: [provideNgxMask()],\n})\nexport class ExercisesModule {}\n"],"names":["ControlInput","i0","ExerciseDetailsComponent","constructor","utilsService","actRoute","router","loadingService","exercisesService","name","label","config","hint","required","errors","description","hasMethod","value","videoUrl","maxlength","minlength","customValidators","urlValidator","invalidUrl","params","subscribe","console","log","ngOnInit","ngAfterViewInit","isEdit","editId","setTimeout","activeLoading","data","getById","formRef","setValue","error","deactiveLoading","getErrorText","control","issueValues","form","controls","keys","Object","ret","key","maskFilled","dateEvents","event","onSubmit","update","navigate","create","selectors","viewQuery","ctx","RouterModule","ExercisesComponent","routes","path","component","ExercisesRoutingModule","forChild","imports","exports","MasterTable","title","targetFilters","columns","deleteOne","row","features","decls","vars","consts","template","CommonModule","FormsModule","ReactiveFormsModule","NgxMaskDirective","NgxMaskPipe","provideNgxMask","MaterialBundleModule","ComponentsModule","DrivenFormsDirectivesModule","ExercisesModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
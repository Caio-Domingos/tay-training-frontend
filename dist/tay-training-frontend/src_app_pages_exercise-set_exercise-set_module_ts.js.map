{"version":3,"file":"src_app_pages_exercise-set_exercise-set_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO6B;AAMqC;;;;;;;;;;;;;;;;;;;;;;;;;;;ICZhEM,4DAAAA,cAA8D;IAC5DA,uDAAAA,kBAA2B;IAC7BA,0DAAAA,EAAM;;;;;IAuCEA,4DAAAA,eAA2C;IAAAA,oDAAAA,GAEzC;IAAAA,0DAAAA,EAAW;;;;IAF8BA,uDAAAA,GAEzC;IAFyCA,+DAAAA,iCAEzC;;;;;IACFA,4DAAAA,gBAA8C;IAC5CA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,oDACF;;;;;IAcEA,4DAAAA,qBAGC;IACCA,oDAAAA,GACF;IAAAA,0DAAAA,EAAa;;;;IAHXA,wDAAAA,yBAAoB;IAEpBA,uDAAAA,GACF;IADEA,gEAAAA,yBACF;;;;;IAEFA,4DAAAA,eAAoD;IAAAA,oDAAAA,GAElD;IAAAA,0DAAAA,EAAW;;;;IAFuCA,uDAAAA,GAElD;IAFkDA,+DAAAA,gCAElD;;;;;IACFA,4DAAAA,gBAAuD;IACrDA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,6DACF;;;;;IAqBIA,4DAAAA,aAAsC;IAAAA,oDAAAA,WAAI;IAAAA,0DAAAA,EAAK;;;;;IAC/CA,4DAAAA,aAAuC;IAAAA,oDAAAA,GAAkB;IAAAA,0DAAAA,EAAK;;;;IAAvBA,uDAAAA,GAAkB;IAAlBA,+DAAAA,kBAAkB;;;;;IAIzDA,4DAAAA,aAAsC;IAAAA,oDAAAA,0BAAmB;IAAAA,0DAAAA,EAAK;;;;;IAC9DA,4DAAAA,aAAuC;IACrCA,oDAAAA,GACF;IAAAA,0DAAAA,EAAK;;;;IADHA,uDAAAA,GACF;IADEA,gEAAAA,qDACF;;;;;IAIAA,uDAAAA,aAA2C;;;;;;IAC3CA,4DAAAA,aAIC;IAIGA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,oCAAuB;IAAA,EAAC;IAEjCA,4DAAAA,eAAU;IAAAA,oDAAAA,WAAI;IAAAA,0DAAAA,EAAW;IAE3BA,4DAAAA,iBAIC;IADCA,wDAAAA;MAAA;MAAA;MAAA;MAAA,OAASA,yDAAAA,sCAAyB;IAAA,EAAC;IAEnCA,4DAAAA,eAAU;IAAAA,oDAAAA,aAAM;IAAAA,0DAAAA,EAAW;;;;;IAmCvBA,4DAAAA,aAGC;IAEGA,oDAAAA,GAEF;IAAAA,0DAAAA,EAAM;IACNA,4DAAAA,cAA0B;IACxBA,oDAAAA,GAEF;IAAAA,0DAAAA,EAAM;;;;;IANJA,uDAAAA,GAEF;IAFEA,gEAAAA,gFAEF;IAEEA,uDAAAA,GAEF;IAFEA,gEAAAA,8EAEF;;;;;IAvBNA,qEAAAA,GAKC;IACCA,4DAAAA,cAAoB;IAGVA,oDAAAA,GAAqB;IAAAA,0DAAAA,EAAK;IAGlCA,wDAAAA,qGAYM;IACNA,4DAAAA,aAAiB;IAEbA,oDAAAA,GACF;IAAAA,0DAAAA,EAAM;IACNA,4DAAAA,eAAsB;IACpBA,oDAAAA,IACF;IAAAA,0DAAAA,EAAM;IACNA,4DAAAA,eAAsB;IACpBA,oDAAAA,IACF;IAAAA,0DAAAA,EAAM;IAGZA,mEAAAA,EAAe;;;;;;IA5BHA,uDAAAA,GAAqB;IAArBA,gEAAAA,6BAAqB;IAK1BA,uDAAAA,GAAsD;IAAtDA,wDAAAA,0EAAsD;IAarDA,uDAAAA,GACF;IADEA,gEAAAA,yDACF;IAEEA,uDAAAA,GACF;IADEA,gEAAAA,gEACF;IAEEA,uDAAAA,GACF;IADEA,gEAAAA,6DACF;;;;;IAhDVA,4DAAAA,aAIC;IAUGA,wDAAAA,yGAqCe;IACjBA,0DAAAA,EAAM;;;;;IAjDNA,yDAAAA,0CAAsC;IAOpCA,uDAAAA,GAAuD;IAAvDA,yDAAAA,8DAAuD;IAHvDA,wDAAAA,qFAEC;IAOoDA,uDAAAA,GAE9D;IAF8DA,wDAAAA,+CAE9D;;;;;IAsCGA,uDAAAA,aAA0D;;;;;;IAC1DA,4DAAAA,aAQC;IAHCA,wDAAAA;MAAA;MAAA;MAAA;MAAA,uIAEZ,IAAI;IAAA,EAAS;IACFA,0DAAAA,EAAK;;;;;IAJJA,yDAAAA,kEAA2D;;;;;IAK7DA,uDAAAA,aAIM;;;;;;;;IAzHVA,qEAAAA,GAA4C;IAC1CA,4DAAAA,SAAI;IAAAA,oDAAAA,qBAAc;IAAAA,0DAAAA,EAAK;IAEvBA,4DAAAA,oBAMC;IAECA,qEAAAA,OAAkC;IAChCA,wDAAAA,8EAA+C;IAC/CA,wDAAAA,8EAA8D;IAChEA,mEAAAA,EAAe;IAEfA,qEAAAA,OAA6C;IAC3CA,wDAAAA,8EAA8D;IAC9DA,wDAAAA,gFAEK;IACPA,mEAAAA,EAAe;IAEfA,qEAAAA,QAAqC;IACnCA,wDAAAA,gFAA2C;IAC3CA,wDAAAA,gFAmBK;IACPA,mEAAAA,EAAe;IAKfA,qEAAAA,QAA4C;IAC1CA,wDAAAA,gFAqDK;IACPA,mEAAAA,EAAe;IAEfA,wDAAAA,gFAA0D;IAC1DA,wDAAAA,gFAQM;IACNA,wDAAAA,gFAIM;IACRA,0DAAAA,EAAQ;IACVA,mEAAAA,EAAe;;;;IArHXA,uDAAAA,GAAyB;IAAzBA,wDAAAA,iCAAyB;IAqGLA,uDAAAA,IAA+B;IAA/BA,wDAAAA,0CAA+B;IAGxBA,uDAAAA,GAAuB;IAAvBA,wDAAAA,2CAAuB;IAS3BA,uDAAAA,GAA2B;IAA3BA,wDAAAA,qBAAAA,6DAAAA,SAA2B;;;;;IAmBhDA,4DAAAA,2BAGC;IACCA,oDAAAA,GACF;IAAAA,0DAAAA,EAAmB;;;;IAHjBA,wDAAAA,yBAAoB;IAEpBA,uDAAAA,GACF;IADEA,gEAAAA,yBACF;;;;;IAMJA,4DAAAA,SAEC;IACCA,oDAAAA,oDACF;IAAAA,0DAAAA,EAAK;;;;;IAgBGA,4DAAAA,qBAKC;IACCA,oDAAAA,GACF;IAAAA,0DAAAA,EAAa;;;;IAHXA,wDAAAA,yBAAoB;IAEpBA,uDAAAA,GACF;IADEA,gEAAAA,yBACF;;;;;IAEFA,4DAAAA,eAAyD;IAAAA,oDAAAA,GAEvD;IAAAA,0DAAAA,EAAW;;;;IAF4CA,uDAAAA,GAEvD;IAFuDA,+DAAAA,gDAEvD;;;;;IACFA,4DAAAA,gBAA4D;IAC1DA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,oEACF;;;;;IAiBIA,4DAAAA,qBAKC;IACCA,oDAAAA,GACF;IAAAA,0DAAAA,EAAa;;;;IAHXA,wDAAAA,yBAAoB;IAEpBA,uDAAAA,GACF;IADEA,gEAAAA,yBACF;;;;;IAEFA,4DAAAA,eAAuD;IAAAA,oDAAAA,GAErD;IAAAA,0DAAAA,EAAW;;;;IAF0CA,uDAAAA,GAErD;IAFqDA,+DAAAA,8CAErD;;;;;IACFA,4DAAAA,gBAA0D;IACxDA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,kEACF;;;;;;IAxBJA,qEAAAA,GAA4C;IAC1CA,4DAAAA,wBAAkC;IACrBA,oDAAAA,GAAoC;IAAAA,0DAAAA,EAAY;IAC3DA,4DAAAA,oBAMC;IALCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAaA,yDAAAA,wBAAe,QAAQ,iBAClD;IAAA,EAD0D;IAM5CA,wDAAAA,8FAOa;IACfA,0DAAAA,EAAa;IACbA,wDAAAA,yFAEa;IACbA,wDAAAA,2FAEY;IACdA,0DAAAA,EAAiB;IACnBA,mEAAAA,EAAe;;;;IAxBAA,uDAAAA,GAAoC;IAApCA,+DAAAA,wCAAoC;IAE7CA,uDAAAA,GAA4C;IAA5CA,wDAAAA,mDAA4C;IAQNA,uDAAAA,GAE1D;IAF0DA,wDAAAA,2DAE1D;IAK6BA,uDAAAA,GAA0C;IAA1CA,wDAAAA,sDAA0C;IAGzCA,uDAAAA,GAA4C;IAA5CA,wDAAAA,gEAA4C;;;;;IAuB1DA,4DAAAA,eAAuD;IAAAA,oDAAAA,GAErD;IAAAA,0DAAAA,EAAW;;;;IAF0CA,uDAAAA,GAErD;IAFqDA,+DAAAA,8CAErD;;;;;IACFA,4DAAAA,gBAA0D;IACxDA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,kEACF;;;;;IAsBAA,4DAAAA,eAA0D;IAAAA,oDAAAA,GAExD;IAAAA,0DAAAA,EAAW;;;;IAF6CA,uDAAAA,GAExD;IAFwDA,+DAAAA,iDAExD;;;;;IACFA,4DAAAA,gBAA6D;IAC3DA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,qEACF;;;;;IA2BAA,4DAAAA,eAA4D;IAAAA,oDAAAA,GAE1D;IAAAA,0DAAAA,EAAW;;;;IAF+CA,uDAAAA,GAE1D;IAF0DA,+DAAAA,mDAE1D;;;;;IACFA,4DAAAA,gBAA+D;IAC7DA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,uEACF;;;;;IAyBEA,4DAAAA,qBAGC;IACCA,oDAAAA,GACF;IAAAA,0DAAAA,EAAa;;;;IAHXA,wDAAAA,yBAAoB;IAEpBA,uDAAAA,GACF;IADEA,gEAAAA,yBACF;;;;;IAEFA,4DAAAA,eAAwD;IAAAA,oDAAAA,GAEtD;IAAAA,0DAAAA,EAAW;;;;IAF2CA,uDAAAA,GAEtD;IAFsDA,+DAAAA,+CAEtD;;;;;IACFA,4DAAAA,gBAA2D;IACzDA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,mEACF;;;;;IAiBIA,4DAAAA,qBAGC;IACCA,oDAAAA,GACF;IAAAA,0DAAAA,EAAa;;;;IAHXA,wDAAAA,yBAAoB;IAEpBA,uDAAAA,GACF;IADEA,gEAAAA,yBACF;;;;;IAEFA,4DAAAA,eAAsD;IAAAA,oDAAAA,GAEpD;IAAAA,0DAAAA,EAAW;;;;IAFyCA,uDAAAA,GAEpD;IAFoDA,+DAAAA,6CAEpD;;;;;IACFA,4DAAAA,gBAAyD;IACvDA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,iEACF;;;;;;IAtBJA,qEAAAA,GAA2C;IACzCA,4DAAAA,wBAAkC;IACrBA,oDAAAA,GAAmC;IAAAA,0DAAAA,EAAY;IAC1DA,4DAAAA,oBAMC;IALCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAaA,yDAAAA,uBAAc,QAAQ,iBACjD;IAAA,EADyD;IAM3CA,wDAAAA,8GAKa;IACfA,0DAAAA,EAAa;IACbA,wDAAAA,yGAEa;IACbA,wDAAAA,2GAEY;IACdA,0DAAAA,EAAiB;IACnBA,mEAAAA,EAAe;;;;IAtBAA,uDAAAA,GAAmC;IAAnCA,+DAAAA,uCAAmC;IAE5CA,uDAAAA,GAA2C;IAA3CA,wDAAAA,kDAA2C;IAOxBA,uDAAAA,GAAwC;IAAxCA,wDAAAA,0DAAwC;IAMlDA,uDAAAA,GAAyC;IAAzCA,wDAAAA,qDAAyC;IAGxCA,uDAAAA,GAA2C;IAA3CA,wDAAAA,+DAA2C;;;;;IAuBzDA,4DAAAA,eAAsD;IAAAA,oDAAAA,GAEpD;IAAAA,0DAAAA,EAAW;;;;IAFyCA,uDAAAA,GAEpD;IAFoDA,+DAAAA,6CAEpD;;;;;IACFA,4DAAAA,gBAAyD;IACvDA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,iEACF;;;;;IAsBAA,4DAAAA,eAAyD;IAAAA,oDAAAA,GAEvD;IAAAA,0DAAAA,EAAW;;;;IAF4CA,uDAAAA,GAEvD;IAFuDA,+DAAAA,gDAEvD;;;;;IACFA,4DAAAA,gBAA4D;IAC1DA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,oEACF;;;;;IA2BAA,4DAAAA,eAA2D;IAAAA,oDAAAA,GAEzD;IAAAA,0DAAAA,EAAW;;;;IAF8CA,uDAAAA,GAEzD;IAFyDA,+DAAAA,kDAEzD;;;;;IACFA,4DAAAA,gBAA8D;IAC5DA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,sEACF;;;;;;IA/IRA,qEAAAA,GAEC;IACCA,4DAAAA,SAAI;IAAAA,oDAAAA,kDAA4B;IAAAA,0DAAAA,EAAK;IACrCA,4DAAAA,aAAiB;IAKAA,oDAAAA,GAAqC;IAAAA,0DAAAA,EAAY;IAC5DA,4DAAAA,oBAMC;IALCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAaA,yDAAAA,uBAAc,UAAU,iBACjD;IAAA,EADyD;IAM7CA,wDAAAA,8FAKa;IACfA,0DAAAA,EAAa;IACbA,wDAAAA,2FAEa;IACbA,wDAAAA,6FAEY;IACdA,0DAAAA,EAAiB;IAInBA,4DAAAA,cAAiB;IAEfA,wDAAAA,mGAwBe;IACjBA,0DAAAA,EAAM;IAGRA,4DAAAA,cAAiB;IAKAA,oDAAAA,IAAmC;IAAAA,0DAAAA,EAAY;IAC1DA,4DAAAA,iBAQE;IAJAA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAaA,yDAAAA,uBAAc,QAAQ,iBAC/C;IAAA,EADuD;IAJ7CA,0DAAAA,EAQE;IACFA,wDAAAA,2FAEa;IACbA,wDAAAA,6FAEY;IACdA,0DAAAA,EAAiB;IAGnBA,4DAAAA,cAAiB;IAGFA,oDAAAA,IAAsC;IAAAA,0DAAAA,EAAY;IAC7DA,4DAAAA,iBAaE;IATAA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAaA,yDAAAA,uBAAc,WAAW,iBAClD;IAAA,EAD0D;IAJhDA,0DAAAA,EAaE;IACFA,wDAAAA,2FAEa;IACbA,wDAAAA,6FAEY;IACdA,0DAAAA,EAAiB;IAIrBA,4DAAAA,cAAiB;IAKAA,oDAAAA,IAAwC;IAAAA,0DAAAA,EAAY;IAC/DA,4DAAAA,iBAeE;IAXAA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAaA,yDAAAA,uBAAc,aAAa,iBACpD;IAAA,EAD4D;IAJlDA,0DAAAA,EAeE;IACFA,wDAAAA,2FAEa;IACbA,wDAAAA,6FAEY;IACdA,0DAAAA,EAAiB;IAEnBA,uDAAAA,cAAuB;IACzBA,0DAAAA,EAAM;IACRA,mEAAAA,EAAe;;;;IA3IIA,uDAAAA,GAAqC;IAArCA,+DAAAA,yCAAqC;IAE9CA,uDAAAA,GAA6C;IAA7CA,wDAAAA,oDAA6C;IAO1BA,uDAAAA,GAA0C;IAA1CA,wDAAAA,4DAA0C;IAMpDA,uDAAAA,GAA2C;IAA3CA,wDAAAA,uDAA2C;IAG1CA,uDAAAA,GAA6C;IAA7CA,wDAAAA,iEAA6C;IAS5CA,uDAAAA,GAA0B;IAA1BA,wDAAAA,sCAA0B;IAiC5BA,uDAAAA,GAAmC;IAAnCA,+DAAAA,uCAAmC;IAG5CA,uDAAAA,GAA4C;IAA5CA,wDAAAA,qDAA4C;IAOnCA,uDAAAA,GAAyC;IAAzCA,wDAAAA,qDAAyC;IAGxCA,uDAAAA,GAA2C;IAA3CA,wDAAAA,+DAA2C;IAS5CA,uDAAAA,GAAsC;IAAtCA,+DAAAA,0CAAsC;IAG/CA,uDAAAA,GAA+C;IAA/CA,wDAAAA,wDAA+C;IAYtCA,uDAAAA,GAA4C;IAA5CA,wDAAAA,wDAA4C;IAG3CA,uDAAAA,GAA8C;IAA9CA,wDAAAA,kEAA8C;IAY/CA,uDAAAA,GAAwC;IAAxCA,+DAAAA,4CAAwC;IAGjDA,uDAAAA,GAAiD;IAAjDA,wDAAAA,0DAAiD;IAcxCA,uDAAAA,GAA8C;IAA9CA,wDAAAA,0DAA8C;IAG7CA,uDAAAA,GAAgD;IAAhDA,wDAAAA,oEAAgD;;;;;IA2B1DA,4DAAAA,qBAKC;IACCA,oDAAAA,GACF;IAAAA,0DAAAA,EAAa;;;;IAHXA,wDAAAA,yBAAoB;IAEpBA,uDAAAA,GACF;IADEA,gEAAAA,yBACF;;;;;IAEFA,4DAAAA,eAAyD;IAAAA,oDAAAA,GAEvD;IAAAA,0DAAAA,EAAW;;;;IAF4CA,uDAAAA,GAEvD;IAFuDA,+DAAAA,gDAEvD;;;;;IACFA,4DAAAA,gBAA4D;IAC1DA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,oEACF;;;;;IAiBIA,4DAAAA,qBAKC;IACCA,oDAAAA,GACF;IAAAA,0DAAAA,EAAa;;;;IAHXA,wDAAAA,yBAAoB;IAEpBA,uDAAAA,GACF;IADEA,gEAAAA,yBACF;;;;;IAEFA,4DAAAA,eAAuD;IAAAA,oDAAAA,GAErD;IAAAA,0DAAAA,EAAW;;;;IAF0CA,uDAAAA,GAErD;IAFqDA,+DAAAA,8CAErD;;;;;IACFA,4DAAAA,gBAA0D;IACxDA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,kEACF;;;;;;IAxBJA,qEAAAA,GAA4C;IAC1CA,4DAAAA,wBAAkC;IACrBA,oDAAAA,GAAoC;IAAAA,0DAAAA,EAAY;IAC3DA,4DAAAA,oBAMC;IALCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAaA,yDAAAA,wBAAe,QAAQ,iBAClD;IAAA,EAD0D;IAM5CA,wDAAAA,8GAOa;IACfA,0DAAAA,EAAa;IACbA,wDAAAA,yGAEa;IACbA,wDAAAA,2GAEY;IACdA,0DAAAA,EAAiB;IACnBA,mEAAAA,EAAe;;;;IAxBAA,uDAAAA,GAAoC;IAApCA,+DAAAA,wCAAoC;IAE7CA,uDAAAA,GAA4C;IAA5CA,wDAAAA,mDAA4C;IAQNA,uDAAAA,GAE1D;IAF0DA,wDAAAA,2DAE1D;IAK6BA,uDAAAA,GAA0C;IAA1CA,wDAAAA,sDAA0C;IAGzCA,uDAAAA,GAA4C;IAA5CA,wDAAAA,gEAA4C;;;;;IAuB1DA,4DAAAA,eAAuD;IAAAA,oDAAAA,GAErD;IAAAA,0DAAAA,EAAW;;;;IAF0CA,uDAAAA,GAErD;IAFqDA,+DAAAA,8CAErD;;;;;IACFA,4DAAAA,gBAA0D;IACxDA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,kEACF;;;;;IAsBAA,4DAAAA,eAA0D;IAAAA,oDAAAA,GAExD;IAAAA,0DAAAA,EAAW;;;;IAF6CA,uDAAAA,GAExD;IAFwDA,+DAAAA,iDAExD;;;;;IACFA,4DAAAA,gBAA6D;IAC3DA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,qEACF;;;;;IA2BAA,4DAAAA,eAA4D;IAAAA,oDAAAA,GAE1D;IAAAA,0DAAAA,EAAW;;;;IAF+CA,uDAAAA,GAE1D;IAF0DA,+DAAAA,mDAE1D;;;;;IACFA,4DAAAA,gBAA+D;IAC7DA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,uEACF;;;;;;IAnJRA,qEAAAA,GAEC;IACCA,4DAAAA,SAAI;IAAAA,oDAAAA,kDAA4B;IAAAA,0DAAAA,EAAK;IACrCA,4DAAAA,aAAiB;IAKAA,oDAAAA,GAAsC;IAAAA,0DAAAA,EAAY;IAC7DA,4DAAAA,oBAMC;IALCA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAaA,yDAAAA,wBAAe,UAAU,iBAClD;IAAA,EAD0D;IAM9CA,wDAAAA,8FAOa;IACfA,0DAAAA,EAAa;IACbA,wDAAAA,2FAEa;IACbA,wDAAAA,6FAEY;IACdA,0DAAAA,EAAiB;IAInBA,4DAAAA,cAAiB;IAEfA,wDAAAA,mGA0Be;IACjBA,0DAAAA,EAAM;IAGRA,4DAAAA,cAAiB;IAKAA,oDAAAA,IAAoC;IAAAA,0DAAAA,EAAY;IAC3DA,4DAAAA,iBAQE;IAJAA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAaA,yDAAAA,yBAAe,QAAQ,iBAChD;IAAA,EADwD;IAJ9CA,0DAAAA,EAQE;IACFA,wDAAAA,2FAEa;IACbA,wDAAAA,6FAEY;IACdA,0DAAAA,EAAiB;IAGnBA,4DAAAA,cAAiB;IAGFA,oDAAAA,IAAuC;IAAAA,0DAAAA,EAAY;IAC9DA,4DAAAA,iBAaE;IATAA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAaA,yDAAAA,yBAAe,WAAW,iBACnD;IAAA,EAD2D;IAJjDA,0DAAAA,EAaE;IACFA,wDAAAA,2FAEa;IACbA,wDAAAA,6FAEY;IACdA,0DAAAA,EAAiB;IAIrBA,4DAAAA,cAAiB;IAKAA,oDAAAA,IAAyC;IAAAA,0DAAAA,EAAY;IAChEA,4DAAAA,iBAeE;IAXAA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAaA,yDAAAA,yBAAe,aAAa,iBACrD;IAAA,EAD6D;IAJnDA,0DAAAA,EAeE;IACFA,wDAAAA,2FAEa;IACbA,wDAAAA,6FAEY;IACdA,0DAAAA,EAAiB;IAEnBA,uDAAAA,cAAuB;IACzBA,0DAAAA,EAAM;IACRA,mEAAAA,EAAe;;;;IA/IIA,uDAAAA,GAAsC;IAAtCA,+DAAAA,0CAAsC;IAE/CA,uDAAAA,GAA8C;IAA9CA,wDAAAA,qDAA8C;IAQVA,uDAAAA,GAEtD;IAFsDA,wDAAAA,6DAEtD;IAK2BA,uDAAAA,GAA4C;IAA5CA,wDAAAA,wDAA4C;IAG3CA,uDAAAA,GAA8C;IAA9CA,wDAAAA,kEAA8C;IAS7CA,uDAAAA,GAA2B;IAA3BA,wDAAAA,uCAA2B;IAmC7BA,uDAAAA,GAAoC;IAApCA,+DAAAA,wCAAoC;IAG7CA,uDAAAA,GAA6C;IAA7CA,wDAAAA,sDAA6C;IAOpCA,uDAAAA,GAA0C;IAA1CA,wDAAAA,sDAA0C;IAGzCA,uDAAAA,GAA4C;IAA5CA,wDAAAA,gEAA4C;IAS7CA,uDAAAA,GAAuC;IAAvCA,+DAAAA,2CAAuC;IAGhDA,uDAAAA,GAAgD;IAAhDA,wDAAAA,yDAAgD;IAYvCA,uDAAAA,GAA6C;IAA7CA,wDAAAA,yDAA6C;IAG5CA,uDAAAA,GAA+C;IAA/CA,wDAAAA,mEAA+C;IAYhDA,uDAAAA,GAAyC;IAAzCA,+DAAAA,6CAAyC;IAGlDA,uDAAAA,GAAkD;IAAlDA,wDAAAA,2DAAkD;IAczCA,uDAAAA,GAA+C;IAA/CA,wDAAAA,2DAA+C;IAG9CA,uDAAAA,GAAiD;IAAjDA,wDAAAA,qEAAiD;;;AD7mBvE,MAAOC,2BAA2B;EAyGtCC,YACUC,YAA0B,EAC1BC,QAAwB,EACzBC,cAA8B,EAC7BC,MAAc,EACdC,gBAAkC,EAClCC,cAA8B,EAC9BC,kBAAsC,EACtCC,sBAA6C,EAC7CC,4BAA0D;IAR1D,iBAAY,GAAZR,YAAY;IACZ,aAAQ,GAARC,QAAQ;IACT,mBAAc,GAAdC,cAAc;IACb,WAAM,GAANC,MAAM;IACN,qBAAgB,GAAhBC,gBAAgB;IAChB,mBAAc,GAAdC,cAAc;IACd,uBAAkB,GAAlBC,kBAAkB;IAClB,2BAAsB,GAAtBC,sBAAsB;IACtB,iCAA4B,GAA5BC,4BAA4B;IAjHtC,SAAI,GAAmC;MACrCC,IAAI,EAAE,IAAIb,4EAAY,CAAC;QACrBc,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;UACNF,IAAI,EAAE,MAAM;UACZG,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAE;YACND,QAAQ,EAAE;;;OAGf,CAAC;MACFE,aAAa,EAAE,IAAIlB,4EAAY,CAAC;QAC9Bc,KAAK,EAAE,qBAAqB;QAC5BK,aAAa,EAAE,CACb;UAAEN,IAAI,EAAE,SAAS;UAAEO,KAAK,EAAE;QAAG,CAAE,EAC/B;UAAEP,IAAI,EAAE,SAAS;UAAEO,KAAK,EAAE;QAAG,CAAE,EAC/B;UAAEP,IAAI,EAAE,SAAS;UAAEO,KAAK,EAAE;QAAG,CAAE,EAC/B;UAAEP,IAAI,EAAE,SAAS;UAAEO,KAAK,EAAE;QAAG,CAAE,CAChC;QACDL,MAAM,EAAE;UACNF,IAAI,EAAE,eAAe;UACrBG,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAE;YACND,QAAQ,EAAE;;;OAGf;KACF;IAED,6BAAwB,GAAoC;MAC1DK,aAAa,EAAE,IAAIrB,4EAAY,CAAC;QAC9Bc,KAAK,EAAE,sBAAsB;QAC7BM,KAAK,EAAE,QAAQ;QACfL,MAAM,EAAE;UACNF,IAAI,EAAE,eAAe;UACrBI,MAAM,EAAE;YACND,QAAQ,EAAE;;;OAGf;KACF;IAwBD,eAAU,GAAqB,EAAE;IAEjC,iBAAY,GAAG,CACb;MAAEH,IAAI,EAAE,UAAU;MAAEO,KAAK,EAAE;IAAC,CAAE,EAC9B;MAAEP,IAAI,EAAE,UAAU;MAAEO,KAAK,EAAE;IAAC,CAAE,EAC9B;MAAEP,IAAI,EAAE,UAAU;MAAEO,KAAK,EAAE;IAAC,CAAE,EAC9B;MAAEP,IAAI,EAAE,UAAU;MAAEO,KAAK,EAAE;IAAC,CAAE,CAC/B;IAED,eAAU,GAAG,CACX;MAAEP,IAAI,EAAE,UAAU;MAAEO,KAAK,EAAE;IAAC,CAAE,EAC9B;MAAEP,IAAI,EAAE,UAAU;MAAEO,KAAK,EAAE;IAAC,CAAE,EAC9B;MAAEP,IAAI,EAAE,UAAU;MAAEO,KAAK,EAAE;IAAC,CAAE,EAC9B;MAAEP,IAAI,EAAE,UAAU;MAAEO,KAAK,EAAE;IAAC,CAAE,CAC/B;IAED,iBAAY,GAAG,CACb;MAAEP,IAAI,EAAE,SAAS;MAAEO,KAAK,EAAE;IAAQ,CAAE,EACpC;MAAEP,IAAI,EAAE,QAAQ;MAAEO,KAAK,EAAE;IAAO,CAAE,EAClC;MAAEP,IAAI,EAAE,SAAS;MAAEO,KAAK,EAAE;IAAQ,CAAE,CACrC;IACD;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,mBAAc,GAAG,CAAC,MAAM,EAAE,iBAAiB,EAAE,SAAS,CAAC;IACvD,qBAAgB,GAA0B,IAAI;IAK9C,WAAM,GAAG,KAAK;IACd,WAAM,GAAkB,IAAI;IAC5B,wBAAmB,GAAqB,EAAE;IAaxC,IAAI,CAACE,cAAc,GAAG,IAAI,CAACC,uBAAuB,CAAC,gBAAgB,CAAC;IACpE,IAAI,CAACC,aAAa,GAAG,IAAI,CAACD,uBAAuB,CAAC,eAAe,CAAC;IAClE,IAAI,CAACE,cAAc,GAAG,IAAI,CAACF,uBAAuB,CAAC,gBAAgB,CAAC;EACtE;EAEMG,QAAQ;IAAA;IAAA;MACZ,KAAI,CAACC,YAAY,GAAG,OAAO,KAAI,CAACnB,gBAAgB,CAACoB,MAAM,EAAE,EAAEC,GAAG,CAAEC,CAAM,IAAI;QACxE,OAAO;UAAEjB,IAAI,EAAEiB,CAAC,CAACjB,IAAI;UAAEO,KAAK,EAAEU,CAAC,CAACC;QAAE,CAAE;MACtC,CAAC,CAAC;MACF,KAAI,CAACC,UAAU,GAAG,OAAO,KAAI,CAACvB,cAAc,CAACmB,MAAM,EAAE,EAAEC,GAAG,CAAEC,CAAM,IAAI;QACpE,OAAO;UAAEjB,IAAI,EAAEiB,CAAC,CAACjB,IAAI;UAAEO,KAAK,EAAEU,CAAC,CAACC;QAAE,CAAE;MACtC,CAAC,CAAC;MAEFE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,KAAI,CAACP,YAAY,CAAC;MAC1CM,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,KAAI,CAACF,UAAU,CAAC;MAEvC,KAAI,CAACV,cAAc,CAACa,QAAQ,CAAChB,aAAa,GAAG,KAAI,CAACQ,YAAY;MAC9D,KAAI,CAACH,aAAa,CAACW,QAAQ,CAAChB,aAAa,GAAG,KAAI,CAACQ,YAAY;MAC7D,KAAI,CAACF,cAAc,CAACU,QAAQ,CAAChB,aAAa,GAAG,KAAI,CAACQ,YAAY;MAE9D,KAAI,CAACL,cAAc,CAACc,MAAO,CAACjB,aAAa,GAAG,KAAI,CAACa,UAAU;MAC3D,KAAI,CAACR,aAAa,CAACY,MAAO,CAACjB,aAAa,GAAG,KAAI,CAACa,UAAU;MAC1D,KAAI,CAACP,cAAc,CAACW,MAAO,CAACjB,aAAa,GAAG,KAAI,CAACa,UAAU;IAAC;EAC9D;EACAK,eAAe;IAAA;IACb,IAAI,CAAChC,QAAQ,CAACiC,MAAM,CAACC,SAAS;MAAA,mLAAC,WAAOD,MAAM,EAAI;QAC9C,IAAIA,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE;UAC1BE,UAAU,CAAC,MAAK;YACd,MAAI,CAAClC,cAAc,CAACmC,aAAa,EAAE;UACrC,CAAC,EAAE,EAAE,CAAC;UACN;UACA,MAAI,CAACC,MAAM,GAAG,IAAI;UAClB,MAAI,CAACC,MAAM,GAAGL,MAAM,CAAC,IAAI,CAAC;UAE1B,MAAMM,aAAa,SACX,MAAI,CAAClC,kBAAkB,CAACmC,OAAO,CAAC,MAAI,CAACF,MAAO,EAAE,CAClD,iBAAiB,EACjB,wCAAwC,CACzC,CAAC;UAEJV,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEU,aAAa,CAAC;UAE3C,MAAI,CAACE,OAAO,CAACC,QAAQ,CAAC,MAAM,CAAC,CAACC,QAAQ,CAACJ,aAAa,CAAC/B,IAAI,CAAC;UAC1D,MAAI,CAACiC,OAAO,CAACC,QAAQ,CAAC,eAAe,CAAC,CAACC,QAAQ,CAACJ,aAAa,CAACK,QAAQ,CAAC;UAEvE,MAAI,CAACC,UAAU,GAAGN,aAAa,CAACO,eAAgB;UAChD,MAAI,CAACC,mBAAmB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC,MAAI,CAACL,UAAU,CAAC,CAAC;UAEtEV,UAAU,CAAC,MAAK;YACd,MAAI,CAAClC,cAAc,CAACkD,eAAe,EAAE;UACvC,CAAC,EAAE,EAAE,CAAC;;MAEV,CAAC;MAAA;QAAA;MAAA;IAAA,IAAC;EACJ;EAEAC,WAAW,CAACtB,QAAgB;IAC1B,OAAO,CAAC,CAAC,IAAI,CAACR,YAAY,CAAC+B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACvC,KAAK,KAAKe,QAAQ,CAAC,GACxD,IAAI,CAACR,YAAY,CAAC+B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACvC,KAAK,KAAKe,QAAQ,CAAE,CAACtB,IAAI,GACzD,EAAE;EACR;EAEA+C,SAAS,CAACxB,MAAc;IACtB,OAAO,CAAC,CAAC,IAAI,CAACJ,UAAU,CAAC0B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACvC,KAAK,KAAKgB,MAAM,CAAC,GACpD,IAAI,CAACJ,UAAU,CAAC0B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACvC,KAAK,KAAKgB,MAAM,CAAE,CAACvB,IAAI,GACrD,EAAE;EAAG;EAEXgD,YAAY,CAACC,OAAqB;IAChC,OAAO,IAAI,CAAC1D,YAAY,CAACyD,YAAY,CAAC,IAAI,CAACf,OAAO,EAAEgB,OAAO,CAAC;EAC9D;EAEAC,WAAW;IACT,IAAI,CAAC,IAAI,CAACjB,OAAO,IAAI,CAAC,IAAI,CAACA,OAAO,CAACkB,IAAI,EAAE;MACvC,OAAO,EAAE;;IAGX,MAAMjB,QAAQ,GAAG,IAAI,CAACD,OAAO,CAACkB,IAAI,CAACjB,QAAQ;IAE3C,MAAMkB,IAAI,GAAGC,MAAM,CAACD,IAAI,CAAClB,QAAQ,CAAC;IAElC,IAAIoB,GAAG,GAAG,EAAE;IACZ,KAAK,MAAMC,GAAG,IAAIH,IAAI,EAAE;MACtB,IAAI,IAAI,CAACD,IAAI,CAACI,GAAG,CAAC,IAAI,IAAI,CAACP,YAAY,CAAC,IAAI,CAACG,IAAI,CAACI,GAAG,CAAC,CAAC,EACrDD,GAAG,IAAI,GAAG,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,CAACtD,KAAK,KAAK,IAAI,CAAC+C,YAAY,CAClD,IAAI,CAACG,IAAI,CAACI,GAAG,CAAC,CACf,MAAM;;IAGX,OAAOD,GAAG;EACZ;EAEA;EAEA;EACA;EACA;EAEQ5C,uBAAuB,CAC7B8C,MAA6D;IAE7D,MAAMC,KAAK,GAAG;MACZnC,QAAQ,EAAE,IAAInC,4EAAY,CAAC;QACzBc,KAAK,EAAE,WAAW;QAClBK,aAAa,EAAE,CACb;UAAEN,IAAI,EAAE,SAAS;UAAEO,KAAK,EAAE;QAAC,CAAE,EAC7B;UAAEP,IAAI,EAAE,SAAS;UAAEO,KAAK,EAAE;QAAC,CAAE,EAC7B;UAAEP,IAAI,EAAE,SAAS;UAAEO,KAAK,EAAE;QAAC,CAAE,EAC7B;UAAEP,IAAI,EAAE,SAAS;UAAEO,KAAK,EAAE;QAAC,CAAE,CAC9B;QACDL,MAAM,EAAE;UACNF,IAAI,EAAE,UAAU;UAChBI,MAAM,EAAE;YACND,QAAQ,EAAE;;;OAGf,CAAC;MACFoB,MAAM,EAAE,IAAIpC,4EAAY,CAAC;QACvBc,KAAK,EAAE,QAAQ;QACfK,aAAa,EAAE,CACb;UAAEN,IAAI,EAAE,SAAS;UAAEO,KAAK,EAAE;QAAC,CAAE,EAC7B;UAAEP,IAAI,EAAE,SAAS;UAAEO,KAAK,EAAE;QAAC,CAAE,EAC7B;UAAEP,IAAI,EAAE,SAAS;UAAEO,KAAK,EAAE;QAAC,CAAE,EAC7B;UAAEP,IAAI,EAAE,SAAS;UAAEO,KAAK,EAAE;QAAC,CAAE,CAC9B;QACDL,MAAM,EAAE;UACNF,IAAI,EAAE,QAAQ;UACdI,MAAM,EAAE;YACND,QAAQ,EAAE;;;OAGf,CAAC;MACFuD,MAAM,EAAE,IAAIvE,4EAAY,CAAC;QACvBc,KAAK,EAAE,QAAQ;QACfC,MAAM,EAAE;UACNF,IAAI,EAAE,QAAQ;UACd2D,IAAI,EAAE,MAAM;UACZvD,MAAM,EAAE;YACND,QAAQ,EAAE;;;OAGf,CAAC;MACFyD,SAAS,EAAE,IAAIzE,4EAAY,CAAC;QAC1Bc,KAAK,EAAE,mBAAmB;QAC1BC,MAAM,EAAE;UACNF,IAAI,EAAE,WAAW;UACjBI,MAAM,EAAE;YACND,QAAQ,EAAE;;;OAGf,CAAC;MACF0D,WAAW,EAAE,IAAI1E,4EAAY,CAAC;QAC5Bc,KAAK,EAAE,YAAY;QACnBC,MAAM,EAAE;UACNF,IAAI,EAAE,aAAa;UACnBI,MAAM,EAAE;YACND,QAAQ,EAAE;;;OAGf;KACF;IAEDsD,KAAK,CAACnC,QAAQ,CAACpB,MAAM,CAACF,IAAI,GAAG,GAAGwD,MAAM,WAAW;IACjDC,KAAK,CAAClC,MAAM,CAACrB,MAAM,CAACF,IAAI,GAAG,GAAGwD,MAAM,SAAS;IAC7CC,KAAK,CAACC,MAAM,CAACxD,MAAM,CAACF,IAAI,GAAG,GAAGwD,MAAM,SAAS;IAC7CC,KAAK,CAACG,SAAS,CAAC1D,MAAM,CAACF,IAAI,GAAG,GAAGwD,MAAM,cAAc;IACrDC,KAAK,CAACI,WAAW,CAAC3D,MAAM,CAACF,IAAI,GAAG,GAAGwD,MAAM,YAAY;IAErD,OAAOC,KAAK;EACd;EACQK,0BAA0B,CAChCC,GAA0D;IAE1D,OAAO;MACLC,UAAU,EAAE,IAAI,CAAC/B,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,WAAW,CAAC,CAACxD,KAAK;MAC/D0D,QAAQ,EAAE,IAAI,CAAChC,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,SAAS,CAAC,CAACxD,KAAK;MAC3DmD,MAAM,EAAE,IAAI,CAACzB,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,SAAS,CAAC,CAACxD,KAAK;MACzD2D,IAAI,EAAE,IAAI,CAACjC,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,cAAc,CAAC,CAACxD,KAAK;MAC5D4D,IAAI,EAAE,IAAI,CAAClC,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,YAAY,CAAC,CAACxD;KACtD;EACH;EACQ6D,2BAA2B,CACjCL,GAA0D,EAC1D7D,MAA6B;IAE7B,IAAI,CAAC+B,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,WAAW,CAAC,CAAC5B,QAAQ,CAACjC,MAAM,CAAC8D,UAAU,CAAC;IACzE,IAAI,CAAC/B,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,SAAS,CAAC,CAAC5B,QAAQ,CAACjC,MAAM,CAAC+D,QAAQ,CAAC;IACrE,IAAI,CAAChC,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,SAAS,CAAC,CAAC5B,QAAQ,CAACjC,MAAM,CAACwD,MAAM,CAAC;IACnE,IAAI,CAACzB,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,cAAc,CAAC,CAAC5B,QAAQ,CAACjC,MAAM,CAACgE,IAAI,CAAC;IACtE,IAAI,CAACjC,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,YAAY,CAAC,CAAC5B,QAAQ,CAACjC,MAAM,CAACiE,IAAI,CAAC;EACtE;EACQE,gBAAgB,CAAC/C,QAAwB;IAC/C,IAAI,CAACgD,gBAAgB,EAAE;IAEvB,IAAIhD,QAAQ,CAACiD,sBAAuB,CAAC,CAAC,CAAC,EAAE;MACvC,IAAI,CAACH,2BAA2B,CAC9B,gBAAgB,EAChB9C,QAAQ,CAACiD,sBAAuB,CAAC,CAAC,CAA0B,CAC7D;;IAEH,IAAIjD,QAAQ,CAACiD,sBAAuB,CAAC,CAAC,CAAC,EAAE;MACvC,IAAI,CAACH,2BAA2B,CAC9B,eAAe,EACf9C,QAAQ,CAACiD,sBAAuB,CAAC,CAAC,CAA0B,CAC7D;;IAEH,IAAIjD,QAAQ,CAACiD,sBAAuB,CAAC,CAAC,CAAC,EAAE;MACvC,IAAI,CAACH,2BAA2B,CAC9B,gBAAgB,EAChB9C,QAAQ,CAACiD,sBAAuB,CAAC,CAAC,CAA0B,CAC7D;;EAEL;EACQC,wBAAwB,CAC9BT,GAA0D;IAE1D3C,OAAO,CAACC,GAAG,CAAC,KAAK,EAAE0C,GAAG,CAAC;IACvB3C,OAAO,CAACC,GAAG,CAAC,MAAM,EAAE,IAAI,CAACY,OAAO,CAAC;IACjC,IAAI,CAACA,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,WAAW,CAAC,CAACU,KAAK,EAAE;IACrD,IAAI,CAACxC,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,SAAS,CAAC,CAACU,KAAK,EAAE;IACnD,IAAI,CAACxC,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,SAAS,CAAC,CAACU,KAAK,EAAE;IACnD,IAAI,CAACxC,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,cAAc,CAAC,CAACU,KAAK,EAAE;IACxD,IAAI,CAACxC,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,GAAG6B,GAAG,YAAY,CAAC,CAACU,KAAK,EAAE;EACxD;EACQH,gBAAgB;IACtB,IAAI,CAACE,wBAAwB,CAAC,gBAAgB,CAAC;IAC/C,IAAI,IAAI,CAACE,wBAAwB,CAAClE,aAAa,CAACD,KAAK,KAAK,QAAQ,EAChE,IAAI,CAACiE,wBAAwB,CAAC,eAAe,CAAC;IAChD,IAAI,IAAI,CAACE,wBAAwB,CAAClE,aAAa,CAACD,KAAK,KAAK,QAAQ,EAChE,IAAI,CAACiE,wBAAwB,CAAC,gBAAgB,CAAC;EACnD;EAEAG,sBAAsB;IACpB,IAAIrB,GAAG,GAAG,EAAE;IAEZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,OAAOA,GAAG;EACZ;EAEAsB,WAAW;IACT;IACA,MAAMC,eAAe,GAAG,EAAE;IAC1B,IAAI,IAAI,CAACH,wBAAwB,CAAClE,aAAa,CAACD,KAAK,KAAK,QAAQ,EAAE;MAClE;MAEA,MAAMuE,MAAM,GACV,IAAI,CAAChB,0BAA0B,CAAC,gBAAgB,CAAC;MACnDe,eAAe,CAACE,IAAI,CAACD,MAAM,CAAC;KAC7B,MAAM,IAAI,IAAI,CAACJ,wBAAwB,CAAClE,aAAa,CAACD,KAAK,KAAK,OAAO,EAAE;MACxE,MAAMuE,MAAM,GACV,IAAI,CAAChB,0BAA0B,CAAC,gBAAgB,CAAC;MACnD,MAAMkB,KAAK,GACT,IAAI,CAAClB,0BAA0B,CAAC,eAAe,CAAC;MAClDe,eAAe,CAACE,IAAI,CAACD,MAAM,CAAC;MAC5BD,eAAe,CAACE,IAAI,CAACC,KAAK,CAAC;KAC5B,MAAM,IAAI,IAAI,CAACN,wBAAwB,CAAClE,aAAa,CAACD,KAAK,KAAK,QAAQ,EAAE;MACzE,MAAMuE,MAAM,GACV,IAAI,CAAChB,0BAA0B,CAAC,gBAAgB,CAAC;MACnD,MAAMkB,KAAK,GACT,IAAI,CAAClB,0BAA0B,CAAC,eAAe,CAAC;MAClD,MAAMmB,MAAM,GACV,IAAI,CAACnB,0BAA0B,CAAC,gBAAgB,CAAC;MACnDe,eAAe,CAACE,IAAI,CAACD,MAAM,CAAC;MAC5BD,eAAe,CAACE,IAAI,CAACC,KAAK,CAAC;MAC3BH,eAAe,CAACE,IAAI,CAACE,MAAM,CAAC;;IAG9B,MAAM3D,QAAQ,GAAmB;MAC/BqC,IAAI,EAAE,IAAI,CAACe,wBAAwB,CAAClE,aAAa,CAACD,KAAe;MACjEgE,sBAAsB,EAAEM;KACzB;IACD,IAAI,CAACxC,UAAU,CAAC0C,IAAI,CAACzD,QAAQ,CAAC;IAC9B,IAAI,CAAC4D,KAAK,EAAEC,UAAU,EAAE;IAExB/D,OAAO,CAACC,GAAG,CAAC,IAAI,CAACgB,UAAU,CAAC;IAC5B,IAAI,CAACiC,gBAAgB,EAAE;EACzB;EAEAc,cAAc,CAACC,KAAU,EAAEC,KAAa;IACtCD,KAAK,CAACE,eAAe,EAAE;IACvBnE,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEiE,KAAK,CAAC;IAC3B,IAAI,CAACjD,UAAU,CAACmD,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAChC,IAAI,CAACJ,KAAK,EAAEC,UAAU,EAAE;IAExB/D,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACgB,UAAU,CAAC;EAC5C;EAEAoD,YAAY,CAACJ,KAAU,EAAEC,KAAa;IACpCD,KAAK,CAACE,eAAe,EAAE;IACvB,MAAMjE,QAAQ,GAAG,IAAI,CAACe,UAAU,CAACiD,KAAK,CAAC;IAEvC,IAAI,CAACrD,OAAO,CAACkB,IAAI,CAACjB,QAAQ,CAAC,eAAe,CAAC,CAACC,QAAQ,CAACb,QAAQ,CAACqC,IAAI,CAAC;IACnE,IAAI,CAACU,gBAAgB,CAAC/C,QAAQ,CAAC;IAE/B,IAAI,CAAC8D,cAAc,CAACC,KAAK,EAAEC,KAAK,CAAC;EACnC;EAEA;EAEAI,UAAU,CAACzC,OAAqB;IAC9B7B,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B;EAEAsE,UAAU,CAAC3F,IAAY,EAAEqF,KAAU;IACjCjE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAErB,IAAI,EAAEqF,KAAK,CAAC;EACxC;EAEMO,QAAQ;IAAA;IAAA;MACZxE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,MAAMwE,IAAI,GAAG,MAAI,CAAC5D,OAAO,CAAC1B,KAAK;MAE/B,IAAI;QACF;QACAa,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5C,MAAMyE,WAAW,GAAgB;UAC/B9F,IAAI,EAAE6F,IAAI,CAAC7F,IAAI;UACfoC,QAAQ,EAAEyD,IAAI,CAACxF;SAChB;QAEDe,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;QACzD,MAAM0E,kBAAkB,GAAG,CAAC,MAAI,CAAClE,MAAM,SAC7B,MAAI,CAAChC,kBAAkB,CAACmG,MAAM,CAACF,WAAW,CAAC,SAC3C,MAAI,CAACjG,kBAAkB,CAACoG,MAAM,CAAC,MAAI,CAACnE,MAAO,EAAEgE,WAAW,CAAC;QAEnE1E,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;QACjDD,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/C;QACA,MAAM6E,WAAW,GAAG,MAAI,CAAC7D,UAAU,CAACrB,GAAG;UAAA,oLAAC,WAAOC,CAAC,EAAEkF,CAAC,EAAI;YACrD/E,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE8E,CAAC,CAAC;YAC3B,MAAMC,MAAM,GAAG;cACblF,EAAE,EAAED,CAAC,CAACC,EAAE,GAAGD,CAAC,CAACC,EAAE,GAAGmF,SAAS;cAC3B1C,IAAI,EAAE1C,CAAC,CAAC0C,IAAI;cACZ2C,eAAe,EAAEP,kBAAkB,CAAC7E;aACrC;YAEDE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE+E,MAAM,CAAC;YACtC,MAAMG,qBAAqB,GAAG,CAACH,MAAM,CAAClF,EAAE,SAC9B,MAAI,CAACpB,sBAAsB,CAACkG,MAAM,CAACI,MAAM,CAAC,SAC1C,MAAI,CAACtG,sBAAsB,CAACmG,MAAM,CAACG,MAAM,CAAClF,EAAE,EAAEkF,MAAM,CAAC;YAE/DhF,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;YAC/DD,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;YACrD,MAAMkD,sBAAsB,GAC1BtD,CAAC,CAACsD,sBAAuB,CAACvD,GAAG,CAAEwF,qBAAqB,IAAI;cACtD,OAAO;gBACL,GAAGA,qBAAqB;gBACxBC,gBAAgB,EAAEF,qBAAqB,CAACrF;eACzC;YACH,CAAC,CAAC;YAEJE,OAAO,CAACC,GAAG,CACT,yDAAyD,EACzDkD,sBAAsB,CACvB;YACD,MAAMmC,4BAA4B,GAAG,CAAC,MAAI,CAAC7E,MAAM,SACvC,MAAI,CAAC9B,4BAA4B,CAAC4G,UAAU,CAChDpC,sBAAsB,CACvB,SACK,MAAI,CAACxE,4BAA4B,CAAC6G,wBAAwB,CAC9DrC,sBAAsB,CACvB;YAELnD,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;YAC7D,MAAMiC,GAAG,GAAG;cACVuD,aAAa,EAAEd,kBAAkB,CAAC7E,EAAE;cACpCuF,gBAAgB,EAAEF,qBAAqB,CAACrF,EAAE;cAC1C4F,wBAAwB,EAAEJ;aAC3B;YAEDtF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;YAC3B,OAAOiC,GAAG;UACZ,CAAC;UAAA;YAAA;UAAA;QAAA,IAAC;QAEF,MAAMyD,OAAO,CAACC,GAAG,CAACd,WAAW,CAAC;QAC9B,IAAI,MAAI,CAACrE,MAAM,EAAE,MAAM,MAAI,CAACoF,2BAA2B,EAAE;QACzD;QAEA,MAAI,CAACvH,MAAM,CAACwH,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;OACvC,CAAC,OAAOC,KAAK,EAAE;QACd/F,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE8F,KAAK,CAAC;;IACtC;EACH;EAEcF,2BAA2B;IAAA;IAAA;MACvC,MAAMG,WAAW,GAAG,MAAI,CAAC7E,mBAAmB,CAAC8E,MAAM,CAChDC,EAAE,IACD,CAAC,MAAI,CAACjF,UAAU,CACbgF,MAAM,CAAEpG,CAAC,IAAKA,CAAC,CAACC,EAAE,CAAC,CACnBF,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,CAAC,CAChBqG,QAAQ,CAACD,EAAE,CAACpG,EAAE,CAAC,CACrB;MAED,MAAMsG,EAAE,GAAGJ,WAAW,CAACpG,GAAG,CAAEsG,EAAE,IAC5B,MAAI,CAACxH,sBAAsB,CAAC2H,MAAM,CAACH,EAAE,CAACpG,EAAG,CAAC,CAC3C;MACD,MAAMwG,CAAC,SAASX,OAAO,CAACC,GAAG,CAACQ,EAAE,CAAC;MAC/B,OAAOE,CAAC;IAAC;EACX;;AAxgBWrI,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;QAA3BA,2BAA2B;EAAAsI;EAAAC;IAAA;;;;;;;;;;;;;;;MChExCxI,4DAAAA,iBAAyC;MACvCA,wDAAAA,+DAEM;MAENA,4DAAAA,iBAA0C;MAKvBA,oDAAAA,GAAwB;MAAAA,0DAAAA,EAAY;MAC/CA,4DAAAA,eA8BE;MA1BAA,wDAAAA;QAAA,gBAAkB,MAAM;MAAA,EAAQ;MAJlCA,0DAAAA,EA8BE;MACFA,wDAAAA,2EAEa;MACbA,wDAAAA,6EAEY;MACdA,0DAAAA,EAAiB;MAEnBA,4DAAAA,cAAiB;MAGFA,oDAAAA,IAAiC;MAAAA,0DAAAA,EAAY;MACxDA,4DAAAA,qBAMC;MALCA,wDAAAA;QAAA,gBAAkB,eAAe;MAAA,EAAQ;MAMzCA,wDAAAA,gFAKa;MACfA,0DAAAA,EAAa;MACbA,wDAAAA,2EAEa;MACbA,wDAAAA,6EAEY;MACdA,0DAAAA,EAAiB;MAIrBA,4DAAAA,eAA2C;MAEnCA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAK;MAEhBA,wDAAAA,oFA2He;MAEfA,4DAAAA,cAA4B;MAAAA,oDAAAA,sBAAc;MAAAA,0DAAAA,EAAK;MAI/CA,4DAAAA,cAAiB;MAGXA,oDAAAA,IACF;MAAAA,0DAAAA,EAAO;MACPA,4DAAAA,2BAGC;MAFCA,wDAAAA;QAAA,oCAAsC,eAAe;MAAA,EAAQ;MAG7DA,wDAAAA,4FAKmB;MACrBA,0DAAAA,EAAkB;MAItBA,qEAAAA,IAAc;MACZA,wDAAAA,+DAIK;MAGLA,4DAAAA,cAAiB;MAKAA,oDAAAA,IAAsC;MAAAA,0DAAAA,EAAY;MAC7DA,4DAAAA,qBAMC;MALCA,wDAAAA;QAAA,0BAA4B,UAAU;MAAA,EAAQ;MAM9CA,wDAAAA,gFAOa;MACfA,0DAAAA,EAAa;MACbA,wDAAAA,2EAEa;MACbA,wDAAAA,6EAEY;MACdA,0DAAAA,EAAiB;MAInBA,4DAAAA,cAAiB;MAEfA,wDAAAA,mFA0Be;MACjBA,0DAAAA,EAAM;MAGRA,4DAAAA,cAAiB;MAKAA,oDAAAA,IAAoC;MAAAA,0DAAAA,EAAY;MAC3DA,4DAAAA,iBAQE;MAJAA,wDAAAA;QAAA,0BAA4B,QAAQ;MAAA,EAAQ;MAJ9CA,0DAAAA,EAQE;MACFA,wDAAAA,2EAEa;MACbA,wDAAAA,6EAEY;MACdA,0DAAAA,EAAiB;MAGnBA,4DAAAA,cAAiB;MAGFA,oDAAAA,IAAuC;MAAAA,0DAAAA,EAAY;MAC9DA,4DAAAA,iBAaE;MATAA,wDAAAA;QAAA,0BAA4B,WAAW;MAAA,EAAQ;MAJjDA,0DAAAA,EAaE;MACFA,wDAAAA,2EAEa;MACbA,wDAAAA,6EAEY;MACdA,0DAAAA,EAAiB;MAIrBA,4DAAAA,cAAiB;MAKAA,oDAAAA,IAAyC;MAAAA,0DAAAA,EAAY;MAChEA,4DAAAA,iBAeE;MAXAA,wDAAAA;QAAA,0BAA4B,aAAa;MAAA,EAAQ;MAJnDA,0DAAAA,EAeE;MACFA,wDAAAA,2EAEa;MACbA,wDAAAA,6EAEY;MACdA,0DAAAA,EAAiB;MAEnBA,uDAAAA,cAAuB;MACzBA,0DAAAA,EAAM;MACRA,mEAAAA,EAAe;MAGfA,wDAAAA,qFAoJe;MAGfA,wDAAAA,qFAwJe;MAEfA,4DAAAA,cAAiB;MACfA,uDAAAA,cAAuB;MACvBA,4DAAAA,eAA4B;MAMxBA,wDAAAA;QAAA,OAASyI,iBAAa;MAAA,EAAC;MAEvBzI,oDAAAA,uBACF;MAAAA,0DAAAA,EAAS;MAOTA,4DAAAA,kBAOC;MACWA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAW;MAanCA,4DAAAA,cAAiB;MACfA,uDAAAA,cAAuB;MACvBA,4DAAAA,eAA4B;MAOxBA,wDAAAA;QAAA,OAASyI,cAAU;MAAA,EAAC;MAEpBzI,oDAAAA,gBACF;MAAAA,0DAAAA,EAAS;MACTA,4DAAAA,kBAQC;MACWA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAW;;;;MAlvBDA,uDAAAA,GAA4B;MAA5BA,wDAAAA,oCAA4B;MASzCA,uDAAAA,GAAwB;MAAxBA,+DAAAA,wBAAwB;MAGjCA,uDAAAA,GAAiC;MAAjCA,wDAAAA,sCAAiC;MA6BxBA,uDAAAA,GAA8B;MAA9BA,wDAAAA,sCAA8B;MAG7BA,uDAAAA,GAAgC;MAAhCA,wDAAAA,4CAAgC;MAQjCA,uDAAAA,GAAiC;MAAjCA,+DAAAA,iCAAiC;MAE1CA,uDAAAA,GAAyC;MAAzCA,wDAAAA,4CAAyC;MAOtBA,uDAAAA,GAAsC;MAAtCA,wDAAAA,oDAAsC;MAMhDA,uDAAAA,GAAuC;MAAvCA,wDAAAA,+CAAuC;MAGtCA,uDAAAA,GAAyC;MAAzCA,wDAAAA,qDAAyC;MAWxCA,uDAAAA,GAA2B;MAA3BA,wDAAAA,mCAA2B;MAoIpCA,uDAAAA,GACF;MADEA,gEAAAA,+DACF;MAEEA,uDAAAA,GAA6D;MAA7DA,wDAAAA,gEAA6D;MAI1CA,uDAAAA,GAAe;MAAfA,wDAAAA,6BAAe;MAWnCA,uDAAAA,GAAkE;MAAlEA,wDAAAA,0EAAkE;MAWpDA,uDAAAA,GAAsC;MAAtCA,+DAAAA,sCAAsC;MAE/CA,uDAAAA,GAA8C;MAA9CA,wDAAAA,iDAA8C;MAQVA,uDAAAA,GAEtD;MAFsDA,wDAAAA,yDAEtD;MAK2BA,uDAAAA,GAA4C;MAA5CA,wDAAAA,oDAA4C;MAG3CA,uDAAAA,GAA8C;MAA9CA,wDAAAA,0DAA8C;MAS7CA,uDAAAA,GAA2B;MAA3BA,wDAAAA,mCAA2B;MAmC7BA,uDAAAA,GAAoC;MAApCA,+DAAAA,oCAAoC;MAG7CA,uDAAAA,GAA6C;MAA7CA,wDAAAA,kDAA6C;MAOpCA,uDAAAA,GAA0C;MAA1CA,wDAAAA,kDAA0C;MAGzCA,uDAAAA,GAA4C;MAA5CA,wDAAAA,wDAA4C;MAS7CA,uDAAAA,GAAuC;MAAvCA,+DAAAA,uCAAuC;MAGhDA,uDAAAA,GAAgD;MAAhDA,wDAAAA,qDAAgD;MAYvCA,uDAAAA,GAA6C;MAA7CA,wDAAAA,qDAA6C;MAG5CA,uDAAAA,GAA+C;MAA/CA,wDAAAA,2DAA+C;MAYhDA,uDAAAA,GAAyC;MAAzCA,+DAAAA,yCAAyC;MAGlDA,uDAAAA,GAAkD;MAAlDA,wDAAAA,uDAAkD;MAczCA,uDAAAA,GAA+C;MAA/CA,wDAAAA,uDAA+C;MAG9CA,uDAAAA,GAAiD;MAAjDA,wDAAAA,6DAAiD;MAWlEA,uDAAAA,GAA+D;MAA/DA,wDAAAA,uEAA+D;MAuJ/DA,uDAAAA,GAA+D;MAA/DA,wDAAAA,uEAA+D;MAgL5DA,uDAAAA,GAAuC;MAAvCA,wDAAAA,4CAAuC;MAwB3CA,uDAAAA,GAAiC;MAAjCA,wDAAAA,yBAAiC;MAUjCA,uDAAAA,GAAmC;MAAnCA,yDAAAA,qBAAmC;MACnCA,wDAAAA,iCAA4B;;;;;;eD3rBxB,CACVN,6DAAO,CAAC,cAAc,EAAE,CACtBC,2DAAK,CAAC,WAAW,EAAEC,2DAAK,CAAC;MAAE8I,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAG,CAAE,CAAC,CAAC,EAC5DhJ,2DAAK,CAAC,UAAU,EAAEC,2DAAK,CAAC;MAAE8I,MAAM,EAAE;IAAG,CAAE,CAAC,CAAC,EACzC7I,gEAAU,CACR,wBAAwB,EACxBC,6DAAO,CAAC,sCAAsC,CAAC,CAChD,CACF,CAAC;EACH;AAAA;;;;;;;;;;;;;;;;;;AE7DoD;AACS;AACoC;;;AAEpG,MAAMgJ,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEH,yEAAoBA;AAAA,CAAE,EAC7C;EAAEE,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAE/I,6GAA2BA;AAAA,CAAE,CACxD;AAMK,MAAOgJ,wBAAwB;AAAxBA,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA;AAAwB;AAAxBA,wBAAwB;YAHzBL,kEAAqB,CAACE,MAAM,CAAC,EAC7BF,yDAAY;AAAA;;sHAEXK,wBAAwB;IAAAE,UAAAA,yDAAAA;IAAAC,UAFzBR,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACV8C;;;;;;;;;;;AAchE,MAAOC,oBAAqB,SAAQQ,gFAA+B;EAEvEnJ,YACEI,MAAc,EACPG,kBAAsC,EAC7CJ,cAA8B;IAE9B,MAAMoG,IAAI,GAAoB;MAC5B6C,KAAK,EAAE,cAAc;MACrBC,aAAa,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;MACnCC,OAAO,EAAE,CACP;QAAE5I,IAAI,EAAE,IAAI;QAAE0I,KAAK,EAAE;MAAI,CAAE,EAC3B;QAAE1I,IAAI,EAAE,MAAM;QAAE0I,KAAK,EAAE;MAAM,CAAE,EAC/B;QAAE1I,IAAI,EAAE,UAAU;QAAE0I,KAAK,EAAE;MAAU;MACrC;MAAA,CACD;;MACDP,IAAI,EAAE;KACP;IACD,KAAK,CAACzI,MAAM,EAAEG,kBAAkB,EAAEgG,IAAI,EAAEpG,cAAc,CAAC;IAdhD,uBAAkB,GAAlBI,kBAAkB;EAe3B;;AAnBWoI,oBAAqB;mBAArBA,oBAAoB;AAAA;AAApBA,oBAAqB;QAArBA,oBAAoB;EAAAN;EAAAC;IAAA;;;;;;;;;;;;;;MChBjCxI,4DAAAA,iBAAyC;MAEnBA,oDAAAA,GAAW;MAAAA,0DAAAA,EAAK;MAClCA,4DAAAA,gBAAyD;MAAhBA,wDAAAA;QAAA,OAASyI,SAAK;MAAA,EAAC;MACtDzI,4DAAAA,kBAAmB;MAAAA,oDAAAA,UAAG;MAAAA,0DAAAA,EAAW;MACjCA,oDAAAA,YACF;MAAAA,0DAAAA,EAAS;MAGXA,4DAAAA,aAA4B;MAEbA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAY;MAC9BA,4DAAAA,gBAIE;MADAA,wDAAAA;QAAA,OAASyI,wBAAoB;MAAA,EAAC;MAHhCzI,0DAAAA,EAIE;MAEFA,4DAAAA,mBAAoB;MAAAA,oDAAAA,cAAM;MAAAA,0DAAAA,EAAW;MACrCA,4DAAAA,gBAAU;MAAAA,oDAAAA,IAAyC;MAAAA,0DAAAA,EAAW;MAKlEA,4DAAAA,+BASC;MAHCA,wDAAAA;QAAA,OAASyI,gBAAY;MAAA,EAAC;QAAA,OACXA,kBAAc;MAAA,EADH;QAAA,OAENA,uBAAmB;MAAA,EAFb;MAGvBzI,0DAAAA,EAAmB;;;MA/BAA,uDAAAA,GAAW;MAAXA,+DAAAA,WAAW;MAiBjBA,uDAAAA,IAAyC;MAAzCA,gEAAAA,iDAAyC;MAOrDA,uDAAAA,GAAmB;MAAnBA,wDAAAA,wBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBwB;AAE0B;AACT;AACE;AACO;AACkB;AACP;AACwB;AACR;;AAiB9F,MAAOkK,iBAAiB;AAAjBA,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA;AAAiB;AAAjBA,iBAAiB;aAFjB,CAACJ,wDAAc,EAAE,CAAC;EAAAX,UAV3BM,yDAAY,EACZR,kFAAwB,EACxBS,uDAAW,EACXC,+DAAmB,EACnBM,sHAA2B,EAC3BF,qGAAoB,EACpBC,8FAAgB;AAAA;;sHAMPE,iBAAiB;IAAAC,eAdbtB,yEAAoB,EAAE5I,6GAA2B;IAAAkJ,UAE9DM,yDAAY,EACZR,kFAAwB,EACxBS,uDAAW,EACXC,+DAAmB,EACnBM,sHAA2B,EAC3BF,qGAAoB,EACpBC,8FAAgB,EAChBJ,sDAAgB,EAChBC,iDAAW;EAAA;AAAA;;;;;;;;;;;;;;;;;ACrByC;;;AAMlD,MAAOQ,4BAA6B,SAAQD,iEAAgB;EAChElK,YAAYoK,IAAgB;IAC1B,KAAK,CAAC,0BAA0B,EAAEA,IAAI,CAAC;EACzC;EAEA9C,wBAAwB,CAACrC,sBAA+C;IACtE,MAAMoF,GAAG,GAAG,IAAI,CAACD,IAAI,CAACE,KAAK,CAAC,GAAG,IAAI,CAACzB,IAAI,cAAc,EAAE5D,sBAAsB,CAAC;IAC/E,OAAO,IAAI,CAACsF,OAAO,CAACF,GAAG,CAAC;EAC1B;;AARWF,4BAA6B;mBAA7BA,4BAA4B;AAAA;AAA5BA,4BAA6B;SAA7BA,4BAA4B;EAAAK,SAA5BL,4BAA4B;EAAAM,YAF3B;AAAM;;;;;;;;;;;;;;;;;ACLoC;;;AAMlD,MAAOC,qBAAsB,SAAQR,iEAAgB;EACzDlK,YAAYoK,IAAgB;IAC1B,KAAK,CAAC,kBAAkB,EAAEA,IAAI,CAAC;EACjC;;AAHWM,qBAAsB;mBAAtBA,qBAAqB;AAAA;AAArBA,qBAAsB;SAAtBA,qBAAqB;EAAAF,SAArBE,qBAAqB;EAAAD,YAFpB;AAAM","sources":["./src/app/pages/exercise-set/exercise-set-details/exercise-set-details.component.ts","./src/app/pages/exercise-set/exercise-set-details/exercise-set-details.component.html","./src/app/pages/exercise-set/exercise-set-routing.module.ts","./src/app/pages/exercise-set/exercise-set.component.ts","./src/app/pages/exercise-set/exercise-set.component.html","./src/app/pages/exercise-set/exercise-set.module.ts","./src/app/services/exercise-configuration.service.ts","./src/app/services/exercise-method.service.ts"],"sourcesContent":["import { ExercisesService } from 'src/app/services/exercises.service';\nimport {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n} from '@angular/animations';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { MatTable } from '@angular/material/table';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ControlInput } from 'src/app/core/classes/control.class';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { UtilsService } from 'src/app/services/utils.service';\nimport { ExerciseSetService } from 'src/app/services/exercise-set.service';\nimport { MethodsService } from 'src/app/services/methods.service';\nimport { ExerciseMethodService } from 'src/app/services/exercise-method.service';\nimport { ExerciseConfigurationService } from 'src/app/services/exercise-configuration.service';\n\nexport interface ExerciseSet {\n  id?: number;\n  name: string;\n  category: string;\n\n  exerciseMethods?: ExerciseMethod[];\n}\n\nexport interface ExerciseConfiguration {\n  id?: number;\n  series: string;\n  reps: string;\n  rest: string;\n  exerciseMethodId?: number;\n  exerciseId: number;\n  methodId: number;\n}\n\nexport interface ExerciseMethod {\n  id?: number;\n  type: string;\n  exerciseGroupId?: number;\n  exerciseConfigurations?: ExerciseConfiguration[];\n}\n\n@Component({\n  selector: 'app-exercise-set-details',\n  templateUrl: './exercise-set-details.component.html',\n  styleUrls: [\n    '../../../core/shared/scss/details-item.shared.scss',\n    './exercise-set-details.component.scss',\n  ],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition(\n        'expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\n      ),\n    ]),\n  ],\n})\nexport class ExerciseSetDetailsComponent {\n  form: { [id: string]: ControlInput } = {\n    name: new ControlInput({\n      label: 'Nome',\n      config: {\n        name: 'name',\n        required: true,\n        errors: {\n          required: 'Campo obrigatório',\n        },\n      },\n    }),\n    setCategories: new ControlInput({\n      label: 'Categoria do treino',\n      selectOptions: [\n        { name: 'Opção 0', value: '0' },\n        { name: 'Opção 1', value: '1' },\n        { name: 'Opção 2', value: '2' },\n        { name: 'Opção 3', value: '3' },\n      ],\n      config: {\n        name: 'setCategories',\n        required: true,\n        errors: {\n          required: 'Campo obrigatório',\n        },\n      },\n    }),\n  };\n\n  exerciseMethodController: { manyExercises: ControlInput } = {\n    manyExercises: new ControlInput({\n      label: 'Exercícios por série',\n      value: 'ONESET',\n      config: {\n        name: 'manyExercises',\n        errors: {\n          required: 'Campo obrigatório',\n        },\n      },\n    }),\n  };\n\n  oneSetExercise: {\n    exercise: ControlInput;\n    method?: ControlInput;\n    series: ControlInput;\n    sleepTime: ControlInput;\n    repetitions: ControlInput;\n  };\n  biSetExercise: {\n    exercise: ControlInput;\n    method?: ControlInput;\n    series: ControlInput;\n    sleepTime: ControlInput;\n    repetitions: ControlInput;\n  };\n  triSetExercise: {\n    exercise: ControlInput;\n    method?: ControlInput;\n    series: ControlInput;\n    sleepTime: ControlInput;\n    repetitions: ControlInput;\n  };\n\n  exercicies: ExerciseMethod[] = [];\n\n  allExercises = [\n    { name: 'Treino 0', value: 0 },\n    { name: 'Treino 1', value: 1 },\n    { name: 'Treino 2', value: 2 },\n    { name: 'Treino 3', value: 3 },\n  ];\n\n  allMethods = [\n    { name: 'Método 0', value: 0 },\n    { name: 'Método 1', value: 1 },\n    { name: 'Método 2', value: 2 },\n    { name: 'Método 3', value: 3 },\n  ];\n\n  typeExercise = [\n    { name: 'One Set', value: 'ONESET' },\n    { name: 'Bi Set', value: 'BISET' },\n    { name: 'Tri Set', value: 'TRISET' },\n  ];\n  // Exercises table Configurations\n\n  // columns = [\n  //   { name: 'exercise', title: 'Exercício' },\n  //   { name: 'method', title: 'Método' },\n  //   { name: 'series', title: 'Séries' },\n  //   { name: 'sleepTime', title: 'Tempo de descanso' },\n  //   { name: 'repetitions', title: 'Repetições' },\n  // ];\n  columnsDisplay = ['type', 'countExercicies', 'actions'];\n  expandedExercise: ExerciseMethod | null = null;\n\n  @ViewChild('reactiveForm') formRef!: NgForm;\n  @ViewChild('tableExercisies') table!: MatTable<any> | null;\n\n  isEdit = false;\n  editId: number | null = null;\n  exerciseMethodSaved: ExerciseMethod[] = [];\n\n  constructor(\n    private utilsService: UtilsService,\n    private actRoute: ActivatedRoute,\n    public loadingService: LoadingService,\n    private router: Router,\n    private exercisesService: ExercisesService,\n    private methodsService: MethodsService,\n    private exerciseSetService: ExerciseSetService,\n    private exerciseMethodsService: ExerciseMethodService,\n    private exerciseConfigurationService: ExerciseConfigurationService\n  ) {\n    this.oneSetExercise = this.initOneBiAndTriSetForms('oneSetExercise');\n    this.biSetExercise = this.initOneBiAndTriSetForms('biSetExercise');\n    this.triSetExercise = this.initOneBiAndTriSetForms('triSetExercise');\n  }\n\n  async ngOnInit() {\n    this.allExercises = (await this.exercisesService.getAll()).map((e: any) => {\n      return { name: e.name, value: e.id };\n    });\n    this.allMethods = (await this.methodsService.getAll()).map((e: any) => {\n      return { name: e.name, value: e.id };\n    });\n\n    console.log('exercise', this.allExercises);\n    console.log('methods', this.allMethods);\n\n    this.oneSetExercise.exercise.selectOptions = this.allExercises;\n    this.biSetExercise.exercise.selectOptions = this.allExercises;\n    this.triSetExercise.exercise.selectOptions = this.allExercises;\n\n    this.oneSetExercise.method!.selectOptions = this.allMethods;\n    this.biSetExercise.method!.selectOptions = this.allMethods;\n    this.triSetExercise.method!.selectOptions = this.allMethods;\n  }\n  ngAfterViewInit() {\n    this.actRoute.params.subscribe(async (params) => {\n      if (params['id'] !== 'new') {\n        setTimeout(() => {\n          this.loadingService.activeLoading();\n        }, 50);\n        // Load data...\n        this.isEdit = true;\n        this.editId = params['id'];\n\n        const exerciseGroup: ExerciseSet =\n          await this.exerciseSetService.getById(this.editId!, [\n            'exerciseMethods',\n            'exerciseMethods.exerciseConfigurations',\n          ]);\n\n        console.log('exerciseGroup', exerciseGroup);\n\n        this.formRef.controls['name'].setValue(exerciseGroup.name);\n        this.formRef.controls['setCategories'].setValue(exerciseGroup.category);\n\n        this.exercicies = exerciseGroup.exerciseMethods!;\n        this.exerciseMethodSaved = JSON.parse(JSON.stringify(this.exercicies));\n\n        setTimeout(() => {\n          this.loadingService.deactiveLoading();\n        }, 50);\n      }\n    });\n  }\n\n  getExercise(exercise: number) {\n    return !!this.allExercises.find((x) => x.value === exercise)\n      ? this.allExercises.find((x) => x.value === exercise)!.name\n      : '';\n  }\n\n  getMethod(method: number) {\n    return !!this.allMethods.find((x) => x.value === method)\n      ? this.allMethods.find((x) => x.value === method)!.name\n      : '';  }\n\n  getErrorText(control: ControlInput) {\n    return this.utilsService.getErrorText(this.formRef, control);\n  }\n\n  issueValues() {\n    if (!this.formRef || !this.formRef.form) {\n      return '';\n    }\n\n    const controls = this.formRef.form.controls;\n\n    const keys = Object.keys(controls);\n\n    let ret = '';\n    for (const key of keys) {\n      if (this.form[key] && this.getErrorText(this.form[key]))\n        ret += `${this.form[key].label}: ${this.getErrorText(\n          this.form[key]\n        )}\\r\\n`;\n    }\n\n    return ret;\n  }\n\n  // Init new exercise methods\n\n  // dragdropEvent(event: CdkDragDrop<string[]>) {\n  //   moveItemInArray(this.exercicies, event.previousIndex, event.currentIndex);\n  // }\n\n  private initOneBiAndTriSetForms(\n    prefix: 'oneSetExercise' | 'biSetExercise' | 'triSetExercise'\n  ) {\n    const model = {\n      exercise: new ControlInput({\n        label: 'Exercício',\n        selectOptions: [\n          { name: 'Opção 0', value: 0 },\n          { name: 'Opção 1', value: 1 },\n          { name: 'Opção 2', value: 2 },\n          { name: 'Opção 3', value: 3 },\n        ],\n        config: {\n          name: 'exercise',\n          errors: {\n            required: 'Campo obrigatório',\n          },\n        },\n      }),\n      method: new ControlInput({\n        label: 'Método',\n        selectOptions: [\n          { name: 'Opção 0', value: 0 },\n          { name: 'Opção 1', value: 1 },\n          { name: 'Opção 2', value: 2 },\n          { name: 'Opção 3', value: 3 },\n        ],\n        config: {\n          name: 'method',\n          errors: {\n            required: 'Campo obrigatório',\n          },\n        },\n      }),\n      series: new ControlInput({\n        label: 'Séries',\n        config: {\n          name: 'series',\n          type: 'text',\n          errors: {\n            required: 'Campo obrigatório',\n          },\n        },\n      }),\n      sleepTime: new ControlInput({\n        label: 'Tempo de descanso',\n        config: {\n          name: 'sleepTime',\n          errors: {\n            required: 'Campo obrigatório',\n          },\n        },\n      }),\n      repetitions: new ControlInput({\n        label: 'Repetições',\n        config: {\n          name: 'repetitions',\n          errors: {\n            required: 'Campo obrigatório',\n          },\n        },\n      }),\n    };\n\n    model.exercise.config.name = `${prefix}_exercise`;\n    model.method.config.name = `${prefix}_method`;\n    model.series.config.name = `${prefix}_series`;\n    model.sleepTime.config.name = `${prefix}_repetitions`;\n    model.repetitions.config.name = `${prefix}_sleepTime`;\n\n    return model;\n  }\n  private extractOneBiAndTriSetForms(\n    set: 'oneSetExercise' | 'biSetExercise' | 'triSetExercise'\n  ): ExerciseConfiguration {\n    return {\n      exerciseId: this.formRef.form.controls[`${set}_exercise`].value,\n      methodId: this.formRef.form.controls[`${set}_method`].value,\n      series: this.formRef.form.controls[`${set}_series`].value,\n      reps: this.formRef.form.controls[`${set}_repetitions`].value,\n      rest: this.formRef.form.controls[`${set}_sleepTime`].value,\n    };\n  }\n  private populateOneBiAndTriSetForms(\n    set: 'oneSetExercise' | 'biSetExercise' | 'triSetExercise',\n    config: ExerciseConfiguration\n  ): void {\n    this.formRef.form.controls[`${set}_exercise`].setValue(config.exerciseId);\n    this.formRef.form.controls[`${set}_method`].setValue(config.methodId);\n    this.formRef.form.controls[`${set}_series`].setValue(config.series);\n    this.formRef.form.controls[`${set}_repetitions`].setValue(config.reps);\n    this.formRef.form.controls[`${set}_sleepTime`].setValue(config.rest);\n  }\n  private populateSetForms(exercise: ExerciseMethod): void {\n    this.resetAllSetForms();\n\n    if (exercise.exerciseConfigurations![0]) {\n      this.populateOneBiAndTriSetForms(\n        'oneSetExercise',\n        exercise.exerciseConfigurations![0] as ExerciseConfiguration\n      );\n    }\n    if (exercise.exerciseConfigurations![1]) {\n      this.populateOneBiAndTriSetForms(\n        'biSetExercise',\n        exercise.exerciseConfigurations![1] as ExerciseConfiguration\n      );\n    }\n    if (exercise.exerciseConfigurations![2]) {\n      this.populateOneBiAndTriSetForms(\n        'triSetExercise',\n        exercise.exerciseConfigurations![2] as ExerciseConfiguration\n      );\n    }\n  }\n  private resetOneBiAndTriSetForms(\n    set: 'oneSetExercise' | 'biSetExercise' | 'triSetExercise'\n  ): void {\n    console.log('set', set);\n    console.log('form', this.formRef);\n    this.formRef.form.controls[`${set}_exercise`].reset();\n    this.formRef.form.controls[`${set}_method`].reset();\n    this.formRef.form.controls[`${set}_series`].reset();\n    this.formRef.form.controls[`${set}_repetitions`].reset();\n    this.formRef.form.controls[`${set}_sleepTime`].reset();\n  }\n  private resetAllSetForms(): void {\n    this.resetOneBiAndTriSetForms('oneSetExercise');\n    if (this.exerciseMethodController.manyExercises.value !== 'ONESET')\n      this.resetOneBiAndTriSetForms('biSetExercise');\n    if (this.exerciseMethodController.manyExercises.value === 'TRISET')\n      this.resetOneBiAndTriSetForms('triSetExercise');\n  }\n\n  issueValuesNewExercise() {\n    let ret = '';\n\n    // if (!this.newExercise.exercise.value)\n    //   ret += `Exercício: Campo obrigatório \\r\\n`;\n    // if (this.newExercise.method && !this.newExercise.method.value)\n    //   ret += `Método: Campo obrigatório \\r\\n`;\n    // if (!this.newExercise.series.value) ret += `Séries: Campo obrigatório \\r\\n`;\n    // if (!this.newExercise.sleepTime.value)\n    //   ret += `Tempo de descanso: Campo obrigatório\\r\\n`;\n    // if (!this.newExercise.repetitions.value)\n    //   ret += `Repetições: Campo obrigatório`;\n\n    return ret;\n  }\n\n  addExercise() {\n    // Check the Exercise type betwenn one, bi or tri set\n    const configExercises = [];\n    if (this.exerciseMethodController.manyExercises.value === 'ONESET') {\n      // Fill one Config Exercise and push to array\n\n      const oneSet: ExerciseConfiguration =\n        this.extractOneBiAndTriSetForms('oneSetExercise');\n      configExercises.push(oneSet);\n    } else if (this.exerciseMethodController.manyExercises.value === 'BISET') {\n      const oneSet: ExerciseConfiguration =\n        this.extractOneBiAndTriSetForms('oneSetExercise');\n      const biSet: ExerciseConfiguration =\n        this.extractOneBiAndTriSetForms('biSetExercise');\n      configExercises.push(oneSet);\n      configExercises.push(biSet);\n    } else if (this.exerciseMethodController.manyExercises.value === 'TRISET') {\n      const oneSet: ExerciseConfiguration =\n        this.extractOneBiAndTriSetForms('oneSetExercise');\n      const biSet: ExerciseConfiguration =\n        this.extractOneBiAndTriSetForms('biSetExercise');\n      const triSet: ExerciseConfiguration =\n        this.extractOneBiAndTriSetForms('triSetExercise');\n      configExercises.push(oneSet);\n      configExercises.push(biSet);\n      configExercises.push(triSet);\n    }\n\n    const exercise: ExerciseMethod = {\n      type: this.exerciseMethodController.manyExercises.value as string,\n      exerciseConfigurations: configExercises,\n    };\n    this.exercicies.push(exercise);\n    this.table?.renderRows();\n\n    console.log(this.exercicies);\n    this.resetAllSetForms();\n  }\n\n  removeExercise(event: any, index: number) {\n    event.stopPropagation();\n    console.log('index', index);\n    this.exercicies.splice(index, 1);\n    this.table?.renderRows();\n\n    console.log('exercisies', this.exercicies);\n  }\n\n  editExercise(event: any, index: number) {\n    event.stopPropagation();\n    const exercise = this.exercicies[index];\n\n    this.formRef.form.controls[`manyExercises`].setValue(exercise.type);\n    this.populateSetForms(exercise);\n\n    this.removeExercise(event, index);\n  }\n\n  // End new exercise methods\n\n  maskFilled(control: ControlInput) {\n    console.log('maskFilled');\n  }\n\n  dateEvents(name: string, event: any) {\n    console.log('dateEvents', name, event);\n  }\n\n  async onSubmit() {\n    console.log('Iniciando o submit');\n    const data = this.formRef.value;\n\n    try {\n      // Create Exercise Groups (Exercise Set)\n      console.log('Criando o grupo de exercícios');\n      const exerciseSet: ExerciseSet = {\n        name: data.name,\n        category: data.setCategories,\n      };\n\n      console.log('Salvando/Atualizando o grupo de exercícios');\n      const exerciseSetCreated = !this.isEdit\n        ? await this.exerciseSetService.create(exerciseSet)\n        : await this.exerciseSetService.update(this.editId!, exerciseSet);\n\n      console.log('Grupo salvo/atualizado com sucesso');\n      console.log('Criando os métodos de exercícios');\n      // Create Exercise Methods\n      const queryToSave = this.exercicies.map(async (e, i) => {\n        console.log('Map index', i);\n        const toSave = {\n          id: e.id ? e.id : undefined,\n          type: e.type,\n          exerciseGroupId: exerciseSetCreated.id,\n        };\n\n        console.log('Para salvar => ', toSave);\n        const exerciseMethodCreated = !toSave.id\n          ? await this.exerciseMethodsService.create(toSave)\n          : await this.exerciseMethodsService.update(toSave.id, toSave);\n\n        console.log('Método de exercício salvo/atualizado com sucesso');\n        console.log('Criando as configurações de exercícios');\n        const exerciseConfigurations: ExerciseConfiguration[] =\n          e.exerciseConfigurations!.map((exerciseConfiguration) => {\n            return {\n              ...exerciseConfiguration,\n              exerciseMethodId: exerciseMethodCreated.id,\n            };\n          });\n\n        console.log(\n          'Configurações de exercícios montadas para salvar/editar',\n          exerciseConfigurations\n        );\n        const exerciseConfigurationCreated = !this.isEdit\n          ? await this.exerciseConfigurationService.createMany(\n              exerciseConfigurations\n            )\n          : await this.exerciseConfigurationService.updateListExerciseMethod(\n              exerciseConfigurations\n            );\n\n        console.log('Configurações de exercicios salvas com sucesso');\n        const ret = {\n          exerciseSetId: exerciseSetCreated.id,\n          exerciseMethodId: exerciseMethodCreated.id,\n          exerciseConfigurationIds: exerciseConfigurationCreated,\n        };\n\n        console.log('Rerutn final');\n        return ret;\n      });\n\n      await Promise.all(queryToSave);\n      if (this.isEdit) await this.checkExerciseMethodsCreated();\n      // Create Exercise Configurations\n\n      this.router.navigate(['exercise-set']);\n    } catch (error) {\n      console.log('error on create', error);\n    }\n  }\n\n  private async checkExerciseMethodsCreated() {\n    const deletedOnes = this.exerciseMethodSaved.filter(\n      (em) =>\n        !this.exercicies\n          .filter((e) => e.id)\n          .map((e) => e.id)\n          .includes(em.id)\n    );\n\n    const d$ = deletedOnes.map((em) =>\n      this.exerciseMethodsService.delete(em.id!)\n    );\n    const d = await Promise.all(d$);\n    return d;\n  }\n}\n","<section class=\"master mat-elevation-z2\">\n  <div class=\"loading-shade all\" *ngIf=\"loadingService.loading\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <form class=\"form\" #reactiveForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <!-- Nome -->\n        <mat-form-field>\n          <mat-label>{{ form[\"name\"].label }}</mat-label>\n          <input\n            matInput\n            [type]=\"form['name'].config.type\"\n            [name]=\"form['name'].config.name\"\n            [(ngModel)]=\"form['name'].value\"\n            [placeholder]=\"form['name'].config.placeholder\"\n            [disabled]=\"form['name'].config.disabled\"\n            [readonly]=\"form['name'].config.readonly\"\n            [required]=\"form['name'].config.required\"\n            [minlength]=\"form['name'].config.minlength\"\n            [maxlength]=\"form['name'].config.maxlength\"\n            [pattern]=\"form['name'].config.pattern\"\n            [email]=\"form['name'].config.email\"\n            [mask]=\"\n              form['name'].config.mask && form['name'].config.maskConfig.mask\n                ? form['name'].config.maskConfig.mask\n                : null\n            \"\n            [dropSpecialCharacters]=\"\n              form['name'].config.mask &&\n              form['name'].config.maskConfig.dropSpecialCharacters\n                ? form['name'].config.maskConfig.dropSpecialCharacters\n                : true\n            \"\n            [validation]=\"\n              form['name'].config.mask &&\n              form['name'].config.maskConfig.validation\n                ? form['name'].config.maskConfig.validation\n                : false\n            \"\n          />\n          <mat-hint *ngIf=\"form['name'].config.hint\">{{\n            form[\"name\"].config.hint\n          }}</mat-hint>\n          <mat-error *ngIf=\"getErrorText(form['name'])\">\n            {{ getErrorText(form[\"name\"]) }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col\">\n        <!-- Categoria do conjunto -->\n        <mat-form-field appearance=\"fill\">\n          <mat-label>{{ form[\"setCategories\"].label }}</mat-label>\n          <mat-select\n            [(ngModel)]=\"form['setCategories'].value\"\n            [name]=\"form['setCategories'].config.name\"\n            [placeholder]=\"form['setCategories'].config.placeholder\"\n            [disabled]=\"form['setCategories'].config.disabled\"\n            [required]=\"form['setCategories'].config.required\"\n          >\n            <mat-option\n              *ngFor=\"let item of form['setCategories'].selectOptions\"\n              [value]=\"item.value\"\n            >\n              {{ item.name }}\n            </mat-option>\n          </mat-select>\n          <mat-hint *ngIf=\"form['setCategories'].config.hint\">{{\n            form[\"url\"].config.hint\n          }}</mat-hint>\n          <mat-error *ngIf=\"getErrorText(form['setCategories'])\">\n            {{ getErrorText(form[\"setCategories\"]) }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"row mat-elevation-z2 workouts\">\n      <div class=\"col\">\n        <h2>Treinos</h2>\n\n        <ng-container *ngIf=\"exercicies.length > 0\">\n          <h3>Treinos Salvos</h3>\n\n          <table\n            #tableExercisies\n            mat-table\n            [dataSource]=\"exercicies\"\n            multiTemplateDataRows\n            class=\"mat-elevation-z8\"\n          >\n            <!-- Normal Columns -->\n            <ng-container matColumnDef=\"type\">\n              <th mat-header-cell *matHeaderCellDef>Tipo</th>\n              <td mat-cell *matCellDef=\"let element\">{{ element.type }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"countExercicies\">\n              <th mat-header-cell *matHeaderCellDef>Quantidade de exer.</th>\n              <td mat-cell *matCellDef=\"let element\">\n                {{ element.exerciseConfigurations.length }}\n              </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"actions\">\n              <th mat-header-cell *matHeaderCellDef></th>\n              <td\n                mat-cell\n                *matCellDef=\"let element; let i = dataIndex\"\n                class=\"actions\"\n              >\n                <button\n                  mat-icon-button\n                  type=\"button\"\n                  (click)=\"editExercise($event, i)\"\n                >\n                  <mat-icon>edit</mat-icon>\n                </button>\n                <button\n                  mat-icon-button\n                  type=\"button\"\n                  (click)=\"removeExercise($event, i)\"\n                >\n                  <mat-icon>delete</mat-icon>\n                </button>\n              </td>\n            </ng-container>\n            <!-- End Normal Columns -->\n\n            <!-- Expand Column-->\n\n            <ng-container matColumnDef=\"expandedDetail\">\n              <td\n                mat-cell\n                *matCellDef=\"let element\"\n                [attr.colspan]=\"columnsDisplay.length\"\n              >\n                <div\n                  class=\"content-exercise-details\"\n                  [@detailExpand]=\"\n                    element == expandedExercise ? 'expanded' : 'collapsed'\n                  \"\n                  [class.exepanded-details]=\"element == expandedExercise\"\n                >\n                  <!-- Dados de cada uma das configs -->\n\n                  <ng-container\n                    *ngFor=\"\n                      let exerciseConfiguration of element.exerciseConfigurations;\n                      let i = index\n                    \"\n                  >\n                    <div class=\"config\">\n                      <div class=\"row\">\n                        <div class=\"col subtitle\">\n                          <h4>Exercicio {{ i + 1 }}</h4>\n                        </div>\n                      </div>\n                      <div\n                        class=\"row\"\n                        *ngIf=\"allExercises.length > 0 && allMethods.length > 0\"\n                      >\n                        <div class=\"col exerciseId\">\n                          Exercicio:\n                          {{ getExercise(exerciseConfiguration.exerciseId) }}\n                        </div>\n                        <div class=\"col methodId\">\n                          Método:\n                          {{ getMethod(exerciseConfiguration.methodId) }}\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col series\">\n                          Séries: {{ exerciseConfiguration.series }}\n                        </div>\n                        <div class=\"col reps\">\n                          Repetições: {{ exerciseConfiguration.reps }}\n                        </div>\n                        <div class=\"col rest\">\n                          Tempo de descanso: {{ exerciseConfiguration.rest }}\n                        </div>\n                      </div>\n                    </div>\n                  </ng-container>\n                </div>\n              </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"columnsDisplay\"></tr>\n            <tr\n              mat-row\n              *matRowDef=\"let element; columns: columnsDisplay\"\n              class=\"exercise-table-row\"\n              [class.example-expanded-row]=\"expandedExercise === element\"\n              (click)=\"\n                expandedExercise = expandedExercise === element ? null : element\n              \"\n            ></tr>\n            <tr\n              mat-row\n              *matRowDef=\"let row; columns: ['expandedDetail']\"\n              class=\"exercise-detail-row\"\n            ></tr>\n          </table>\n        </ng-container>\n\n        <h3 style=\"margin-top: 1em\">Adicionar novo</h3>\n\n        <!-- Exercise-method Type -->\n\n        <div class=\"row\">\n          <div class=\"col\">\n            <span>\n              {{ exerciseMethodController[\"manyExercises\"].label }}\n            </span>\n            <mat-radio-group\n              [(ngModel)]=\"exerciseMethodController['manyExercises'].value\"\n              [name]=\"exerciseMethodController['manyExercises'].config.name\"\n            >\n              <mat-radio-button\n                *ngFor=\"let item of typeExercise\"\n                [value]=\"item.value\"\n              >\n                {{ item.name }}\n              </mat-radio-button>\n            </mat-radio-group>\n          </div>\n        </div>\n\n        <ng-container>\n          <h4\n            *ngIf=\"exerciseMethodController['manyExercises'].value !== 'ONESET'\"\n          >\n            Configurações do Exercício 1\n          </h4>\n          <!-- Exercise One Set -->\n\n          <div class=\"row\">\n            <!-- One set Exercise -->\n            <div class=\"col\">\n              <!-- Treino -->\n              <mat-form-field appearance=\"fill\">\n                <mat-label>{{ oneSetExercise[\"exercise\"].label }}</mat-label>\n                <mat-select\n                  [(ngModel)]=\"oneSetExercise['exercise'].value\"\n                  [name]=\"oneSetExercise['exercise'].config.name\"\n                  [placeholder]=\"oneSetExercise['exercise'].config.placeholder\"\n                  [disabled]=\"oneSetExercise['exercise'].config.disabled\"\n                  [required]=\"oneSetExercise['exercise'].config.required\"\n                >\n                  <mat-option\n                    *ngFor=\"\n                      let item of oneSetExercise['exercise'].selectOptions\n                    \"\n                    [value]=\"item.value\"\n                  >\n                    {{ item.name }}\n                  </mat-option>\n                </mat-select>\n                <mat-hint *ngIf=\"oneSetExercise['exercise'].config.hint\">{{\n                  oneSetExercise[\"exercise\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(oneSetExercise['exercise'])\">\n                  {{ getErrorText(oneSetExercise[\"exercise\"]) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n            <!-- One Set Method -->\n            <div class=\"col\">\n              <!-- Método de treino* -->\n              <ng-container *ngIf=\"oneSetExercise.method\">\n                <mat-form-field appearance=\"fill\">\n                  <mat-label>{{ oneSetExercise[\"method\"].label }}</mat-label>\n                  <mat-select\n                    [(ngModel)]=\"oneSetExercise['method'].value\"\n                    [name]=\"oneSetExercise['method'].config.name\"\n                    [placeholder]=\"oneSetExercise['method'].config.placeholder\"\n                    [disabled]=\"oneSetExercise['method'].config.disabled\"\n                    [required]=\"oneSetExercise['method'].config.required\"\n                  >\n                    <mat-option\n                      *ngFor=\"\n                        let item of oneSetExercise['method'].selectOptions\n                      \"\n                      [value]=\"item.value\"\n                    >\n                      {{ item.name }}\n                    </mat-option>\n                  </mat-select>\n                  <mat-hint *ngIf=\"oneSetExercise['method'].config.hint\">{{\n                    oneSetExercise[\"method\"].config.hint\n                  }}</mat-hint>\n                  <mat-error *ngIf=\"getErrorText(oneSetExercise['method'])\">\n                    {{ getErrorText(oneSetExercise[\"method\"]) }}\n                  </mat-error>\n                </mat-form-field>\n              </ng-container>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <!-- One Set Series -->\n            <div class=\"col\">\n              <!-- Séries -->\n              <mat-form-field>\n                <mat-label>{{ oneSetExercise[\"series\"].label }}</mat-label>\n                <input\n                  matInput\n                  [name]=\"oneSetExercise['series'].config.name\"\n                  [type]=\"oneSetExercise['series'].config.type\"\n                  [(ngModel)]=\"oneSetExercise['series'].value\"\n                  [placeholder]=\"oneSetExercise['series'].config.placeholder\"\n                  [disabled]=\"oneSetExercise['series'].config.disabled\"\n                  [readonly]=\"oneSetExercise['series'].config.readonly\"\n                />\n                <mat-hint *ngIf=\"oneSetExercise['series'].config.hint\">{{\n                  oneSetExercise[\"series\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(oneSetExercise['series'])\">\n                  {{ getErrorText(oneSetExercise[\"series\"]) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <!-- One Set Reps -->\n            <div class=\"col\">\n              <!-- Repetição -->\n              <mat-form-field>\n                <mat-label>{{ oneSetExercise[\"sleepTime\"].label }}</mat-label>\n                <input\n                  matInput\n                  [type]=\"oneSetExercise['sleepTime'].config.type\"\n                  [name]=\"oneSetExercise['sleepTime'].config.name\"\n                  [(ngModel)]=\"oneSetExercise['sleepTime'].value\"\n                  [placeholder]=\"oneSetExercise['sleepTime'].config.placeholder\"\n                  [disabled]=\"oneSetExercise['sleepTime'].config.disabled\"\n                  [readonly]=\"oneSetExercise['sleepTime'].config.readonly\"\n                  [required]=\"oneSetExercise['sleepTime'].config.required\"\n                  [minlength]=\"oneSetExercise['sleepTime'].config.minlength\"\n                  [maxlength]=\"oneSetExercise['sleepTime'].config.maxlength\"\n                  [pattern]=\"oneSetExercise['sleepTime'].config.pattern\"\n                  [email]=\"oneSetExercise['sleepTime'].config.email\"\n                />\n                <mat-hint *ngIf=\"oneSetExercise['sleepTime'].config.hint\">{{\n                  oneSetExercise[\"sleepTime\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(oneSetExercise['sleepTime'])\">\n                  {{ getErrorText(oneSetExercise[\"sleepTime\"]) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <!-- One Set Sleep -->\n            <div class=\"col\">\n              <!-- Tempo de descanso -->\n              <mat-form-field>\n                <mat-label>{{ oneSetExercise[\"repetitions\"].label }}</mat-label>\n                <input\n                  matInput\n                  [type]=\"oneSetExercise['repetitions'].config.type\"\n                  [name]=\"oneSetExercise['repetitions'].config.name\"\n                  [(ngModel)]=\"oneSetExercise['repetitions'].value\"\n                  [placeholder]=\"\n                    oneSetExercise['repetitions'].config.placeholder\n                  \"\n                  [disabled]=\"oneSetExercise['repetitions'].config.disabled\"\n                  [readonly]=\"oneSetExercise['repetitions'].config.readonly\"\n                  [required]=\"oneSetExercise['repetitions'].config.required\"\n                  [minlength]=\"oneSetExercise['repetitions'].config.minlength\"\n                  [maxlength]=\"oneSetExercise['repetitions'].config.maxlength\"\n                  [pattern]=\"oneSetExercise['repetitions'].config.pattern\"\n                  [email]=\"oneSetExercise['repetitions'].config.email\"\n                />\n                <mat-hint *ngIf=\"oneSetExercise['repetitions'].config.hint\">{{\n                  oneSetExercise[\"repetitions\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(oneSetExercise['repetitions'])\">\n                  {{ getErrorText(oneSetExercise[\"repetitions\"]) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"col\"></div>\n          </div>\n        </ng-container>\n\n        <!-- Exercise Bi Set -->\n        <ng-container\n          *ngIf=\"exerciseMethodController.manyExercises.value !== 'ONESET'\"\n        >\n          <h4>Configurações do Exercício 2</h4>\n          <div class=\"row\">\n            <!-- One set Exercise -->\n            <div class=\"col\">\n              <!-- Treino -->\n              <mat-form-field appearance=\"fill\">\n                <mat-label>{{ biSetExercise[\"exercise\"].label }}</mat-label>\n                <mat-select\n                  [(ngModel)]=\"biSetExercise['exercise'].value\"\n                  [name]=\"biSetExercise['exercise'].config.name\"\n                  [placeholder]=\"biSetExercise['exercise'].config.placeholder\"\n                  [disabled]=\"biSetExercise['exercise'].config.disabled\"\n                  [required]=\"biSetExercise['exercise'].config.required\"\n                >\n                  <mat-option\n                    *ngFor=\"let item of biSetExercise['exercise'].selectOptions\"\n                    [value]=\"item.value\"\n                  >\n                    {{ item.name }}\n                  </mat-option>\n                </mat-select>\n                <mat-hint *ngIf=\"biSetExercise['exercise'].config.hint\">{{\n                  biSetExercise[\"exercise\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(biSetExercise['exercise'])\">\n                  {{ getErrorText(biSetExercise[\"exercise\"]) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n            <!-- One Set Method -->\n            <div class=\"col\">\n              <!-- Método de treino* -->\n              <ng-container *ngIf=\"biSetExercise.method\">\n                <mat-form-field appearance=\"fill\">\n                  <mat-label>{{ biSetExercise[\"method\"].label }}</mat-label>\n                  <mat-select\n                    [(ngModel)]=\"biSetExercise['method'].value\"\n                    [name]=\"biSetExercise['method'].config.name\"\n                    [placeholder]=\"biSetExercise['method'].config.placeholder\"\n                    [disabled]=\"biSetExercise['method'].config.disabled\"\n                    [required]=\"biSetExercise['method'].config.required\"\n                  >\n                    <mat-option\n                      *ngFor=\"let item of biSetExercise['method'].selectOptions\"\n                      [value]=\"item.value\"\n                    >\n                      {{ item.name }}\n                    </mat-option>\n                  </mat-select>\n                  <mat-hint *ngIf=\"biSetExercise['method'].config.hint\">{{\n                    biSetExercise[\"method\"].config.hint\n                  }}</mat-hint>\n                  <mat-error *ngIf=\"getErrorText(biSetExercise['method'])\">\n                    {{ getErrorText(biSetExercise[\"method\"]) }}\n                  </mat-error>\n                </mat-form-field>\n              </ng-container>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <!-- One Set Series -->\n            <div class=\"col\">\n              <!-- Séries -->\n              <mat-form-field>\n                <mat-label>{{ biSetExercise[\"series\"].label }}</mat-label>\n                <input\n                  matInput\n                  [name]=\"biSetExercise['series'].config.name\"\n                  [type]=\"biSetExercise['series'].config.type\"\n                  [(ngModel)]=\"biSetExercise['series'].value\"\n                  [placeholder]=\"biSetExercise['series'].config.placeholder\"\n                  [disabled]=\"biSetExercise['series'].config.disabled\"\n                  [readonly]=\"biSetExercise['series'].config.readonly\"\n                />\n                <mat-hint *ngIf=\"biSetExercise['series'].config.hint\">{{\n                  biSetExercise[\"series\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(biSetExercise['series'])\">\n                  {{ getErrorText(biSetExercise[\"series\"]) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <!-- One Set Reps -->\n            <div class=\"col\">\n              <!-- Repetição -->\n              <mat-form-field>\n                <mat-label>{{ biSetExercise[\"sleepTime\"].label }}</mat-label>\n                <input\n                  matInput\n                  [type]=\"biSetExercise['sleepTime'].config.type\"\n                  [name]=\"biSetExercise['sleepTime'].config.name\"\n                  [(ngModel)]=\"biSetExercise['sleepTime'].value\"\n                  [placeholder]=\"biSetExercise['sleepTime'].config.placeholder\"\n                  [disabled]=\"biSetExercise['sleepTime'].config.disabled\"\n                  [readonly]=\"biSetExercise['sleepTime'].config.readonly\"\n                  [required]=\"biSetExercise['sleepTime'].config.required\"\n                  [minlength]=\"biSetExercise['sleepTime'].config.minlength\"\n                  [maxlength]=\"biSetExercise['sleepTime'].config.maxlength\"\n                  [pattern]=\"biSetExercise['sleepTime'].config.pattern\"\n                  [email]=\"biSetExercise['sleepTime'].config.email\"\n                />\n                <mat-hint *ngIf=\"biSetExercise['sleepTime'].config.hint\">{{\n                  biSetExercise[\"sleepTime\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(biSetExercise['sleepTime'])\">\n                  {{ getErrorText(biSetExercise[\"sleepTime\"]) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <!-- One Set Sleep -->\n            <div class=\"col\">\n              <!-- Tempo de descanso -->\n              <mat-form-field>\n                <mat-label>{{ biSetExercise[\"repetitions\"].label }}</mat-label>\n                <input\n                  matInput\n                  [type]=\"biSetExercise['repetitions'].config.type\"\n                  [name]=\"biSetExercise['repetitions'].config.name\"\n                  [(ngModel)]=\"biSetExercise['repetitions'].value\"\n                  [placeholder]=\"\n                    biSetExercise['repetitions'].config.placeholder\n                  \"\n                  [disabled]=\"biSetExercise['repetitions'].config.disabled\"\n                  [readonly]=\"biSetExercise['repetitions'].config.readonly\"\n                  [required]=\"biSetExercise['repetitions'].config.required\"\n                  [minlength]=\"biSetExercise['repetitions'].config.minlength\"\n                  [maxlength]=\"biSetExercise['repetitions'].config.maxlength\"\n                  [pattern]=\"biSetExercise['repetitions'].config.pattern\"\n                  [email]=\"biSetExercise['repetitions'].config.email\"\n                />\n                <mat-hint *ngIf=\"biSetExercise['repetitions'].config.hint\">{{\n                  biSetExercise[\"repetitions\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(biSetExercise['repetitions'])\">\n                  {{ getErrorText(biSetExercise[\"repetitions\"]) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"col\"></div>\n          </div>\n        </ng-container>\n\n        <!-- Exercise Tri Set -->\n        <ng-container\n          *ngIf=\"exerciseMethodController.manyExercises.value === 'TRISET'\"\n        >\n          <h4>Configurações do Exercício 3</h4>\n          <div class=\"row\">\n            <!-- One set Exercise -->\n            <div class=\"col\">\n              <!-- Treino -->\n              <mat-form-field appearance=\"fill\">\n                <mat-label>{{ triSetExercise[\"exercise\"].label }}</mat-label>\n                <mat-select\n                  [(ngModel)]=\"triSetExercise['exercise'].value\"\n                  [name]=\"triSetExercise['exercise'].config.name\"\n                  [placeholder]=\"triSetExercise['exercise'].config.placeholder\"\n                  [disabled]=\"triSetExercise['exercise'].config.disabled\"\n                  [required]=\"triSetExercise['exercise'].config.required\"\n                >\n                  <mat-option\n                    *ngFor=\"\n                      let item of triSetExercise['exercise'].selectOptions\n                    \"\n                    [value]=\"item.value\"\n                  >\n                    {{ item.name }}\n                  </mat-option>\n                </mat-select>\n                <mat-hint *ngIf=\"triSetExercise['exercise'].config.hint\">{{\n                  triSetExercise[\"exercise\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(triSetExercise['exercise'])\">\n                  {{ getErrorText(triSetExercise[\"exercise\"]) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n\n            <!-- One Set Method -->\n            <div class=\"col\">\n              <!-- Método de treino* -->\n              <ng-container *ngIf=\"triSetExercise.method\">\n                <mat-form-field appearance=\"fill\">\n                  <mat-label>{{ triSetExercise[\"method\"].label }}</mat-label>\n                  <mat-select\n                    [(ngModel)]=\"triSetExercise['method'].value\"\n                    [name]=\"triSetExercise['method'].config.name\"\n                    [placeholder]=\"triSetExercise['method'].config.placeholder\"\n                    [disabled]=\"triSetExercise['method'].config.disabled\"\n                    [required]=\"triSetExercise['method'].config.required\"\n                  >\n                    <mat-option\n                      *ngFor=\"\n                        let item of triSetExercise['method'].selectOptions\n                      \"\n                      [value]=\"item.value\"\n                    >\n                      {{ item.name }}\n                    </mat-option>\n                  </mat-select>\n                  <mat-hint *ngIf=\"triSetExercise['method'].config.hint\">{{\n                    triSetExercise[\"method\"].config.hint\n                  }}</mat-hint>\n                  <mat-error *ngIf=\"getErrorText(triSetExercise['method'])\">\n                    {{ getErrorText(triSetExercise[\"method\"]) }}\n                  </mat-error>\n                </mat-form-field>\n              </ng-container>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <!-- One Set Series -->\n            <div class=\"col\">\n              <!-- Séries -->\n              <mat-form-field>\n                <mat-label>{{ triSetExercise[\"series\"].label }}</mat-label>\n                <input\n                  matInput\n                  [name]=\"triSetExercise['series'].config.name\"\n                  [type]=\"triSetExercise['series'].config.type\"\n                  [(ngModel)]=\"triSetExercise['series'].value\"\n                  [placeholder]=\"triSetExercise['series'].config.placeholder\"\n                  [disabled]=\"triSetExercise['series'].config.disabled\"\n                  [readonly]=\"triSetExercise['series'].config.readonly\"\n                />\n                <mat-hint *ngIf=\"triSetExercise['series'].config.hint\">{{\n                  triSetExercise[\"series\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(triSetExercise['series'])\">\n                  {{ getErrorText(triSetExercise[\"series\"]) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <!-- One Set Reps -->\n            <div class=\"col\">\n              <!-- Repetição -->\n              <mat-form-field>\n                <mat-label>{{ triSetExercise[\"sleepTime\"].label }}</mat-label>\n                <input\n                  matInput\n                  [type]=\"triSetExercise['sleepTime'].config.type\"\n                  [name]=\"triSetExercise['sleepTime'].config.name\"\n                  [(ngModel)]=\"triSetExercise['sleepTime'].value\"\n                  [placeholder]=\"triSetExercise['sleepTime'].config.placeholder\"\n                  [disabled]=\"triSetExercise['sleepTime'].config.disabled\"\n                  [readonly]=\"triSetExercise['sleepTime'].config.readonly\"\n                  [required]=\"triSetExercise['sleepTime'].config.required\"\n                  [minlength]=\"triSetExercise['sleepTime'].config.minlength\"\n                  [maxlength]=\"triSetExercise['sleepTime'].config.maxlength\"\n                  [pattern]=\"triSetExercise['sleepTime'].config.pattern\"\n                  [email]=\"triSetExercise['sleepTime'].config.email\"\n                />\n                <mat-hint *ngIf=\"triSetExercise['sleepTime'].config.hint\">{{\n                  triSetExercise[\"sleepTime\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(triSetExercise['sleepTime'])\">\n                  {{ getErrorText(triSetExercise[\"sleepTime\"]) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <!-- One Set Sleep -->\n            <div class=\"col\">\n              <!-- Tempo de descanso -->\n              <mat-form-field>\n                <mat-label>{{ triSetExercise[\"repetitions\"].label }}</mat-label>\n                <input\n                  matInput\n                  [type]=\"triSetExercise['repetitions'].config.type\"\n                  [name]=\"triSetExercise['repetitions'].config.name\"\n                  [(ngModel)]=\"triSetExercise['repetitions'].value\"\n                  [placeholder]=\"\n                    triSetExercise['repetitions'].config.placeholder\n                  \"\n                  [disabled]=\"triSetExercise['repetitions'].config.disabled\"\n                  [readonly]=\"triSetExercise['repetitions'].config.readonly\"\n                  [required]=\"triSetExercise['repetitions'].config.required\"\n                  [minlength]=\"triSetExercise['repetitions'].config.minlength\"\n                  [maxlength]=\"triSetExercise['repetitions'].config.maxlength\"\n                  [pattern]=\"triSetExercise['repetitions'].config.pattern\"\n                  [email]=\"triSetExercise['repetitions'].config.email\"\n                />\n                <mat-hint *ngIf=\"triSetExercise['repetitions'].config.hint\">{{\n                  triSetExercise[\"repetitions\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(triSetExercise['repetitions'])\">\n                  {{ getErrorText(triSetExercise[\"repetitions\"]) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div class=\"col\"></div>\n          </div>\n        </ng-container>\n\n        <div class=\"row\">\n          <div class=\"col\"></div>\n          <div class=\"col submit-col\">\n            <button\n              class=\"submit-btn\"\n              type=\"button\"\n              mat-raised-button\n              color=\"accent\"\n              (click)=\"addExercise()\"\n            >\n              Salvar treino\n            </button>\n            <!-- [disabled]=\"\n              !newExercise['exercise'].value ||\n              !newExercise['series'].value ||\n              !newExercise['sleepTime'].value ||\n              !newExercise['repetitions'].value\n            \" -->\n            <button\n              mat-icon-button\n              aria-label=\"Help Form Button\"\n              type=\"button\"\n              class=\"help-btn\"\n              [matTooltip]=\"issueValuesNewExercise()\"\n              matTooltipClass=\"multiline-tooltip\"\n            >\n              <mat-icon>help</mat-icon>\n            </button>\n            <!-- [class.show]=\"\n              !newExercise['exercise'].value ||\n              !newExercise['series'].value ||\n              !newExercise['sleepTime'].value ||\n              !newExercise['repetitions'].value\n            \" -->\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\"></div>\n      <div class=\"col submit-col\">\n        <button\n          class=\"submit-btn\"\n          type=\"button\"\n          mat-raised-button\n          color=\"accent\"\n          [disabled]=\"reactiveForm.invalid\"\n          (click)=\"onSubmit()\"\n        >\n          Salvar\n        </button>\n        <button\n          mat-icon-button\n          aria-label=\"Help Form Button\"\n          type=\"button\"\n          class=\"help-btn\"\n          [class.show]=\"reactiveForm.invalid\"\n          [matTooltip]=\"issueValues()\"\n          matTooltipClass=\"multiline-tooltip\"\n        >\n          <mat-icon>help</mat-icon>\n        </button>\n      </div>\n    </div>\n  </form>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ExerciseSetComponent } from './exercise-set.component';\nimport { ExerciseSetDetailsComponent } from './exercise-set-details/exercise-set-details.component';\n\nconst routes: Routes = [\n  { path: '', component: ExerciseSetComponent },\n  { path: ':id', component: ExerciseSetDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExerciseSetRoutingModule {}\n","import { Component, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MasterTable } from 'src/app/core/classes/master-table.class';\nimport { DataMasterTable } from 'src/app/core/interfaces/data-master-table.interface';\nimport { ExerciseSetService } from 'src/app/services/exercise-set.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ServiceBackendItemService } from 'src/app/services/service-backend-item.service';\n\n@Component({\n  selector: 'app-exercise-set',\n  templateUrl: './exercise-set.component.html',\n  styleUrls: [\n    '../../core/shared/scss/master-details.shared.scss',\n    './exercise-set.component.scss',\n  ],\n})\nexport class ExerciseSetComponent extends MasterTable<ExerciseSetService> {\n  @ViewChild('masterTable') masterTable: any;\n  constructor(\n    router: Router,\n    public exerciseSetService: ExerciseSetService,\n    loadingService: LoadingService\n  ) {\n    const data: DataMasterTable = {\n      title: 'Exercise Set',\n      targetFilters: ['Name', 'Category'],\n      columns: [\n        { name: 'id', title: 'ID' },\n        { name: 'name', title: 'Name' },\n        { name: 'category', title: 'Category' },\n        // { name: 'description', title: 'Description' },\n      ],\n      path: '/exercise-set',\n    };\n    super(router, exerciseSetService, data, loadingService);\n  }\n\n  // add()\n  // changeFilter(filter: any)\n  // edit(row: any)\n\n  // changeTable(event: any)\n}\n","<section class=\"master mat-elevation-z2\">\n  <div class=\"header-content\">\n    <h2 class=\"title\">{{ title }}</h2>\n    <button mat-raised-button color=\"accent\" (click)=\"add()\">\n      <mat-icon class=\"\">add</mat-icon>\n      Add\n    </button>\n  </div>\n\n  <div class=\"filter-content\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Filtrar</mat-label>\n      <input\n        matInput\n        placeholder=\"Filtre aqui\"\n        (input)=\"changeFilter($event)\"\n      />\n\n      <mat-icon matPrefix>search</mat-icon>\n      <mat-hint>Filtre por {{ targetFilters.join(\", \") }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <!-- Table -->\n  <app-master-table\n    #masterTable\n    [columns]=\"columns\"\n    [service]=\"exerciseSetService\"\n    functionName=\"getByFilter\"\n    [filterChange$]=\"filterChange$\"\n    (edit$)=\"edit($event)\"\n    (delete$)=\"delete($event)\"\n    (changeTable$)=\"changeTable($event)\"\n  ></app-master-table>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ExerciseSetRoutingModule } from './exercise-set-routing.module';\nimport { ExerciseSetComponent } from './exercise-set.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\nimport { MaterialBundleModule } from 'src/app/core/material-bundle/material-bundle.module';\nimport { ComponentsModule } from 'src/app/core/shared/components/components.module';\nimport { DrivenFormsDirectivesModule } from 'src/app/core/shared/directives/driven-forms-directives.module';\nimport { ExerciseSetDetailsComponent } from './exercise-set-details/exercise-set-details.component';\n\n@NgModule({\n  declarations: [ExerciseSetComponent, ExerciseSetDetailsComponent],\n  imports: [\n    CommonModule,\n    ExerciseSetRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DrivenFormsDirectivesModule,\n    MaterialBundleModule,\n    ComponentsModule,\n    NgxMaskDirective,\n    NgxMaskPipe,\n  ],\n  providers: [provideNgxMask()],\n})\nexport class ExerciseSetModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BaseModelService } from './base-model.service';\nimport { ExerciseConfiguration } from '../pages/exercise-set/exercise-set-details/exercise-set-details.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExerciseConfigurationService extends BaseModelService {\n  constructor(http: HttpClient) {\n    super('/exercise-configurations', http);\n  }\n\n  updateListExerciseMethod(exerciseConfigurations: ExerciseConfiguration[]) {\n    const req = this.http.patch(`${this.path}/update-list`, exerciseConfigurations);\n    return this.request(req);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseModelService } from './base-model.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExerciseMethodService extends BaseModelService {\n  constructor(http: HttpClient) {\n    super('/exercise-method', http);\n  }\n}\n"],"names":["trigger","state","style","transition","animate","ControlInput","i0","ExerciseSetDetailsComponent","constructor","utilsService","actRoute","loadingService","router","exercisesService","methodsService","exerciseSetService","exerciseMethodsService","exerciseConfigurationService","name","label","config","required","errors","setCategories","selectOptions","value","manyExercises","oneSetExercise","initOneBiAndTriSetForms","biSetExercise","triSetExercise","ngOnInit","allExercises","getAll","map","e","id","allMethods","console","log","exercise","method","ngAfterViewInit","params","subscribe","setTimeout","activeLoading","isEdit","editId","exerciseGroup","getById","formRef","controls","setValue","category","exercicies","exerciseMethods","exerciseMethodSaved","JSON","parse","stringify","deactiveLoading","getExercise","find","x","getMethod","getErrorText","control","issueValues","form","keys","Object","ret","key","prefix","model","series","type","sleepTime","repetitions","extractOneBiAndTriSetForms","set","exerciseId","methodId","reps","rest","populateOneBiAndTriSetForms","populateSetForms","resetAllSetForms","exerciseConfigurations","resetOneBiAndTriSetForms","reset","exerciseMethodController","issueValuesNewExercise","addExercise","configExercises","oneSet","push","biSet","triSet","table","renderRows","removeExercise","event","index","stopPropagation","splice","editExercise","maskFilled","dateEvents","onSubmit","data","exerciseSet","exerciseSetCreated","create","update","queryToSave","i","toSave","undefined","exerciseGroupId","exerciseMethodCreated","exerciseConfiguration","exerciseMethodId","exerciseConfigurationCreated","createMany","updateListExerciseMethod","exerciseSetId","exerciseConfigurationIds","Promise","all","checkExerciseMethodsCreated","navigate","error","deletedOnes","filter","em","includes","d$","delete","d","selectors","viewQuery","ctx","height","minHeight","RouterModule","ExerciseSetComponent","routes","path","component","ExerciseSetRoutingModule","forChild","imports","exports","MasterTable","title","targetFilters","columns","CommonModule","FormsModule","ReactiveFormsModule","NgxMaskDirective","NgxMaskPipe","provideNgxMask","MaterialBundleModule","ComponentsModule","DrivenFormsDirectivesModule","ExerciseSetModule","declarations","BaseModelService","ExerciseConfigurationService","http","req","patch","request","factory","providedIn","ExerciseMethodService"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
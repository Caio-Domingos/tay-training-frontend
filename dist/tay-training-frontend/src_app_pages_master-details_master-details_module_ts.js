"use strict";
(self["webpackChunktay_training_frontend"] = self["webpackChunktay_training_frontend"] || []).push([["src_app_pages_master-details_master-details_module_ts"],{

/***/ 9212:
/*!*****************************************************************************!*\
  !*** ./src/app/pages/master-details/details-item/details-item.component.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DetailsItemComponent": () => (/* binding */ DetailsItemComponent)
/* harmony export */ });
/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! date-fns */ 3957);
/* harmony import */ var date_fns_locale__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! date-fns/locale */ 6842);
/* harmony import */ var src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/core/classes/control.class */ 5208);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var src_app_services_utils_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/services/utils.service */ 8270);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ 7067);
/* harmony import */ var src_app_services_loading_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/loading.service */ 4471);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _core_shared_directives_cpf_validator_directive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../core/shared/directives/cpf-validator.directive */ 4877);
/* harmony import */ var _core_shared_directives_url_validator_directive__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../core/shared/directives/url-validator.directive */ 9094);
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/core */ 9121);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material/button */ 4522);
/* harmony import */ var _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/datepicker */ 2298);
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/icon */ 7822);
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/input */ 8562);
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material/form-field */ 5074);
/* harmony import */ var _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/material/progress-spinner */ 1708);
/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/material/select */ 7371);
/* harmony import */ var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/material/tooltip */ 6896);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ngx-mask */ 446);





















const _c0 = ["reactiveForm"];
function DetailsItemComponent_div_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](1, "mat-spinner");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }
}
function DetailsItemComponent_mat_hint_10_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx_r2.form["name"].config.hint);
  }
}
function DetailsItemComponent_mat_error_11_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"](" ", ctx_r3.getErrorText(ctx_r3.form["name"]), " ");
  }
}
function DetailsItemComponent_mat_hint_17_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx_r4.form["cpf"].config.hint);
  }
}
function DetailsItemComponent_mat_error_18_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"](" ", ctx_r5.getErrorText(ctx_r5.form["cpf"]), " ");
  }
}
function DetailsItemComponent_mat_error_27_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"](" ", ctx_r6.getErrorText(ctx_r6.form["simpleDate"]), " ");
  }
}
function DetailsItemComponent_mat_hint_36_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx_r8.form["url"].config.hint);
  }
}
function DetailsItemComponent_mat_error_37_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"](" ", ctx_r9.getErrorText(ctx_r9.form["url"]), " ");
  }
}
function DetailsItemComponent_mat_option_44_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "mat-option", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r11 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("value", item_r11.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"](" ", item_r11.name, " ");
  }
}
(0,date_fns__WEBPACK_IMPORTED_MODULE_6__["default"])({
  locale: date_fns_locale__WEBPACK_IMPORTED_MODULE_7__["default"]
});
class DetailsItemComponent {
  constructor(utilsService, actRoute, loadingService) {
    this.utilsService = utilsService;
    this.actRoute = actRoute;
    this.loadingService = loadingService;
    this.form = {
      name: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_0__.ControlInput({
        label: 'Nome',
        config: {
          name: 'name',
          hint: 'Nome do usuário',
          required: true,
          errors: {
            required: 'Campo obrigatório'
          }
        }
      }),
      cpf: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_0__.ControlInput({
        label: 'CPF',
        config: {
          name: 'cpf',
          required: true,
          maxlength: 14,
          customValidators: {
            cpfValidator: true
          },
          mask: true,
          maskConfig: {
            mask: '000.000.000-00',
            dropSpecialCharacters: true,
            validation: true
          },
          errors: {
            required: 'Campo obrigatório',
            maxlength: 'Máximo de 100 caracteres',
            mask: 'CPF imcompleto',
            invalidCpf: 'CPF inválido'
          }
        }
      }),
      simpleDate: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_0__.ControlInput({
        label: 'Data simples',
        config: {
          name: 'simpleDate',
          type: 'text',
          hint: 'DD/MM/AAAA',
          required: true,
          dateConfig: {
            minDate: new Date(2020, 0, 1)
          },
          errors: {
            required: 'Campo obrigatório',
            minlength: 'Mínimo de 3 caracteres'
          }
        }
      }),
      url: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_0__.ControlInput({
        label: 'Url',
        config: {
          name: 'url',
          required: true,
          maxlength: 100,
          minlength: 10,
          customValidators: {
            urlValidator: true
          },
          errors: {
            required: 'Campo obrigatório',
            minlength: 'Mínimo de 10 caracteres',
            maxlength: 'Máximo de 100 caracteres',
            invalidUrl: 'Url inválida'
          }
        }
      }),
      select: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_0__.ControlInput({
        label: 'Select',
        selectOptions: [{
          name: 'Opção 1',
          value: '1'
        }, {
          name: 'Opção 2',
          value: '2'
        }, {
          name: 'Opção 3',
          value: '3'
        }],
        config: {
          name: 'select',
          required: true,
          errors: {
            required: 'Campo obrigatório'
          }
        }
      })
    };
    actRoute.params.subscribe(params => {
      console.log('params', params);
    });
  }
  ngOnInit() {}
  ngAfterViewInit() {
    this.actRoute.params.subscribe(params => {
      if (params['id'] !== 'new') {
        // Load data...
        this.loadingService.activeLoading();
        setTimeout(() => {
          this.formRef.setValue({
            name: 'Teste',
            cpf: '123.456.789-00',
            simpleDate: new Date(),
            url: 'https://www.google.com',
            select: '1'
          });
          this.loadingService.deactiveLoading();
        }, 2000);
      }
    });
  }
  getErrorText(control) {
    return this.utilsService.getErrorText(this.formRef, control);
  }
  issueValues() {
    if (!this.formRef || !this.formRef.form) {
      return '';
    }
    const controls = this.formRef.form.controls;
    const keys = Object.keys(controls);
    let ret = '';
    for (const key of keys) {
      if (this.getErrorText(this.form[key])) ret += `${this.form[key].label}: ${this.getErrorText(this.form[key])}\r\n`;
    }
    return ret;
  }
  maskFilled(control) {
    console.log('maskFilled');
  }
  dateEvents(name, event) {
    console.log('dateEvents', name, event);
  }
  onSubmit() {
    console.log('onSubmit', this.formRef);
  }
}
DetailsItemComponent.ɵfac = function DetailsItemComponent_Factory(t) {
  return new (t || DetailsItemComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](src_app_services_utils_service__WEBPACK_IMPORTED_MODULE_1__.UtilsService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_8__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](src_app_services_loading_service__WEBPACK_IMPORTED_MODULE_2__.LoadingService));
};
DetailsItemComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({
  type: DetailsItemComponent,
  selectors: [["app-details-item"]],
  viewQuery: function DetailsItemComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵviewQuery"](_c0, 5);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵloadQuery"]()) && (ctx.formRef = _t.first);
    }
  },
  decls: 54,
  vars: 80,
  consts: [[1, "master", "mat-elevation-z2"], ["class", "loading-shade all", 4, "ngIf"], [1, "form"], ["reactiveForm", "ngForm"], [1, "row"], [1, "col"], ["matInput", "", 3, "type", "name", "ngModel", "placeholder", "disabled", "readonly", "required", "minlength", "maxlength", "pattern", "email", "mask", "dropSpecialCharacters", "validation", "ngModelChange"], [4, "ngIf"], ["matInput", "", 3, "ngModel", "type", "name", "placeholder", "disabled", "readonly", "required", "minlength", "maxlength", "pattern", "email", "v-cpf-validator", "mask", "dropSpecialCharacters", "validation", "ngModelChange"], ["appearance", "fill"], ["matInput", "", 3, "matDatepicker", "ngModel", "type", "name", "placeholder", "disabled", "readonly", "required", "minlength", "maxlength", "min", "ngModelChange", "dateChange"], ["matIconSuffix", "", 3, "for"], ["simpleDate", ""], ["matInput", "", 3, "type", "name", "ngModel", "placeholder", "disabled", "readonly", "required", "minlength", "maxlength", "pattern", "email", "v-url-validator", "mask", "dropSpecialCharacters", "validation", "ngModelChange"], [3, "ngModel", "name", "placeholder", "disabled", "required", "ngModelChange"], [3, "value", 4, "ngFor", "ngForOf"], [1, "col", "submit-col"], ["type", "button", "mat-raised-button", "", "color", "accent", 1, "submit-btn", 3, "disabled", "click"], ["mat-icon-button", "", "aria-label", "Help Form Button", "type", "button", "matTooltipClass", "multiline-tooltip", 1, "help-btn", 3, "matTooltip"], [1, "loading-shade", "all"], [3, "value"]],
  template: function DetailsItemComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "section", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](1, DetailsItemComponent_div_1_Template, 2, 0, "div", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "form", 2, 3)(4, "div", 4)(5, "div", 5)(6, "mat-form-field")(7, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](8);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](9, "input", 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("ngModelChange", function DetailsItemComponent_Template_input_ngModelChange_9_listener($event) {
        return ctx.form["name"].value = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](10, DetailsItemComponent_mat_hint_10_Template, 2, 1, "mat-hint", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](11, DetailsItemComponent_mat_error_11_Template, 2, 1, "mat-error", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](12, "div", 5)(13, "mat-form-field")(14, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](15);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](16, "input", 8);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("ngModelChange", function DetailsItemComponent_Template_input_ngModelChange_16_listener($event) {
        return ctx.form["cpf"].value = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](17, DetailsItemComponent_mat_hint_17_Template, 2, 1, "mat-hint", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](18, DetailsItemComponent_mat_error_18_Template, 2, 1, "mat-error", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()()();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](19, "div", 4)(20, "div", 5)(21, "mat-form-field", 9)(22, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](23);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](24, "input", 10);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("ngModelChange", function DetailsItemComponent_Template_input_ngModelChange_24_listener($event) {
        return ctx.form["simpleDate"].value = $event;
      })("dateChange", function DetailsItemComponent_Template_input_dateChange_24_listener($event) {
        return ctx.dateEvents("change", $event.value);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](25, "mat-hint");
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](26);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](27, DetailsItemComponent_mat_error_27_Template, 2, 1, "mat-error", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](28, "mat-datepicker-toggle", 11)(29, "mat-datepicker", null, 12);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](31, "div", 5)(32, "mat-form-field")(33, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](34);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](35, "input", 13);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("ngModelChange", function DetailsItemComponent_Template_input_ngModelChange_35_listener($event) {
        return ctx.form["url"].value = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](36, DetailsItemComponent_mat_hint_36_Template, 2, 1, "mat-hint", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](37, DetailsItemComponent_mat_error_37_Template, 2, 1, "mat-error", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()()();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](38, "div", 4)(39, "div", 5)(40, "mat-form-field", 9)(41, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](42);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](43, "mat-select", 14);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("ngModelChange", function DetailsItemComponent_Template_mat_select_ngModelChange_43_listener($event) {
        return ctx.form["select"].value = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](44, DetailsItemComponent_mat_option_44_Template, 2, 2, "mat-option", 15);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()()();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](45, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](46, "div", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](47, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](48, "div", 16)(49, "button", 17);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function DetailsItemComponent_Template_button_click_49_listener() {
        return ctx.onSubmit();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](50, " Salvar ");
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](51, "button", 18)(52, "mat-icon");
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](53, "help");
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()()()()()();
    }
    if (rf & 2) {
      const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵreference"](3);
      const _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵreference"](30);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.loadingService.loading);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](7);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx.form["name"].label);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("type", ctx.form["name"].config.type)("name", ctx.form["name"].config.name)("ngModel", ctx.form["name"].value)("placeholder", ctx.form["name"].config.placeholder)("disabled", ctx.form["name"].config.disabled)("readonly", ctx.form["name"].config.readonly)("required", ctx.form["name"].config.required)("minlength", ctx.form["name"].config.minlength)("maxlength", ctx.form["name"].config.maxlength)("pattern", ctx.form["name"].config.pattern)("email", ctx.form["name"].config.email)("mask", ctx.form["name"].config.mask && ctx.form["name"].config.maskConfig.mask ? ctx.form["name"].config.maskConfig.mask : null)("dropSpecialCharacters", ctx.form["name"].config.mask && ctx.form["name"].config.maskConfig.dropSpecialCharacters ? ctx.form["name"].config.maskConfig.dropSpecialCharacters : true)("validation", ctx.form["name"].config.mask && ctx.form["name"].config.maskConfig.validation ? ctx.form["name"].config.maskConfig.validation : false);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.form["name"].config.hint);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.getErrorText(ctx.form["name"]));
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx.form["cpf"].label);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngModel", ctx.form["cpf"].value)("type", ctx.form["cpf"].config.type)("name", ctx.form["cpf"].config.name)("placeholder", ctx.form["cpf"].config.placeholder)("disabled", ctx.form["cpf"].config.disabled)("readonly", ctx.form["cpf"].config.readonly)("required", ctx.form["cpf"].config.required)("minlength", ctx.form["cpf"].config.minlength)("maxlength", ctx.form["cpf"].config.maxlength)("pattern", ctx.form["cpf"].config.pattern)("email", ctx.form["cpf"].config.email)("v-cpf-validator", !!ctx.form["cpf"].config.customValidators["cpfValidator"])("mask", ctx.form["cpf"].config.mask && ctx.form["cpf"].config.maskConfig.mask ? ctx.form["cpf"].config.maskConfig.mask : null)("dropSpecialCharacters", ctx.form["cpf"].config.mask && ctx.form["cpf"].config.maskConfig.dropSpecialCharacters ? ctx.form["cpf"].config.maskConfig.dropSpecialCharacters : true)("validation", ctx.form["cpf"].config.mask && ctx.form["cpf"].config.maskConfig.validation ? ctx.form["cpf"].config.maskConfig.validation : false);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.form["cpf"].config.hint);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.getErrorText(ctx.form["cpf"]));
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx.form["simpleDate"].label);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("matDatepicker", _r7)("ngModel", ctx.form["simpleDate"].value)("type", ctx.form["simpleDate"].config.type)("name", ctx.form["simpleDate"].config.name)("placeholder", ctx.form["simpleDate"].config.placeholder)("disabled", ctx.form["simpleDate"].config.disabled)("readonly", ctx.form["simpleDate"].config.readonly)("required", ctx.form["simpleDate"].config.required)("minlength", ctx.form["simpleDate"].config.minlength)("maxlength", ctx.form["simpleDate"].config.maxlength)("min", ctx.form["simpleDate"].config.dateConfig.minDate ? ctx.form["simpleDate"].config.dateConfig.minDate : "1900-01-01");
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx.form["simpleDate"].config.hint);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.getErrorText(ctx.form["simpleDate"]));
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("for", _r7);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](6);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx.form["url"].label);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("type", ctx.form["url"].config.type)("name", ctx.form["url"].config.name)("ngModel", ctx.form["url"].value)("placeholder", ctx.form["url"].config.placeholder)("disabled", ctx.form["url"].config.disabled)("readonly", ctx.form["url"].config.readonly)("required", ctx.form["url"].config.required)("minlength", ctx.form["url"].config.minlength)("maxlength", ctx.form["url"].config.maxlength)("pattern", ctx.form["url"].config.pattern)("email", ctx.form["url"].config.email)("v-url-validator", !!ctx.form["url"].config.customValidators["urlValidator"])("mask", ctx.form["url"].config.mask && ctx.form["url"].config.maskConfig.mask ? ctx.form["url"].config.maskConfig.mask : null)("dropSpecialCharacters", ctx.form["url"].config.mask && ctx.form["url"].config.maskConfig.dropSpecialCharacters ? ctx.form["url"].config.maskConfig.dropSpecialCharacters : true)("validation", ctx.form["url"].config.mask && ctx.form["url"].config.maskConfig.validation ? ctx.form["url"].config.maskConfig.validation : false);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.form["url"].config.hint);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.getErrorText(ctx.form["url"]));
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx.form["select"].label);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngModel", ctx.form["select"].value)("name", ctx.form["select"].config.name)("placeholder", ctx.form["select"].config.placeholder)("disabled", ctx.form["select"].config.disabled)("required", ctx.form["select"].config.required);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx.form["select"].selectOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("disabled", _r1.invalid);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵclassProp"]("show", _r1.invalid);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("matTooltip", ctx.issueValues());
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_9__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, _angular_forms__WEBPACK_IMPORTED_MODULE_10__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.RequiredValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.MinLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.MaxLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.PatternValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.EmailValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgModel, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgForm, _core_shared_directives_cpf_validator_directive__WEBPACK_IMPORTED_MODULE_3__.CpfValidatorDirective, _core_shared_directives_url_validator_directive__WEBPACK_IMPORTED_MODULE_4__.UrlValidatorDirective, _angular_material_core__WEBPACK_IMPORTED_MODULE_11__.MatOption, _angular_material_button__WEBPACK_IMPORTED_MODULE_12__.MatButton, _angular_material_button__WEBPACK_IMPORTED_MODULE_12__.MatIconButton, _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_13__.MatDatepicker, _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_13__.MatDatepickerInput, _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_13__.MatDatepickerToggle, _angular_material_icon__WEBPACK_IMPORTED_MODULE_14__.MatIcon, _angular_material_input__WEBPACK_IMPORTED_MODULE_15__.MatInput, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_16__.MatFormField, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_16__.MatLabel, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_16__.MatHint, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_16__.MatError, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_16__.MatSuffix, _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_17__.MatProgressSpinner, _angular_material_select__WEBPACK_IMPORTED_MODULE_18__.MatSelect, _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_19__.MatTooltip, ngx_mask__WEBPACK_IMPORTED_MODULE_20__.NgxMaskDirective],
  styles: ["@import url(https://fonts.googleapis.com/icon?family=Material+Icons);@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 900[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 100[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 900&display=swap\u00CF)[_ngcontent-%COMP%];@charset \"UTF-8\";\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\nbody[_ngcontent-%COMP%] {\n  --primary-color: #fa1b31;\n  --primary-lighter-color: #f66d73;\n  --primary-darker-color: #cd0014;\n  --text-primary-color: #ffffff;\n  --text-primary-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-primary-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --accent-color: #1bfae4;\n  --accent-lighter-color: #d9fefa;\n  --accent-darker-color: #00bd95;\n  --text-accent-color: #ffffff;\n  --text-accent-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-accent-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --warn-color: #ff0000;\n  --warn-lighter-color: #ffb3b3;\n  --warn-darker-color: #ff0000;\n  --text-warn-color: #ffffff;\n  --text-warn-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-warn-darker-color: #ffffff;\n}\n\n.mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #686868;\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #686868;\n}\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #686868;\n}\n\n.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-elevation-z0[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n}\n\n.mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #424242;\n}\n\n.mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #595959;\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-mdc-card-title[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-headline6-font-size, 20px);\n  line-height: var(--mdc-typography-headline6-line-height, 32px);\n  font-weight: var(--mdc-typography-headline6-font-weight, 500);\n  letter-spacing: var(--mdc-typography-headline6-letter-spacing, 0.0075em);\n  -webkit-text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n  text-transform: var(--mdc-typography-headline6-text-transform, none);\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n.mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-supporting-text-font: Roboto;\n  --mdc-plain-tooltip-supporting-text-size: 13px;\n  --mdc-plain-tooltip-supporting-text-weight: 500;\n  --mdc-plain-tooltip-supporting-text-tracking: 0.0893em;\n}\n\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n.mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(255, 255, 255, 0.87));\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.08);\n}\n.mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.24);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: #4a4a4a;\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.42);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.06);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #464646;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.08;\n}\n\n.mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.24;\n}\n\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%]:disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n\n.mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 28px;\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -34.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 24px;\n  padding-bottom: 8px;\n}\n\n.mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mdc-text-field__input[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n.mdc-text-field__affix[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--textarea[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  line-height: 1.5rem;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-subscript-wrapper[_ngcontent-%COMP%], .mat-mdc-form-field-bottom-align[_ngcontent-%COMP%]::before {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%], .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: calc(17px * var(--mat-mdc-form-field-floating-label-scale, 0.75));\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-select[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-autocomplete-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: #424242;\n  --mdc-dialog-with-divider-divider-color: rgba(255, 255, 255, 0.12);\n  --mdc-dialog-subhead-color: rgba(255, 255, 255, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-subhead-font: Roboto;\n  --mdc-dialog-subhead-line-height: 32px;\n  --mdc-dialog-subhead-size: 20px;\n  --mdc-dialog-subhead-weight: 500;\n  --mdc-dialog-subhead-tracking: 0.0075em;\n  --mdc-dialog-supporting-text-font: Roboto;\n  --mdc-dialog-supporting-text-line-height: 24px;\n  --mdc-dialog-supporting-text-size: 17px;\n  --mdc-dialog-supporting-text-weight: 500;\n  --mdc-dialog-supporting-text-tracking: 0.0179em;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #595959;\n  --mdc-chip-elevated-disabled-container-color: #595959;\n  --mdc-chip-label-text-color: #fafafa;\n  --mdc-chip-disabled-label-text-color: #fafafa;\n  --mdc-chip-with-icon-icon-color: #fafafa;\n  --mdc-chip-with-icon-disabled-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #fafafa;\n  --mdc-chip-with-icon-selected-icon-color: #fafafa;\n}\n.mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n\n.mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: white;\n}\n\n.mat-mdc-chip[_ngcontent-%COMP%] {\n  height: 32px;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #000;\n  --mdc-switch-disabled-unselected-handle-color: #000;\n  --mdc-switch-disabled-selected-track-color: #f5f5f5;\n  --mdc-switch-disabled-unselected-track-color: #f5f5f5;\n  --mdc-switch-unselected-focus-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-pressed-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-hover-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-focus-track-color: #616161;\n  --mdc-switch-unselected-hover-track-color: #616161;\n  --mdc-switch-unselected-pressed-track-color: #616161;\n  --mdc-switch-unselected-track-color: #616161;\n  --mdc-switch-unselected-focus-handle-color: #fafafa;\n  --mdc-switch-unselected-hover-handle-color: #fafafa;\n  --mdc-switch-unselected-pressed-handle-color: #fafafa;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #9e9e9e;\n  --mdc-switch-selected-icon-color: #212121;\n  --mdc-switch-disabled-selected-icon-color: #212121;\n  --mdc-switch-disabled-unselected-icon-color: #212121;\n  --mdc-switch-unselected-icon-color: #212121;\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-slide-toggle.mat-primary[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #fb979b;\n  --mdc-switch-selected-hover-handle-color: #fb979b;\n  --mdc-switch-selected-pressed-handle-color: #fb979b;\n}\n.mat-mdc-slide-toggle.mat-accent[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #1bfae4;\n  --mdc-switch-selected-hover-handle-color: #1bfae4;\n  --mdc-switch-selected-pressed-handle-color: #1bfae4;\n}\n.mat-mdc-slide-toggle.mat-warn[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: red;\n  --mdc-switch-selected-hover-handle-color: red;\n  --mdc-switch-selected-pressed-handle-color: red;\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-state-layer-size: 48px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%] {\n  padding: calc((40px - 20px) / 2);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__background[_ngcontent-%COMP%]::before {\n  top: calc(-1 * (40px - 20px) / 2);\n  left: calc(-1 * (40px - 20px) / 2);\n  width: 40px;\n  height: 40px;\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - 40px) / 2);\n  right: calc((40px - 40px) / 2);\n  left: calc((40px - 40px) / 2);\n  width: 40px;\n  height: 40px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: white;\n  --mdc-slider-label-label-text-color: black;\n  --mdc-slider-disabled-handle-color: #fff;\n  --mdc-slider-disabled-active-track-color: #fff;\n  --mdc-slider-disabled-inactive-track-color: #fff;\n  --mdc-slider-with-tick-marks-disabled-container-color: #fff;\n  --mat-mdc-slider-value-indicator-opacity: 0.9;\n}\n.mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-label-text-font: Roboto;\n  --mdc-slider-label-label-text-size: 14px;\n  --mdc-slider-label-label-text-line-height: 24px;\n  --mdc-slider-label-label-text-tracking: 0.0067em;\n  --mdc-slider-label-label-text-weight: 500;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-mdc-menu-content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n.mat-mdc-menu-content[_ngcontent-%COMP%], .mat-mdc-menu-content[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: white;\n  --mdc-list-list-item-supporting-text-color: rgba(255, 255, 255, 0.7);\n  --mdc-list-list-item-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-disabled-label-text-color: white;\n  --mdc-list-list-item-disabled-leading-icon-color: white;\n  --mdc-list-list-item-disabled-trailing-icon-color: white;\n  --mdc-list-list-item-hover-label-text-color: white;\n  --mdc-list-list-item-hover-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-focus-label-text-color: white;\n  --mdc-list-list-item-hover-state-layer-color: white;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.08;\n  --mdc-list-list-item-focus-state-layer-color: white;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.24;\n}\n\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-one-line-container-height: 48px;\n  --mdc-list-list-item-two-line-container-height: 64px;\n  --mdc-list-list-item-three-line-container-height: 88px;\n}\n\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line[_ngcontent-%COMP%] {\n  height: 56px;\n}\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-font: Roboto;\n  --mdc-list-list-item-label-text-line-height: 24px;\n  --mdc-list-list-item-label-text-size: 17px;\n  --mdc-list-list-item-label-text-tracking: 0.0179em;\n  --mdc-list-list-item-label-text-weight: 500;\n  --mdc-list-list-item-supporting-text-font: Roboto;\n  --mdc-list-list-item-supporting-text-line-height: 20px;\n  --mdc-list-list-item-supporting-text-size: 15px;\n  --mdc-list-list-item-supporting-text-tracking: 0.0179em;\n  --mdc-list-list-item-supporting-text-weight: 400;\n  --mdc-list-list-item-trailing-supporting-text-font: Roboto;\n  --mdc-list-list-item-trailing-supporting-text-line-height: 14px;\n  --mdc-list-list-item-trailing-supporting-text-size: 13px;\n  --mdc-list-list-item-trailing-supporting-text-tracking: 0.0893em;\n  --mdc-list-list-item-trailing-supporting-text-weight: 500;\n}\n\n.mdc-list-group__subheader[_ngcontent-%COMP%] {\n  font: 400 16px / 28px Roboto;\n  letter-spacing: 0.0094em;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: #424242;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n  border-right: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 40px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 20px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -26.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-paginator-container[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n\n.mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n\n.mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mat-mdc-tab-header[_ngcontent-%COMP%]   .mdc-tab[_ngcontent-%COMP%] {\n  height: 48px;\n}\n\n.mdc-tab[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fff;\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n\n.mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%] {\n  padding: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  margin: calc((var(--mdc-checkbox-touch-target-size, 40px) - 40px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__background[_ngcontent-%COMP%] {\n  top: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  left: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  right: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  left: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  width: var(--mdc-checkbox-touch-target-size, 40px);\n  height: var(--mdc-checkbox-touch-target-size, 40px);\n}\n\n@media all and (-ms-high-contrast: none) {\n  .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__focus-ring[_ngcontent-%COMP%] {\n    display: none;\n  }\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fff;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-text-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #424242;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-filled-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #424242;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-elevation: 0;\n}\n\n.mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fff;\n}\n.mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-button[_ngcontent-%COMP%], .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n\n.mat-mdc-raised-button[_ngcontent-%COMP%], .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-raised-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  height: 36px;\n}\n\n.mdc-button[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n\n.mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-icon-button-disabled-icon-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 48px;\n  max-width: 48px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  margin-right: 4px;\n  margin-left: 4px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 48px;\n   \n  left: 50%;\n  width: 48px;\n  transform: translate(-50%, -50%);\n}\n\n.mat-mdc-fab[_ngcontent-%COMP%], .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #424242;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-fab-icon-color: rgba(255, 255, 255, 0.5);\n  --mat-mdc-fab-color: rgba(255, 255, 255, 0.5);\n}\n\n.mdc-fab--extended[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: rgba(0, 0, 0, 0.87);\n  --mdc-snackbar-container-color: #d9d9d9;\n  --mdc-snackbar-supporting-text-color: rgba(66, 66, 66, 0.87);\n}\n\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mdc-snackbar-supporting-text-font: Roboto;\n  --mdc-snackbar-supporting-text-line-height: 20px;\n  --mdc-snackbar-supporting-text-size: 15px;\n  --mdc-snackbar-supporting-text-weight: 400;\n}\n\n.mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n}\n\n.mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n\n.mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__cell[_ngcontent-%COMP%], .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mdc-data-table__pagination-total[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-table[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  min-height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__header-row[_ngcontent-%COMP%] {\n  height: 56px;\n}\n\n.mdc-data-table__content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n\n.mat-badge[_ngcontent-%COMP%] {\n  position: relative;\n}\n\n.mat-badge.mat-badge[_ngcontent-%COMP%] {\n  overflow: visible;\n}\n\n.mat-badge-hidden[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n\n.ng-animate-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%], .mat-badge-content._mat-animation-noopable[_ngcontent-%COMP%] {\n  transition: none;\n}\n\n.mat-badge-content.mat-badge-active[_ngcontent-%COMP%] {\n  transform: none;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -8px;\n}\n\n.mat-badge-medium[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -11px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -14px;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n\n.mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n\n.mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #6e6e6e;\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, sans-serif;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 9px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 24px;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n  background: #424242;\n}\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: white;\n}\n\n.mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #595959;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #595959;\n}\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #595959;\n}\n\n.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #212121;\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n  background-color: black;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: #424242;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #595959;\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-label-content[_ngcontent-%COMP%] {\n  line-height: 48px;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: white;\n}\n\n.mat-datepicker-toggle[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(255, 255, 255, 0.12);\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%], .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-calendar-body-cell-content[_ngcontent-%COMP%], .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: white;\n  border-color: transparent;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.24);\n}\n\n.mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n\n.mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n\n.mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n\n.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n\n.mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n\n.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n\n@media (hover: hover) {\n  .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: #424242;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n\n.mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  padding: 8px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  margin-right: 0px;\n  margin-left: 0px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 40px;\n   \n  left: 50%;\n  width: 40px;\n  transform: translate(-50%, -50%);\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mat-mdc-button-touch-target[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-calendar[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-body[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-calendar-body-label[_ngcontent-%COMP%], .mat-calendar-period-button[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\n  font-size: 11px;\n  font-weight: 400;\n}\n\n.mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%] {\n  background: #424242;\n  color: white;\n}\n.mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n\n@media (hover: none) {\n  .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: #424242;\n  }\n}\n.mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-expansion-panel-header-description[_ngcontent-%COMP%], .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n}\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  font-family: Roboto;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-expansion-panel-content[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-grid-tile-header[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%] {\n  font-size: 15px;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%] {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2), .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2) {\n  font-size: 13px;\n}\n\n.mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-drawer[_ngcontent-%COMP%] {\n  background-color: #424242;\n  color: white;\n}\n.mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n.mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n\n.mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(189, 189, 189, 0.6);\n}\n\n.mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n.mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.7);\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-stepper-horizontal[_ngcontent-%COMP%], .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%], .mat-vertical-stepper-header[_ngcontent-%COMP%] {\n  padding: 24px 24px;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  top: -16px;\n  bottom: -16px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before {\n  top: 36px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  top: 36px;\n}\n\n.mat-stepper-vertical[_ngcontent-%COMP%], .mat-stepper-horizontal[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-step-label[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-step-sub-label-error[_ngcontent-%COMP%] {\n  font-weight: normal;\n}\n\n.mat-step-label-error[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mat-step-label-selected[_ngcontent-%COMP%] {\n  font-size: 17px;\n  font-weight: 500;\n}\n\n.mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #c6c6c6;\n}\n\n.mat-toolbar[_ngcontent-%COMP%] {\n  background: #212121;\n  color: white;\n}\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n\n.mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n  min-height: 64px;\n}\n\n.mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n    min-height: 56px;\n  }\n  .mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n    height: 56px;\n  }\n}\n.mat-toolbar[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%] {\n  font: 500 20px / 32px Roboto;\n  letter-spacing: 0.0075em;\n  margin: 0;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-tree-node[_ngcontent-%COMP%] {\n  min-height: 48px;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  font-weight: 400;\n  font-size: 15px;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-app-background[_ngcontent-%COMP%], .theme-alternate.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z0[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z1[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z2[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z3[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z4[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z5[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z6[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z7[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z8[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z9[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z10[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z11[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z12[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z13[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z14[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z15[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z16[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z17[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z18[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z19[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z20[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z21[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z22[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z23[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z24[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: whitesmoke;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.42);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.06);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: white;\n  --mdc-dialog-with-divider-divider-color: rgba(0, 0, 0, 0.12);\n  --mdc-dialog-subhead-color: rgba(0, 0, 0, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #e0e0e0;\n  --mdc-chip-elevated-disabled-container-color: #e0e0e0;\n  --mdc-chip-label-text-color: #212121;\n  --mdc-chip-disabled-label-text-color: #212121;\n  --mdc-chip-with-icon-icon-color: #212121;\n  --mdc-chip-with-icon-disabled-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #212121;\n  --mdc-chip-with-icon-selected-icon-color: #212121;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #424242;\n  --mdc-switch-disabled-unselected-handle-color: #424242;\n  --mdc-switch-disabled-selected-track-color: #424242;\n  --mdc-switch-disabled-unselected-track-color: #424242;\n  --mdc-switch-unselected-focus-state-layer-color: #424242;\n  --mdc-switch-unselected-pressed-state-layer-color: #424242;\n  --mdc-switch-unselected-hover-state-layer-color: #424242;\n  --mdc-switch-unselected-focus-track-color: #e0e0e0;\n  --mdc-switch-unselected-hover-track-color: #e0e0e0;\n  --mdc-switch-unselected-pressed-track-color: #e0e0e0;\n  --mdc-switch-unselected-track-color: #e0e0e0;\n  --mdc-switch-unselected-focus-handle-color: #212121;\n  --mdc-switch-unselected-hover-handle-color: #212121;\n  --mdc-switch-unselected-pressed-handle-color: #212121;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #616161;\n  --mdc-switch-selected-icon-color: #fff;\n  --mdc-switch-disabled-selected-icon-color: #fff;\n  --mdc-switch-disabled-unselected-icon-color: #fff;\n  --mdc-switch-unselected-icon-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: black;\n  --mdc-slider-label-label-text-color: white;\n  --mdc-slider-disabled-handle-color: #000;\n  --mdc-slider-disabled-active-track-color: #000;\n  --mdc-slider-disabled-inactive-track-color: #000;\n  --mdc-slider-with-tick-marks-disabled-container-color: #000;\n  --mat-mdc-slider-value-indicator-opacity: 0.6;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, 0.54);\n  --mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-disabled-label-text-color: black;\n  --mdc-list-list-item-disabled-leading-icon-color: black;\n  --mdc-list-list-item-disabled-trailing-icon-color: black;\n  --mdc-list-list-item-hover-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-focus-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-state-layer-color: black;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.04;\n  --mdc-list-list-item-focus-state-layer-color: black;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-text-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fff;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-filled-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fff;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-elevation: 0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fff;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-fab-icon-color: rgba(0, 0, 0, 0.38);\n  --mat-mdc-fab-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: #1bfae4;\n  --mdc-snackbar-container-color: #333333;\n  --mdc-snackbar-supporting-text-color: rgba(255, 255, 255, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-total[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-table[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #bdbdbd;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell-content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.24);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: white;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%] {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #757575;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree-node[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-raised-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%] {\n  padding: 0 1.15em;\n  margin: 0 0.65em;\n  min-width: 3em;\n  line-height: 36.4px;\n}\n\n.mat-standard-chip[_ngcontent-%COMP%] {\n  padding: 0.5em 0.85em;\n  min-height: 2.5em;\n}\n\n.material-icons[_ngcontent-%COMP%] {\n  font-size: 24px;\n  font-family: \"Material Icons\", \"Material Icons\";\n}\n.material-icons[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-family: \"Roboto\";\n}\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n[_nghost-%COMP%] {\n  display: block;\n  height: 100%;\n}\n\nmain[_ngcontent-%COMP%] {\n  min-width: 100vw;\n  min-height: 100vh;\n}\n\n.multiline-tooltip[_ngcontent-%COMP%] {\n  white-space: pre-line;\n}\n\n.spacer[_ngcontent-%COMP%] {\n  flex: 1 1 auto;\n}\n\n\n.row[_ngcontent-%COMP%] {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-left: -15px;\n  margin-right: -15px;\n  margin-left: -15px;\n  \n}\n.row[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%] {\n  flex-basis: 0;\n  flex-grow: 1;\n  max-width: 100%;\n  position: relative;\n  width: 100%;\n  min-height: 1px;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-bottom: 1em;\n}\n\n.loading-shade[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 56px;\n  right: 0;\n  background: rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.loading-shade.all[_ngcontent-%COMP%] {\n  bottom: 0;\n}\n\n[_nghost-%COMP%] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  padding: 2em;\n}\n\n.master[_ngcontent-%COMP%] {\n  box-sizing: border-box;\n  padding: 0.5em;\n  width: clamp(300px, 90%, 1100px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  border-radius: 6px;\n  background-color: #3d3d3d;\n}\n.master[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%] {\n  box-sizing: border-box;\n  width: 80%;\n  min-width: 250px;\n  padding: 0.5em 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n.master[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\n  font-size: 1.5em;\n  margin: 0;\n  font-weight: 500;\n  color: #ffffff;\n}\n.master[_ngcontent-%COMP%]   .filter-content[_ngcontent-%COMP%] {\n  box-sizing: border-box;\n  width: 80%;\n  min-width: 250px;\n  padding: 0.5em 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n.master[_ngcontent-%COMP%]   .filter-content[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\n  width: 100%;\n  min-width: 200px;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"]
});

/***/ }),

/***/ 2841:
/*!***********************************************************************!*\
  !*** ./src/app/pages/master-details/master-details-routing.module.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MasterDetailsRoutingModule": () => (/* binding */ MasterDetailsRoutingModule)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ 7067);
/* harmony import */ var _master_details_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./master-details.component */ 808);
/* harmony import */ var _details_item_details_item_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./details-item/details-item.component */ 9212);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2560);





const routes = [{
  path: '',
  component: _master_details_component__WEBPACK_IMPORTED_MODULE_0__.MasterDetailsComponent
}, {
  path: ':id',
  component: _details_item_details_item_component__WEBPACK_IMPORTED_MODULE_1__.DetailsItemComponent
}];
class MasterDetailsRoutingModule {}
MasterDetailsRoutingModule.ɵfac = function MasterDetailsRoutingModule_Factory(t) {
  return new (t || MasterDetailsRoutingModule)();
};
MasterDetailsRoutingModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
  type: MasterDetailsRoutingModule
});
MasterDetailsRoutingModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
  imports: [_angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule.forChild(routes), _angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule]
});
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](MasterDetailsRoutingModule, {
    imports: [_angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule],
    exports: [_angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule]
  });
})();

/***/ }),

/***/ 808:
/*!******************************************************************!*\
  !*** ./src/app/pages/master-details/master-details.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MasterDetailsComponent": () => (/* binding */ MasterDetailsComponent)
/* harmony export */ });
/* harmony import */ var src_app_core_classes_master_table_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/core/classes/master-table.class */ 5535);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 7067);
/* harmony import */ var _services_service_backend_item_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../../services/service-backend-item.service */ 5352);
/* harmony import */ var src_app_services_loading_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/loading.service */ 4471);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/button */ 4522);
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/icon */ 7822);
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/input */ 8562);
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/form-field */ 5074);
/* harmony import */ var _core_shared_components_master_table_master_table_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/shared/components/master-table/master-table.component */ 7729);










class MasterDetailsComponent extends src_app_core_classes_master_table_class__WEBPACK_IMPORTED_MODULE_0__.MasterTable {
  constructor(router, serviceBackendItemService, loadingService) {
    const data = {
      title: 'Master/Details',
      targetFilters: ['Name', 'Description'],
      columns: [{
        name: 'id',
        title: 'ID'
      }, {
        name: 'name',
        title: 'Name'
      }
      // { name: 'description', title: 'Description' },
      ],

      path: '/master-details'
    };
    super(router, serviceBackendItemService, data, loadingService);
    this.serviceBackendItemService = serviceBackendItemService;
  }
}
MasterDetailsComponent.ɵfac = function MasterDetailsComponent_Factory(t) {
  return new (t || MasterDetailsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_5__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_services_service_backend_item_service__WEBPACK_IMPORTED_MODULE_1__.ServiceBackendItemService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_app_services_loading_service__WEBPACK_IMPORTED_MODULE_2__.LoadingService));
};
MasterDetailsComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: MasterDetailsComponent,
  selectors: [["app-master-details"]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵInheritDefinitionFeature"]],
  decls: 18,
  vars: 5,
  consts: [[1, "master", "mat-elevation-z2"], [1, "header-content"], [1, "title"], ["mat-raised-button", "", "color", "accent", 3, "click"], [1, "mat-24"], [1, "filter-content"], ["appearance", "outline"], ["matInput", "", "placeholder", "Filtre aqui", 3, "input"], ["matPrefix", ""], ["functionName", "getByFilter", 3, "columns", "service", "filterChange$", "edit$", "delete$", "changeTable$"]],
  template: function MasterDetailsComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "section", 0)(1, "div", 1)(2, "h2", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](4, "button", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function MasterDetailsComponent_Template_button_click_4_listener() {
        return ctx.add();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "mat-icon", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](6, "add");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](7, " Add ");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](8, "div", 5)(9, "mat-form-field", 6)(10, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](11, "Filtrar");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](12, "input", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("input", function MasterDetailsComponent_Template_input_input_12_listener($event) {
        return ctx.changeFilter($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](13, "mat-icon", 8);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](14, "search");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](15, "mat-hint");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](16);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()()();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](17, "app-master-table", 9);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("edit$", function MasterDetailsComponent_Template_app_master_table_edit__17_listener($event) {
        return ctx.edit($event);
      })("delete$", function MasterDetailsComponent_Template_app_master_table_delete__17_listener($event) {
        return ctx.delete($event);
      })("changeTable$", function MasterDetailsComponent_Template_app_master_table_changeTable__17_listener($event) {
        return ctx.changeTable($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate"](ctx.title);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](13);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"]("Filtre por ", ctx.targetFilters.join(", "), "");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("columns", ctx.columns)("service", ctx.serviceBackendItemService)("filterChange$", ctx.filterChange$);
    }
  },
  dependencies: [_angular_material_button__WEBPACK_IMPORTED_MODULE_6__.MatButton, _angular_material_icon__WEBPACK_IMPORTED_MODULE_7__.MatIcon, _angular_material_input__WEBPACK_IMPORTED_MODULE_8__.MatInput, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__.MatFormField, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__.MatLabel, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__.MatHint, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__.MatPrefix, _core_shared_components_master_table_master_table_component__WEBPACK_IMPORTED_MODULE_3__.MasterTableComponent],
  styles: ["@import url(https://fonts.googleapis.com/icon?family=Material+Icons);@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 900[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 100[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 900&display=swap\u00CF)[_ngcontent-%COMP%];@charset \"UTF-8\";\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\nbody[_ngcontent-%COMP%] {\n  --primary-color: #fa1b31;\n  --primary-lighter-color: #f66d73;\n  --primary-darker-color: #cd0014;\n  --text-primary-color: #ffffff;\n  --text-primary-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-primary-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --accent-color: #1bfae4;\n  --accent-lighter-color: #d9fefa;\n  --accent-darker-color: #00bd95;\n  --text-accent-color: #ffffff;\n  --text-accent-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-accent-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --warn-color: #ff0000;\n  --warn-lighter-color: #ffb3b3;\n  --warn-darker-color: #ff0000;\n  --text-warn-color: #ffffff;\n  --text-warn-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-warn-darker-color: #ffffff;\n}\n\n.mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #686868;\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #686868;\n}\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #686868;\n}\n\n.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-elevation-z0[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n}\n\n.mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #424242;\n}\n\n.mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #595959;\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-mdc-card-title[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-headline6-font-size, 20px);\n  line-height: var(--mdc-typography-headline6-line-height, 32px);\n  font-weight: var(--mdc-typography-headline6-font-weight, 500);\n  letter-spacing: var(--mdc-typography-headline6-letter-spacing, 0.0075em);\n  -webkit-text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n  text-transform: var(--mdc-typography-headline6-text-transform, none);\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n.mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-supporting-text-font: Roboto;\n  --mdc-plain-tooltip-supporting-text-size: 13px;\n  --mdc-plain-tooltip-supporting-text-weight: 500;\n  --mdc-plain-tooltip-supporting-text-tracking: 0.0893em;\n}\n\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n.mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(255, 255, 255, 0.87));\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.08);\n}\n.mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.24);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: #4a4a4a;\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.42);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.06);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #464646;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.08;\n}\n\n.mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.24;\n}\n\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%]:disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n\n.mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 28px;\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -34.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 24px;\n  padding-bottom: 8px;\n}\n\n.mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mdc-text-field__input[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n.mdc-text-field__affix[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--textarea[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  line-height: 1.5rem;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-subscript-wrapper[_ngcontent-%COMP%], .mat-mdc-form-field-bottom-align[_ngcontent-%COMP%]::before {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%], .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: calc(17px * var(--mat-mdc-form-field-floating-label-scale, 0.75));\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-select[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-autocomplete-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: #424242;\n  --mdc-dialog-with-divider-divider-color: rgba(255, 255, 255, 0.12);\n  --mdc-dialog-subhead-color: rgba(255, 255, 255, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-subhead-font: Roboto;\n  --mdc-dialog-subhead-line-height: 32px;\n  --mdc-dialog-subhead-size: 20px;\n  --mdc-dialog-subhead-weight: 500;\n  --mdc-dialog-subhead-tracking: 0.0075em;\n  --mdc-dialog-supporting-text-font: Roboto;\n  --mdc-dialog-supporting-text-line-height: 24px;\n  --mdc-dialog-supporting-text-size: 17px;\n  --mdc-dialog-supporting-text-weight: 500;\n  --mdc-dialog-supporting-text-tracking: 0.0179em;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #595959;\n  --mdc-chip-elevated-disabled-container-color: #595959;\n  --mdc-chip-label-text-color: #fafafa;\n  --mdc-chip-disabled-label-text-color: #fafafa;\n  --mdc-chip-with-icon-icon-color: #fafafa;\n  --mdc-chip-with-icon-disabled-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #fafafa;\n  --mdc-chip-with-icon-selected-icon-color: #fafafa;\n}\n.mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n\n.mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: white;\n}\n\n.mat-mdc-chip[_ngcontent-%COMP%] {\n  height: 32px;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #000;\n  --mdc-switch-disabled-unselected-handle-color: #000;\n  --mdc-switch-disabled-selected-track-color: #f5f5f5;\n  --mdc-switch-disabled-unselected-track-color: #f5f5f5;\n  --mdc-switch-unselected-focus-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-pressed-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-hover-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-focus-track-color: #616161;\n  --mdc-switch-unselected-hover-track-color: #616161;\n  --mdc-switch-unselected-pressed-track-color: #616161;\n  --mdc-switch-unselected-track-color: #616161;\n  --mdc-switch-unselected-focus-handle-color: #fafafa;\n  --mdc-switch-unselected-hover-handle-color: #fafafa;\n  --mdc-switch-unselected-pressed-handle-color: #fafafa;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #9e9e9e;\n  --mdc-switch-selected-icon-color: #212121;\n  --mdc-switch-disabled-selected-icon-color: #212121;\n  --mdc-switch-disabled-unselected-icon-color: #212121;\n  --mdc-switch-unselected-icon-color: #212121;\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-slide-toggle.mat-primary[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #fb979b;\n  --mdc-switch-selected-hover-handle-color: #fb979b;\n  --mdc-switch-selected-pressed-handle-color: #fb979b;\n}\n.mat-mdc-slide-toggle.mat-accent[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #1bfae4;\n  --mdc-switch-selected-hover-handle-color: #1bfae4;\n  --mdc-switch-selected-pressed-handle-color: #1bfae4;\n}\n.mat-mdc-slide-toggle.mat-warn[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: red;\n  --mdc-switch-selected-hover-handle-color: red;\n  --mdc-switch-selected-pressed-handle-color: red;\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-state-layer-size: 48px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%] {\n  padding: calc((40px - 20px) / 2);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__background[_ngcontent-%COMP%]::before {\n  top: calc(-1 * (40px - 20px) / 2);\n  left: calc(-1 * (40px - 20px) / 2);\n  width: 40px;\n  height: 40px;\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - 40px) / 2);\n  right: calc((40px - 40px) / 2);\n  left: calc((40px - 40px) / 2);\n  width: 40px;\n  height: 40px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: white;\n  --mdc-slider-label-label-text-color: black;\n  --mdc-slider-disabled-handle-color: #fff;\n  --mdc-slider-disabled-active-track-color: #fff;\n  --mdc-slider-disabled-inactive-track-color: #fff;\n  --mdc-slider-with-tick-marks-disabled-container-color: #fff;\n  --mat-mdc-slider-value-indicator-opacity: 0.9;\n}\n.mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-label-text-font: Roboto;\n  --mdc-slider-label-label-text-size: 14px;\n  --mdc-slider-label-label-text-line-height: 24px;\n  --mdc-slider-label-label-text-tracking: 0.0067em;\n  --mdc-slider-label-label-text-weight: 500;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-mdc-menu-content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n.mat-mdc-menu-content[_ngcontent-%COMP%], .mat-mdc-menu-content[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: white;\n  --mdc-list-list-item-supporting-text-color: rgba(255, 255, 255, 0.7);\n  --mdc-list-list-item-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-disabled-label-text-color: white;\n  --mdc-list-list-item-disabled-leading-icon-color: white;\n  --mdc-list-list-item-disabled-trailing-icon-color: white;\n  --mdc-list-list-item-hover-label-text-color: white;\n  --mdc-list-list-item-hover-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-focus-label-text-color: white;\n  --mdc-list-list-item-hover-state-layer-color: white;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.08;\n  --mdc-list-list-item-focus-state-layer-color: white;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.24;\n}\n\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-one-line-container-height: 48px;\n  --mdc-list-list-item-two-line-container-height: 64px;\n  --mdc-list-list-item-three-line-container-height: 88px;\n}\n\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line[_ngcontent-%COMP%] {\n  height: 56px;\n}\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-font: Roboto;\n  --mdc-list-list-item-label-text-line-height: 24px;\n  --mdc-list-list-item-label-text-size: 17px;\n  --mdc-list-list-item-label-text-tracking: 0.0179em;\n  --mdc-list-list-item-label-text-weight: 500;\n  --mdc-list-list-item-supporting-text-font: Roboto;\n  --mdc-list-list-item-supporting-text-line-height: 20px;\n  --mdc-list-list-item-supporting-text-size: 15px;\n  --mdc-list-list-item-supporting-text-tracking: 0.0179em;\n  --mdc-list-list-item-supporting-text-weight: 400;\n  --mdc-list-list-item-trailing-supporting-text-font: Roboto;\n  --mdc-list-list-item-trailing-supporting-text-line-height: 14px;\n  --mdc-list-list-item-trailing-supporting-text-size: 13px;\n  --mdc-list-list-item-trailing-supporting-text-tracking: 0.0893em;\n  --mdc-list-list-item-trailing-supporting-text-weight: 500;\n}\n\n.mdc-list-group__subheader[_ngcontent-%COMP%] {\n  font: 400 16px / 28px Roboto;\n  letter-spacing: 0.0094em;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: #424242;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n  border-right: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 40px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 20px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -26.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-paginator-container[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n\n.mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n\n.mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mat-mdc-tab-header[_ngcontent-%COMP%]   .mdc-tab[_ngcontent-%COMP%] {\n  height: 48px;\n}\n\n.mdc-tab[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fff;\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n\n.mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%] {\n  padding: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  margin: calc((var(--mdc-checkbox-touch-target-size, 40px) - 40px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__background[_ngcontent-%COMP%] {\n  top: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  left: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  right: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  left: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  width: var(--mdc-checkbox-touch-target-size, 40px);\n  height: var(--mdc-checkbox-touch-target-size, 40px);\n}\n\n@media all and (-ms-high-contrast: none) {\n  .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__focus-ring[_ngcontent-%COMP%] {\n    display: none;\n  }\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fff;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-text-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #424242;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-filled-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #424242;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-elevation: 0;\n}\n\n.mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fff;\n}\n.mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-button[_ngcontent-%COMP%], .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n\n.mat-mdc-raised-button[_ngcontent-%COMP%], .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-raised-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  height: 36px;\n}\n\n.mdc-button[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n\n.mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-icon-button-disabled-icon-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 48px;\n  max-width: 48px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  margin-right: 4px;\n  margin-left: 4px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 48px;\n   \n  left: 50%;\n  width: 48px;\n  transform: translate(-50%, -50%);\n}\n\n.mat-mdc-fab[_ngcontent-%COMP%], .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #424242;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-fab-icon-color: rgba(255, 255, 255, 0.5);\n  --mat-mdc-fab-color: rgba(255, 255, 255, 0.5);\n}\n\n.mdc-fab--extended[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: rgba(0, 0, 0, 0.87);\n  --mdc-snackbar-container-color: #d9d9d9;\n  --mdc-snackbar-supporting-text-color: rgba(66, 66, 66, 0.87);\n}\n\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mdc-snackbar-supporting-text-font: Roboto;\n  --mdc-snackbar-supporting-text-line-height: 20px;\n  --mdc-snackbar-supporting-text-size: 15px;\n  --mdc-snackbar-supporting-text-weight: 400;\n}\n\n.mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n}\n\n.mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n\n.mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__cell[_ngcontent-%COMP%], .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mdc-data-table__pagination-total[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-table[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  min-height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__header-row[_ngcontent-%COMP%] {\n  height: 56px;\n}\n\n.mdc-data-table__content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n\n.mat-badge[_ngcontent-%COMP%] {\n  position: relative;\n}\n\n.mat-badge.mat-badge[_ngcontent-%COMP%] {\n  overflow: visible;\n}\n\n.mat-badge-hidden[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n\n.ng-animate-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%], .mat-badge-content._mat-animation-noopable[_ngcontent-%COMP%] {\n  transition: none;\n}\n\n.mat-badge-content.mat-badge-active[_ngcontent-%COMP%] {\n  transform: none;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -8px;\n}\n\n.mat-badge-medium[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -11px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -14px;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n\n.mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n\n.mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #6e6e6e;\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, sans-serif;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 9px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 24px;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n  background: #424242;\n}\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: white;\n}\n\n.mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #595959;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #595959;\n}\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #595959;\n}\n\n.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #212121;\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n  background-color: black;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: #424242;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #595959;\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-label-content[_ngcontent-%COMP%] {\n  line-height: 48px;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: white;\n}\n\n.mat-datepicker-toggle[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(255, 255, 255, 0.12);\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%], .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-calendar-body-cell-content[_ngcontent-%COMP%], .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: white;\n  border-color: transparent;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.24);\n}\n\n.mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n\n.mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n\n.mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n\n.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n\n.mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n\n.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n\n@media (hover: hover) {\n  .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: #424242;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n\n.mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  padding: 8px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  margin-right: 0px;\n  margin-left: 0px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 40px;\n   \n  left: 50%;\n  width: 40px;\n  transform: translate(-50%, -50%);\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mat-mdc-button-touch-target[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-calendar[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-body[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-calendar-body-label[_ngcontent-%COMP%], .mat-calendar-period-button[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\n  font-size: 11px;\n  font-weight: 400;\n}\n\n.mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%] {\n  background: #424242;\n  color: white;\n}\n.mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n\n@media (hover: none) {\n  .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: #424242;\n  }\n}\n.mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-expansion-panel-header-description[_ngcontent-%COMP%], .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n}\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  font-family: Roboto;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-expansion-panel-content[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-grid-tile-header[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%] {\n  font-size: 15px;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%] {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2), .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2) {\n  font-size: 13px;\n}\n\n.mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-drawer[_ngcontent-%COMP%] {\n  background-color: #424242;\n  color: white;\n}\n.mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n.mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n\n.mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(189, 189, 189, 0.6);\n}\n\n.mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n.mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.7);\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-stepper-horizontal[_ngcontent-%COMP%], .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%], .mat-vertical-stepper-header[_ngcontent-%COMP%] {\n  padding: 24px 24px;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  top: -16px;\n  bottom: -16px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before {\n  top: 36px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  top: 36px;\n}\n\n.mat-stepper-vertical[_ngcontent-%COMP%], .mat-stepper-horizontal[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-step-label[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-step-sub-label-error[_ngcontent-%COMP%] {\n  font-weight: normal;\n}\n\n.mat-step-label-error[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mat-step-label-selected[_ngcontent-%COMP%] {\n  font-size: 17px;\n  font-weight: 500;\n}\n\n.mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #c6c6c6;\n}\n\n.mat-toolbar[_ngcontent-%COMP%] {\n  background: #212121;\n  color: white;\n}\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n\n.mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n  min-height: 64px;\n}\n\n.mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n    min-height: 56px;\n  }\n  .mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n    height: 56px;\n  }\n}\n.mat-toolbar[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%] {\n  font: 500 20px / 32px Roboto;\n  letter-spacing: 0.0075em;\n  margin: 0;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-tree-node[_ngcontent-%COMP%] {\n  min-height: 48px;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  font-weight: 400;\n  font-size: 15px;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-app-background[_ngcontent-%COMP%], .theme-alternate.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z0[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z1[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z2[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z3[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z4[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z5[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z6[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z7[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z8[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z9[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z10[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z11[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z12[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z13[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z14[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z15[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z16[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z17[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z18[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z19[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z20[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z21[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z22[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z23[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z24[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: whitesmoke;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.42);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.06);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: white;\n  --mdc-dialog-with-divider-divider-color: rgba(0, 0, 0, 0.12);\n  --mdc-dialog-subhead-color: rgba(0, 0, 0, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #e0e0e0;\n  --mdc-chip-elevated-disabled-container-color: #e0e0e0;\n  --mdc-chip-label-text-color: #212121;\n  --mdc-chip-disabled-label-text-color: #212121;\n  --mdc-chip-with-icon-icon-color: #212121;\n  --mdc-chip-with-icon-disabled-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #212121;\n  --mdc-chip-with-icon-selected-icon-color: #212121;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #424242;\n  --mdc-switch-disabled-unselected-handle-color: #424242;\n  --mdc-switch-disabled-selected-track-color: #424242;\n  --mdc-switch-disabled-unselected-track-color: #424242;\n  --mdc-switch-unselected-focus-state-layer-color: #424242;\n  --mdc-switch-unselected-pressed-state-layer-color: #424242;\n  --mdc-switch-unselected-hover-state-layer-color: #424242;\n  --mdc-switch-unselected-focus-track-color: #e0e0e0;\n  --mdc-switch-unselected-hover-track-color: #e0e0e0;\n  --mdc-switch-unselected-pressed-track-color: #e0e0e0;\n  --mdc-switch-unselected-track-color: #e0e0e0;\n  --mdc-switch-unselected-focus-handle-color: #212121;\n  --mdc-switch-unselected-hover-handle-color: #212121;\n  --mdc-switch-unselected-pressed-handle-color: #212121;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #616161;\n  --mdc-switch-selected-icon-color: #fff;\n  --mdc-switch-disabled-selected-icon-color: #fff;\n  --mdc-switch-disabled-unselected-icon-color: #fff;\n  --mdc-switch-unselected-icon-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: black;\n  --mdc-slider-label-label-text-color: white;\n  --mdc-slider-disabled-handle-color: #000;\n  --mdc-slider-disabled-active-track-color: #000;\n  --mdc-slider-disabled-inactive-track-color: #000;\n  --mdc-slider-with-tick-marks-disabled-container-color: #000;\n  --mat-mdc-slider-value-indicator-opacity: 0.6;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, 0.54);\n  --mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-disabled-label-text-color: black;\n  --mdc-list-list-item-disabled-leading-icon-color: black;\n  --mdc-list-list-item-disabled-trailing-icon-color: black;\n  --mdc-list-list-item-hover-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-focus-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-state-layer-color: black;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.04;\n  --mdc-list-list-item-focus-state-layer-color: black;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-text-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fff;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-filled-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fff;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-elevation: 0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fff;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-fab-icon-color: rgba(0, 0, 0, 0.38);\n  --mat-mdc-fab-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: #1bfae4;\n  --mdc-snackbar-container-color: #333333;\n  --mdc-snackbar-supporting-text-color: rgba(255, 255, 255, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-total[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-table[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #bdbdbd;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell-content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.24);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: white;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%] {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #757575;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree-node[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-raised-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%] {\n  padding: 0 1.15em;\n  margin: 0 0.65em;\n  min-width: 3em;\n  line-height: 36.4px;\n}\n\n.mat-standard-chip[_ngcontent-%COMP%] {\n  padding: 0.5em 0.85em;\n  min-height: 2.5em;\n}\n\n.material-icons[_ngcontent-%COMP%] {\n  font-size: 24px;\n  font-family: \"Material Icons\", \"Material Icons\";\n}\n.material-icons[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-family: \"Roboto\";\n}\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n[_nghost-%COMP%] {\n  display: block;\n  height: 100%;\n}\n\nmain[_ngcontent-%COMP%] {\n  min-width: 100vw;\n  min-height: 100vh;\n}\n\n.multiline-tooltip[_ngcontent-%COMP%] {\n  white-space: pre-line;\n}\n\n.spacer[_ngcontent-%COMP%] {\n  flex: 1 1 auto;\n}\n\n\n.row[_ngcontent-%COMP%] {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-left: -15px;\n  margin-right: -15px;\n  margin-left: -15px;\n  \n}\n.row[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%] {\n  flex-basis: 0;\n  flex-grow: 1;\n  max-width: 100%;\n  position: relative;\n  width: 100%;\n  min-height: 1px;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-bottom: 1em;\n}\n\n.loading-shade[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 56px;\n  right: 0;\n  background: rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.loading-shade.all[_ngcontent-%COMP%] {\n  bottom: 0;\n}\n\n[_nghost-%COMP%] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  padding: 2em;\n}\n\n.master[_ngcontent-%COMP%] {\n  box-sizing: border-box;\n  padding: 0.5em;\n  width: clamp(300px, 90%, 1100px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  border-radius: 6px;\n  background-color: #3d3d3d;\n}\n.master[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%] {\n  box-sizing: border-box;\n  width: 80%;\n  min-width: 250px;\n  padding: 0.5em 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n.master[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\n  font-size: 1.5em;\n  margin: 0;\n  font-weight: 500;\n  color: #ffffff;\n}\n.master[_ngcontent-%COMP%]   .filter-content[_ngcontent-%COMP%] {\n  box-sizing: border-box;\n  width: 80%;\n  min-width: 250px;\n  padding: 0.5em 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n.master[_ngcontent-%COMP%]   .filter-content[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\n  width: 100%;\n  min-width: 200px;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"]
});

/***/ }),

/***/ 8839:
/*!***************************************************************!*\
  !*** ./src/app/pages/master-details/master-details.module.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MasterDetailsModule": () => (/* binding */ MasterDetailsModule)
/* harmony export */ });
/* harmony import */ var _core_shared_directives_driven_forms_directives_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/shared/directives/driven-forms-directives.module */ 4836);
/* harmony import */ var _core_shared_components_components_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/shared/components/components.module */ 5970);
/* harmony import */ var _core_material_bundle_material_bundle_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../core/material-bundle/material-bundle.module */ 6118);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _master_details_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./master-details-routing.module */ 2841);
/* harmony import */ var _master_details_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./master-details.component */ 808);
/* harmony import */ var _details_item_details_item_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./details-item/details-item.component */ 9212);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-mask */ 446);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 2560);










class MasterDetailsModule {}
MasterDetailsModule.ɵfac = function MasterDetailsModule_Factory(t) {
  return new (t || MasterDetailsModule)();
};
MasterDetailsModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineNgModule"]({
  type: MasterDetailsModule
});
MasterDetailsModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjector"]({
  providers: [(0,ngx_mask__WEBPACK_IMPORTED_MODULE_7__.provideNgxMask)()],
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.CommonModule, _master_details_routing_module__WEBPACK_IMPORTED_MODULE_3__.MasterDetailsRoutingModule, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.ReactiveFormsModule, _core_shared_directives_driven_forms_directives_module__WEBPACK_IMPORTED_MODULE_0__.DrivenFormsDirectivesModule, _core_material_bundle_material_bundle_module__WEBPACK_IMPORTED_MODULE_2__.MaterialBundleModule, _core_shared_components_components_module__WEBPACK_IMPORTED_MODULE_1__.ComponentsModule]
});
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsetNgModuleScope"](MasterDetailsModule, {
    declarations: [_master_details_component__WEBPACK_IMPORTED_MODULE_4__.MasterDetailsComponent, _details_item_details_item_component__WEBPACK_IMPORTED_MODULE_5__.DetailsItemComponent],
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.CommonModule, _master_details_routing_module__WEBPACK_IMPORTED_MODULE_3__.MasterDetailsRoutingModule, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.ReactiveFormsModule, _core_shared_directives_driven_forms_directives_module__WEBPACK_IMPORTED_MODULE_0__.DrivenFormsDirectivesModule, _core_material_bundle_material_bundle_module__WEBPACK_IMPORTED_MODULE_2__.MaterialBundleModule, _core_shared_components_components_module__WEBPACK_IMPORTED_MODULE_1__.ComponentsModule, ngx_mask__WEBPACK_IMPORTED_MODULE_7__.NgxMaskDirective, ngx_mask__WEBPACK_IMPORTED_MODULE_7__.NgxMaskPipe]
  });
})();

/***/ }),

/***/ 5352:
/*!**********************************************************!*\
  !*** ./src/app/services/service-backend-item.service.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ServiceBackendItemService": () => (/* binding */ ServiceBackendItemService)
/* harmony export */ });
/* harmony import */ var _base_model_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-model.service */ 7594);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 8987);



class ServiceBackendItemService extends _base_model_service__WEBPACK_IMPORTED_MODULE_0__.BaseModelService {
  constructor(http) {
    super('/items', http);
  }
}
ServiceBackendItemService.ɵfac = function ServiceBackendItemService_Factory(t) {
  return new (t || ServiceBackendItemService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient));
};
ServiceBackendItemService.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
  token: ServiceBackendItemService,
  factory: ServiceBackendItemService.ɵfac,
  providedIn: 'root'
});

/***/ }),

/***/ 3957:
/*!**************************************************************!*\
  !*** ./node_modules/date-fns/esm/setDefaultOptions/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ setDefaultOptions)
/* harmony export */ });
/* harmony import */ var _lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/defaultOptions/index.js */ 5380);
/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ 1170);


/**
 * @name setDefaultOptions
 * @category Common Helpers
 * @summary Set default options including locale.
 * @pure false
 *
 * @description
 * Sets the defaults for
 * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`
 * arguments for all functions.
 *
 * @param {Object} newOptions - an object with options.
 * @param {Locale} [newOptions.locale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [newOptions.weekStartsOn] - the index of the first day of the week (0 - Sunday)
 * @param {1|2|3|4|5|6|7} [newOptions.firstWeekContainsDate] - the day of January, which is always in the first week of the year
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Set global locale:
 * import { es } from 'date-fns/locale'
 * setDefaultOptions({ locale: es })
 * const result = format(new Date(2014, 8, 2), 'PPPP')
 * //=> 'martes, 2 de septiembre de 2014'
 *
 * @example
 * // Start of the week for 2 September 2014:
 * const result = startOfWeek(new Date(2014, 8, 2))
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // Start of the week for 2 September 2014,
 * // when we set that week starts on Monday by default:
 * setDefaultOptions({ weekStartsOn: 1 })
 * const result = startOfWeek(new Date(2014, 8, 2))
 * //=> Mon Sep 01 2014 00:00:00
 *
 * @example
 * // Manually set options take priority over default options:
 * setDefaultOptions({ weekStartsOn: 1 })
 * const result = startOfWeek(new Date(2014, 8, 2), { weekStartsOn: 0 })
 * //=> Sun Aug 31 2014 00:00:00
 *
 * @example
 * // Remove the option by setting it to `undefined`:
 * setDefaultOptions({ weekStartsOn: 1 })
 * setDefaultOptions({ weekStartsOn: undefined })
 * const result = startOfWeek(new Date(2014, 8, 2))
 * //=> Sun Aug 31 2014 00:00:00
 */

function setDefaultOptions(newOptions) {
  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(1, arguments);
  var result = {};
  var defaultOptions = (0,_lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__.getDefaultOptions)();
  for (var property in defaultOptions) {
    if (Object.prototype.hasOwnProperty.call(defaultOptions, property)) {
      ;
      result[property] = defaultOptions[property];
    }
  }
  for (var _property in newOptions) {
    if (Object.prototype.hasOwnProperty.call(newOptions, _property)) {
      if (newOptions[_property] === undefined) {
        delete result[_property];
      } else {
        ;
        result[_property] = newOptions[_property];
      }
    }
  }
  (0,_lib_defaultOptions_index_js__WEBPACK_IMPORTED_MODULE_1__.setDefaultOptions)(result);
}

/***/ })

}]);
//# sourceMappingURL=src_app_pages_master-details_master-details_module_ts.js.map
{"version":3,"file":"src_app_pages_master-details_master-details_module_ts.js","mappings":"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","sources":["./src/app/pages/master-details/details-item/details-item.component.ts","./src/app/pages/master-details/details-item/details-item.component.html","./src/app/pages/master-details/master-details-routing.module.ts","./src/app/pages/master-details/master-details.component.ts","./src/app/pages/master-details/master-details.component.html","./src/app/pages/master-details/master-details.module.ts","./src/app/services/service-backend-item.service.ts","./node_modules/date-fns/esm/setDefaultOptions/index.js"],"sourcesContent":["import { UtilsService } from 'src/app/services/utils.service';\nimport { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { setDefaultOptions } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { ControlInput } from 'src/app/core/classes/control.class';\nimport { ActivatedRoute } from '@angular/router';\nimport { LoadingService } from 'src/app/services/loading.service';\n\nsetDefaultOptions({ locale: ptBR });\n\n@Component({\n  selector: 'app-details-item',\n  templateUrl: './details-item.component.html',\n  styleUrls: ['../../../core/shared/scss/master-details.shared.scss'],\n})\nexport class DetailsItemComponent {\n  form: { [id: string]: ControlInput } = {\n    name: new ControlInput({\n      label: 'Nome',\n      config: {\n        name: 'name',\n        hint: 'Nome do usuário',\n        required: true,\n        errors: {\n          required: 'Campo obrigatório',\n        },\n      },\n    }),\n    cpf: new ControlInput({\n      label: 'CPF',\n      config: {\n        name: 'cpf',\n        required: true,\n        maxlength: 14,\n        customValidators: { cpfValidator: true },\n        mask: true,\n        maskConfig: {\n          mask: '000.000.000-00',\n          dropSpecialCharacters: true,\n          validation: true,\n        },\n        errors: {\n          required: 'Campo obrigatório',\n          maxlength: 'Máximo de 100 caracteres',\n          mask: 'CPF imcompleto',\n          invalidCpf: 'CPF inválido',\n        },\n      },\n    }),\n    simpleDate: new ControlInput({\n      label: 'Data simples',\n      config: {\n        name: 'simpleDate',\n        type: 'text',\n        hint: 'DD/MM/AAAA',\n\n        required: true,\n\n        dateConfig: {\n          minDate: new Date(2020, 0, 1),\n        },\n\n        errors: {\n          required: 'Campo obrigatório',\n          minlength: 'Mínimo de 3 caracteres',\n        },\n      },\n    }),\n    url: new ControlInput({\n      label: 'Url',\n      config: {\n        name: 'url',\n\n        required: true,\n        maxlength: 100,\n        minlength: 10,\n        customValidators: {\n          urlValidator: true,\n        },\n        errors: {\n          required: 'Campo obrigatório',\n          minlength: 'Mínimo de 10 caracteres',\n          maxlength: 'Máximo de 100 caracteres',\n          invalidUrl: 'Url inválida',\n        },\n      },\n    }),\n    select: new ControlInput({\n      label: 'Select',\n      selectOptions: [\n        { name: 'Opção 1', value: '1' },\n        { name: 'Opção 2', value: '2' },\n        { name: 'Opção 3', value: '3' },\n      ],\n      config: {\n        name: 'select',\n\n        required: true,\n        errors: {\n          required: 'Campo obrigatório',\n        },\n      },\n    }),\n  };\n\n  @ViewChild('reactiveForm') formRef!: NgForm;\n  constructor(\n    private utilsService: UtilsService,\n    private actRoute: ActivatedRoute,\n    public loadingService: LoadingService\n  ) {\n    actRoute.params.subscribe((params) => {\n      console.log('params', params);\n    });\n  }\n\n  ngOnInit(): void {}\n  ngAfterViewInit() {\n    this.actRoute.params.subscribe((params) => {\n      if (params['id'] !== 'new') {\n        // Load data...\n        this.loadingService.activeLoading();\n        setTimeout(() => {\n          this.formRef.setValue({\n            name: 'Teste',\n            cpf: '123.456.789-00',\n            simpleDate: new Date(),\n            url: 'https://www.google.com',\n            select: '1',\n          });\n          this.loadingService.deactiveLoading();\n        }, 2000);\n      }\n    });\n  }\n\n  getErrorText(control: ControlInput) {\n    return this.utilsService.getErrorText(this.formRef, control);\n  }\n\n  issueValues() {\n    if (!this.formRef || !this.formRef.form) {\n      return '';\n    }\n\n    const controls = this.formRef.form.controls;\n    const keys = Object.keys(controls);\n\n    let ret = '';\n    for (const key of keys) {\n      if (this.getErrorText(this.form[key]))\n        ret += `${this.form[key].label}: ${this.getErrorText(this.form[key])}\\r\\n`;\n    }\n\n    return ret;\n  }\n\n  maskFilled(control: ControlInput) {\n    console.log('maskFilled');\n  }\n\n  dateEvents(name: string, event: any) {\n    console.log('dateEvents', name, event);\n  }\n\n  onSubmit() {\n    console.log('onSubmit', this.formRef);\n  }\n}\n","<section class=\"master mat-elevation-z2\">\n  <div class=\"loading-shade all\" *ngIf=\"loadingService.loading\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <form class=\"form\" #reactiveForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <mat-form-field>\n          <mat-label>{{ form[\"name\"].label }}</mat-label>\n          <input\n            matInput\n            [type]=\"form['name'].config.type\"\n            [name]=\"form['name'].config.name\"\n            [(ngModel)]=\"form['name'].value\"\n            [placeholder]=\"form['name'].config.placeholder\"\n            [disabled]=\"form['name'].config.disabled\"\n            [readonly]=\"form['name'].config.readonly\"\n            [required]=\"form['name'].config.required\"\n            [minlength]=\"form['name'].config.minlength\"\n            [maxlength]=\"form['name'].config.maxlength\"\n            [pattern]=\"form['name'].config.pattern\"\n            [email]=\"form['name'].config.email\"\n            [mask]=\"\n              form['name'].config.mask && form['name'].config.maskConfig.mask\n                ? form['name'].config.maskConfig.mask\n                : null\n            \"\n            [dropSpecialCharacters]=\"\n              form['name'].config.mask &&\n              form['name'].config.maskConfig.dropSpecialCharacters\n                ? form['name'].config.maskConfig.dropSpecialCharacters\n                : true\n            \"\n            [validation]=\"\n              form['name'].config.mask &&\n              form['name'].config.maskConfig.validation\n                ? form['name'].config.maskConfig.validation\n                : false\n            \"\n          />\n          <mat-hint *ngIf=\"form['name'].config.hint\">{{\n            form[\"name\"].config.hint\n          }}</mat-hint>\n          <mat-error *ngIf=\"getErrorText(form['name'])\">\n            {{ getErrorText(form[\"name\"]) }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col\">\n        <mat-form-field>\n          <mat-label>{{ form[\"cpf\"].label }}</mat-label>\n          <input\n            matInput\n            [(ngModel)]=\"form['cpf'].value\"\n            [type]=\"form['cpf'].config.type\"\n            [name]=\"form['cpf'].config.name\"\n            [placeholder]=\"form['cpf'].config.placeholder\"\n            [disabled]=\"form['cpf'].config.disabled\"\n            [readonly]=\"form['cpf'].config.readonly\"\n            [required]=\"form['cpf'].config.required\"\n            [minlength]=\"form['cpf'].config.minlength\"\n            [maxlength]=\"form['cpf'].config.maxlength\"\n            [pattern]=\"form['cpf'].config.pattern\"\n            [email]=\"form['cpf'].config.email\"\n            [v-cpf-validator]=\"\n              !!form['cpf'].config.customValidators['cpfValidator']\n            \"\n            [mask]=\"\n              form['cpf'].config.mask && form['cpf'].config.maskConfig.mask\n                ? form['cpf'].config.maskConfig.mask\n                : null\n            \"\n            [dropSpecialCharacters]=\"\n              form['cpf'].config.mask &&\n              form['cpf'].config.maskConfig.dropSpecialCharacters\n                ? form['cpf'].config.maskConfig.dropSpecialCharacters\n                : true\n            \"\n            [validation]=\"\n              form['cpf'].config.mask &&\n              form['cpf'].config.maskConfig.validation\n                ? form['cpf'].config.maskConfig.validation\n                : false\n            \"\n          />\n          <mat-hint *ngIf=\"form['cpf'].config.hint\">{{\n            form[\"cpf\"].config.hint\n          }}</mat-hint>\n          <mat-error *ngIf=\"getErrorText(form['cpf'])\">\n            {{ getErrorText(form[\"cpf\"]) }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>{{ form[\"simpleDate\"].label }}</mat-label>\n          <input\n            matInput\n            [matDatepicker]=\"simpleDate\"\n            [(ngModel)]=\"form['simpleDate'].value\"\n            [type]=\"form['simpleDate'].config.type\"\n            [name]=\"form['simpleDate'].config.name\"\n            [placeholder]=\"form['simpleDate'].config.placeholder\"\n            [disabled]=\"form['simpleDate'].config.disabled\"\n            [readonly]=\"form['simpleDate'].config.readonly\"\n            [required]=\"form['simpleDate'].config.required\"\n            [minlength]=\"form['simpleDate'].config.minlength\"\n            [maxlength]=\"form['simpleDate'].config.maxlength\"\n            [min]=\"\n              form['simpleDate'].config.dateConfig.minDate\n                ? form['simpleDate'].config.dateConfig.minDate\n                : '1900-01-01'\n            \"\n            (dateChange)=\"dateEvents('change', $event.value)\"\n          />\n          <mat-hint>{{ form[\"simpleDate\"].config.hint }}</mat-hint>\n          <mat-error *ngIf=\"getErrorText(form['simpleDate'])\">\n            {{ getErrorText(form[\"simpleDate\"]) }}\n          </mat-error>\n          <mat-datepicker-toggle\n            matIconSuffix\n            [for]=\"simpleDate\"\n          ></mat-datepicker-toggle>\n          <mat-datepicker #simpleDate></mat-datepicker>\n        </mat-form-field>\n      </div>\n      <div class=\"col\">\n        <mat-form-field>\n          <mat-label>{{ form[\"url\"].label }}</mat-label>\n          <input\n            matInput\n            [type]=\"form['url'].config.type\"\n            [name]=\"form['url'].config.name\"\n            [(ngModel)]=\"form['url'].value\"\n            [placeholder]=\"form['url'].config.placeholder\"\n            [disabled]=\"form['url'].config.disabled\"\n            [readonly]=\"form['url'].config.readonly\"\n            [required]=\"form['url'].config.required\"\n            [minlength]=\"form['url'].config.minlength\"\n            [maxlength]=\"form['url'].config.maxlength\"\n            [pattern]=\"form['url'].config.pattern\"\n            [email]=\"form['url'].config.email\"\n            [v-url-validator]=\"\n              !!form['url'].config.customValidators['urlValidator']\n            \"\n            [mask]=\"\n              form['url'].config.mask && form['url'].config.maskConfig.mask\n                ? form['url'].config.maskConfig.mask\n                : null\n            \"\n            [dropSpecialCharacters]=\"\n              form['url'].config.mask &&\n              form['url'].config.maskConfig.dropSpecialCharacters\n                ? form['url'].config.maskConfig.dropSpecialCharacters\n                : true\n            \"\n            [validation]=\"\n              form['url'].config.mask &&\n              form['url'].config.maskConfig.validation\n                ? form['url'].config.maskConfig.validation\n                : false\n            \"\n          />\n          <mat-hint *ngIf=\"form['url'].config.hint\">{{\n            form[\"url\"].config.hint\n          }}</mat-hint>\n          <mat-error *ngIf=\"getErrorText(form['url'])\">\n            {{ getErrorText(form[\"url\"]) }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>{{ form[\"select\"].label }}</mat-label>\n          <mat-select\n            [(ngModel)]=\"form['select'].value\"\n            [name]=\"form['select'].config.name\"\n            [placeholder]=\"form['select'].config.placeholder\"\n            [disabled]=\"form['select'].config.disabled\"\n            [required]=\"form['select'].config.required\"\n          >\n            <mat-option\n              *ngFor=\"let item of form['select'].selectOptions\"\n              [value]=\"item.value\"\n            >\n              {{ item.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n      <div class=\"col\"></div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\"></div>\n      <div class=\"col submit-col\">\n        <button\n          class=\"submit-btn\"\n          type=\"button\"\n          mat-raised-button\n          color=\"accent\"\n          [disabled]=\"reactiveForm.invalid\"\n          (click)=\"onSubmit()\"\n        >\n          Salvar\n        </button>\n        <button\n          mat-icon-button\n          aria-label=\"Help Form Button\"\n          type=\"button\"\n          class=\"help-btn\"\n          [class.show]=\"reactiveForm.invalid\"\n          [matTooltip]=\"issueValues()\"\n          matTooltipClass=\"multiline-tooltip\"\n        >\n          <mat-icon>help</mat-icon>\n        </button>\n      </div>\n    </div>\n  </form>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MasterDetailsComponent } from './master-details.component';\nimport { DetailsItemComponent } from './details-item/details-item.component';\n\nconst routes: Routes = [\n  { path: '', component: MasterDetailsComponent },\n  { path: ':id', component: DetailsItemComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MasterDetailsRoutingModule {}\n","import { ServiceBackendItemService } from './../../services/service-backend-item.service';\nimport { Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { BehaviorSubject, debounceTime } from 'rxjs';\nimport { DataMasterTable } from 'src/app/core/interfaces/data-master-table.interface';\nimport { MasterTable } from 'src/app/core/classes/master-table.class';\nimport { LoadingService } from 'src/app/services/loading.service';\n\n@Component({\n  selector: 'app-master-details',\n  templateUrl: './master-details.component.html',\n  styleUrls: ['../../core/shared/scss/master-details.shared.scss'],\n})\nexport class MasterDetailsComponent extends MasterTable<ServiceBackendItemService> {\n  constructor(\n    router: Router,\n    public serviceBackendItemService: ServiceBackendItemService,\n    loadingService: LoadingService\n  ) {\n    const data: DataMasterTable = {\n      title: 'Master/Details',\n      targetFilters: ['Name', 'Description'],\n      columns: [\n        { name: 'id', title: 'ID' },\n        { name: 'name', title: 'Name' },\n        // { name: 'description', title: 'Description' },\n      ],\n      path: '/master-details',\n    };\n    super(router, serviceBackendItemService, data, loadingService);\n  }\n\n  // add()\n  // changeFilter(filter: any)\n  // edit(row: any)\n  // delete(row: any)\n  // changeTable(event: any)\n}\n","<section class=\"master mat-elevation-z2\">\n  <div class=\"header-content\">\n    <h2 class=\"title\">{{ title }}</h2>\n    <button mat-raised-button color=\"accent\" (click)=\"add()\">\n      <mat-icon class=\"mat-24\">add</mat-icon>\n      Add\n    </button>\n  </div>\n\n  <div class=\"filter-content\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Filtrar</mat-label>\n      <input\n        matInput\n        placeholder=\"Filtre aqui\"\n        (input)=\"changeFilter($event)\"\n      />\n\n      <mat-icon matPrefix>search</mat-icon>\n      <mat-hint>Filtre por {{ targetFilters.join(\", \") }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <!-- Table -->\n  <app-master-table\n    [columns]=\"columns\"\n    [service]=\"serviceBackendItemService\"\n    functionName=\"getByFilter\"\n    [filterChange$]=\"filterChange$\"\n    (edit$)=\"edit($event)\"\n    (delete$)=\"delete($event)\"\n    (changeTable$)=\"changeTable($event)\"\n  ></app-master-table>\n</section>\n","import { DrivenFormsDirectivesModule } from '../../core/shared/directives/driven-forms-directives.module';\nimport { ComponentsModule } from '../../core/shared/components/components.module';\nimport { MaterialBundleModule } from './../../core/material-bundle/material-bundle.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MasterDetailsRoutingModule } from './master-details-routing.module';\nimport { MasterDetailsComponent } from './master-details.component';\nimport { DetailsItemComponent } from './details-item/details-item.component';\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\n\n@NgModule({\n  declarations: [MasterDetailsComponent, DetailsItemComponent],\n  imports: [\n    CommonModule,\n    MasterDetailsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DrivenFormsDirectivesModule,\n    MaterialBundleModule,\n    ComponentsModule,\n    NgxMaskDirective,\n    NgxMaskPipe,\n  ],\n  providers: [provideNgxMask()],\n})\nexport class MasterDetailsModule {}\n","import { BaseModelService } from './base-model.service';\nimport { map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServiceBackendItemService extends BaseModelService {\n  constructor(http: HttpClient) {\n    super('/items', http);\n  }\n}\n","import { getDefaultOptions, setDefaultOptions as setInternalDefaultOptions } from \"../_lib/defaultOptions/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setDefaultOptions\n * @category Common Helpers\n * @summary Set default options including locale.\n * @pure false\n *\n * @description\n * Sets the defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * @param {Object} newOptions - an object with options.\n * @param {Locale} [newOptions.locale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [newOptions.weekStartsOn] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [newOptions.firstWeekContainsDate] - the day of January, which is always in the first week of the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Set global locale:\n * import { es } from 'date-fns/locale'\n * setDefaultOptions({ locale: es })\n * const result = format(new Date(2014, 8, 2), 'PPPP')\n * //=> 'martes, 2 de septiembre de 2014'\n *\n * @example\n * // Start of the week for 2 September 2014:\n * const result = startOfWeek(new Date(2014, 8, 2))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Start of the week for 2 September 2014,\n * // when we set that week starts on Monday by default:\n * setDefaultOptions({ weekStartsOn: 1 })\n * const result = startOfWeek(new Date(2014, 8, 2))\n * //=> Mon Sep 01 2014 00:00:00\n *\n * @example\n * // Manually set options take priority over default options:\n * setDefaultOptions({ weekStartsOn: 1 })\n * const result = startOfWeek(new Date(2014, 8, 2), { weekStartsOn: 0 })\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Remove the option by setting it to `undefined`:\n * setDefaultOptions({ weekStartsOn: 1 })\n * setDefaultOptions({ weekStartsOn: undefined })\n * const result = startOfWeek(new Date(2014, 8, 2))\n * //=> Sun Aug 31 2014 00:00:00\n */\n\nexport default function setDefaultOptions(newOptions) {\n  requiredArgs(1, arguments);\n  var result = {};\n  var defaultOptions = getDefaultOptions();\n\n  for (var property in defaultOptions) {\n    if (Object.prototype.hasOwnProperty.call(defaultOptions, property)) {\n      ;\n      result[property] = defaultOptions[property];\n    }\n  }\n\n  for (var _property in newOptions) {\n    if (Object.prototype.hasOwnProperty.call(newOptions, _property)) {\n      if (newOptions[_property] === undefined) {\n        delete result[_property];\n      } else {\n        ;\n        result[_property] = newOptions[_property];\n      }\n    }\n  }\n\n  setInternalDefaultOptions(result);\n}"],"names":["setDefaultOptions","ptBR","ControlInput","i0","locale","DetailsItemComponent","constructor","utilsService","actRoute","loadingService","name","label","config","hint","required","errors","cpf","maxlength","customValidators","cpfValidator","mask","maskConfig","dropSpecialCharacters","validation","invalidCpf","simpleDate","type","dateConfig","minDate","Date","minlength","url","urlValidator","invalidUrl","select","selectOptions","value","params","subscribe","console","log","ngOnInit","ngAfterViewInit","activeLoading","setTimeout","formRef","setValue","deactiveLoading","getErrorText","control","issueValues","form","controls","keys","Object","ret","key","maskFilled","dateEvents","event","onSubmit","selectors","viewQuery","ctx","RouterModule","MasterDetailsComponent","routes","path","component","MasterDetailsRoutingModule","forChild","imports","exports","MasterTable","router","serviceBackendItemService","data","title","targetFilters","columns","features","decls","vars","consts","template","DrivenFormsDirectivesModule","ComponentsModule","MaterialBundleModule","FormsModule","ReactiveFormsModule","CommonModule","NgxMaskDirective","NgxMaskPipe","provideNgxMask","MasterDetailsModule","declarations","BaseModelService","ServiceBackendItemService","http","factory","providedIn","getDefaultOptions","setInternalDefaultOptions","requiredArgs","newOptions","arguments","result","defaultOptions","property","prototype","hasOwnProperty","call","_property","undefined"],"sourceRoot":"webpack:///","x_google_ignoreList":[7]}
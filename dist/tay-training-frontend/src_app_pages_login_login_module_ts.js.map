{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":"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","sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/recover-password/recover-password.component.ts","./src/app/pages/login/recover-password/recover-password.component.html","./src/app/pages/login/send-code/send-code.component.ts","./src/app/pages/login/send-code/send-code.component.html","./src/app/pages/login/sign-in/sign-in.component.ts","./src/app/pages/login/sign-in/sign-in.component.html","./src/app/pages/login/sign-up/sign-up.component.ts","./src/app/pages/login/sign-up/sign-up.component.html","./src/app/services/messenger.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [{ path: '', component: LoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","<main>\n  <div class=\"form-modal mat-elevation-z2\">\n    <img src=\"./../../../assets/logo.png\" alt=\"Logo\" class=\"img-logo\" />\n    <div class=\"header\">\n      <!-- <h1>\n        {{\n          atualView === loginType.LOGIN\n            ? \"Entrar\"\n            : atualView === loginType.REGISTER\n            ? \"Cadastre-se\"\n            : atualView === loginType.SEND_CODE\n            ? \"Receber código\"\n            : \"Trocar senha\"\n        }}\n      </h1> -->\n      <p>\n        {{\n          atualView === loginType.LOGIN\n            ? \"Bem vindo de volta!\"\n            : atualView === loginType.REGISTER\n            ? \"Crie sua conta agora\"\n            : atualView === loginType.SEND_CODE\n            ? \"Coloque seu email para receber o código\"\n            : \"Troque sua senha usando o código recebido\"\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"atualView === loginType.LOGIN\">\n      <app-sign-in\n        [form]=\"form\"\n        [showSignIn]=\"showSignIn\"\n        (formChange)=\"formChange($event)\"\n        (onGoToForgotPassword)=\"changeView(loginType.SEND_CODE)\"\n        (onGoToSignUp)=\"changeView(loginType.REGISTER)\"\n        (onSubmit)=\"submitLogin()\"\n      ></app-sign-in>\n    </ng-container>\n    <ng-container *ngIf=\"atualView === loginType.REGISTER\">\n      <app-sign-up\n        [form]=\"form\"\n        (formChange)=\"formChange($event)\"\n        (onGoToSignIn)=\"changeView(loginType.LOGIN)\"\n        (onSubmit)=\"submitLogin()\"\n      ></app-sign-up>\n    </ng-container>\n    <ng-container *ngIf=\"atualView === loginType.SEND_CODE\">\n      <app-send-code\n        [form]=\"form\"\n        (formChange)=\"formChange($event)\"\n        (onGoToSignIn)=\"changeView(loginType.LOGIN)\"\n        (onSubmit)=\"submitLogin()\"\n      ></app-send-code>\n    </ng-container>\n    <ng-container *ngIf=\"atualView === loginType.RESET_PASSWORD\">\n      <app-recover-password\n        [form]=\"form\"\n        (formChange)=\"formChange($event)\"\n        (onGoToSignIn)=\"changeView(loginType.LOGIN)\"\n        (onSubmit)=\"submitLogin()\"\n      ></app-recover-password>\n    </ng-container>\n  </div>\n</main>\n","import { Router } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { MessengerService } from 'src/app/services/messenger.service';\n\nenum LoginType {\n  LOGIN,\n  REGISTER,\n  SEND_CODE,\n  RESET_PASSWORD,\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  loginType = LoginType;\n  atualView = LoginType.LOGIN;\n  showSignIn = false;\n\n  form = {\n    email: '',\n    password: '',\n\n    fullName: '',\n\n    code: '',\n    newPassword: '',\n  };\n\n  constructor(\n    private messangerService: MessengerService,\n    private router: Router\n  ) {}\n\n  formChange(form: any) {\n    this.form = form;\n  }\n\n  changeView(view: LoginType) {\n    this.atualView = view;\n  }\n\n  submitLogin() {\n    console.log(`login submit`);\n\n    switch (this.atualView) {\n      case LoginType.LOGIN:\n        this.submitSignIn();\n        break;\n      case LoginType.REGISTER:\n        this.submitSignUp();\n        break;\n      case LoginType.SEND_CODE:\n        this.submitSignSendCode();\n        break;\n      case LoginType.RESET_PASSWORD:\n        this.submitSignRecoverPassword();\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  private submitSignIn() {\n    console.log(`sign in submit`);\n\n    const data = {\n      email: this.form.email,\n      password: this.form.password,\n    };\n\n    console.log('my data', data);\n\n    // Try Login\n\n    // if (success) {\n    this.router.navigate(['/']);\n    // } else {\n    //   this.messangerService.errorMessage({\n    //     message: 'Email ou senha inválidos',\n    //     action: 'Fechar',\n    //   });\n    // }\n  }\n  private submitSignUp() {\n    console.log(`sign up submit`);\n\n    const data = {\n      email: this.form.email,\n      password: this.form.password,\n      fullName: this.form.fullName,\n    };\n\n    console.log('my data', data);\n\n    // Try Sign Up\n\n    // if (success) {\n    //   this.changeView(LoginType.LOGIN);\n    // } else {\n    //   this.messangerService.errorMessage({\n    //     message: 'Algum dos dados não é válido',\n    //     action: 'Fechar',\n    //   });\n    // }\n  }\n  private submitSignSendCode() {\n    console.log(`send code submit`);\n\n    const data = {\n      email: this.form.email,\n      code: this.form.code,\n    };\n\n    console.log('my data', data);\n\n    // Try Sign Up\n\n    // if (success) {\n    this.changeView(LoginType.RESET_PASSWORD);\n    // } else {\n    //   this.messangerService.errorMessage({\n    //     message: 'Algum dos dados não é válido',\n    //     action: 'Fechar',\n    //   });\n    // }\n  }\n  private submitSignRecoverPassword() {\n    console.log(`recover password submit`);\n\n    const data = {\n      email: this.form.email,\n      code: this.form.code,\n      newPassword: this.form.newPassword,\n    };\n\n    console.log('my data', data);\n\n    // Try Sign Up\n\n    // if (success) {\n    //   this.changeView(LoginType.LOGIN);\n    // } else {\n    //   this.messangerService.errorMessage({\n    //     message: 'Algum dos dados não é válido',\n    //     action: 'Fechar',\n    //   });\n    // }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { SendCodeComponent } from './send-code/send-code.component';\nimport { RecoverPasswordComponent } from './recover-password/recover-password.component';\nimport { MaterialBundleModule } from 'src/app/core/material-bundle/material-bundle.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SendCodeComponent,\n    RecoverPasswordComponent,\n    SignInComponent,\n    SignUpComponent\n  ],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    MaterialBundleModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class LoginModule { }\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-recover-password',\n  templateUrl: './recover-password.component.html',\n  styleUrls: [\n    './../../../core/shared/scss/login-form-style.shared.scss',\n    './recover-password.component.scss',\n  ],\n})\nexport class RecoverPasswordComponent {\n  @Input() form: {\n    email: string;\n    password: string;\n    fullName: string;\n    code: string;\n    newPassword: string;\n  } = {\n    email: '',\n    password: '',\n\n    fullName: '',\n\n    code: '',\n    newPassword: '',\n  };\n  @Output() formChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() onGoToSignIn: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onSubmit: EventEmitter<void> = new EventEmitter<void>();\n\n  passwordToogleVisibility = true;\n\n  constructor() {}\n\n  getControl(ngForm: NgForm, control: string) {\n    return ngForm.form.get(control);\n  }\n\n  getErrorMessage(ngForm: NgForm, control: string) {\n    const controlForm = this.getControl(ngForm, control);\n\n    if (!controlForm) {\n      return '';\n    }\n\n    if (controlForm.hasError('required')) {\n      return 'Campo obrigatório';\n    }\n    if (controlForm.hasError('email')) {\n      return 'Email inválido';\n    }\n    if (controlForm.hasError('minlength')) {\n      return 'Mínimo de 6 caracteres';\n    }\n    if (controlForm.hasError('maxlength')) {\n      return 'Máximo de 20 caracteres';\n    }\n    return '';\n  }\n\n  changeFormValue() {\n    this.formChange.emit(this.form);\n  }\n\n  goToSignIn() {\n    console.log('goToSignUp');\n    this.onGoToSignIn.emit();\n  }\n\n  submit() {\n    console.log(this.form);\n    this.onSubmit.emit();\n  }\n}\n","<form #formModel=\"ngForm\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Código</mat-label>\n    <input\n      matInput\n      placeholder=\"Código recebido\"\n      type=\"text\"\n      name=\"code\"\n      [(ngModel)]=\"form.code\"\n      (ngModelChange)=\"changeFormValue()\"\n      required\n    />\n    <mat-error *ngIf=\"getControl(formModel, 'code')\">{{\n      getErrorMessage(formModel, \"code\")\n    }}</mat-error>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Nova Senha</mat-label>\n    <input\n      matInput\n      [type]=\"passwordToogleVisibility ? 'password' : 'text'\"\n      name=\"newPassword\"\n      autocomplete=\"new-password\"\n      [(ngModel)]=\"form.newPassword\"\n      (ngModelChange)=\"changeFormValue()\"\n      required\n      [minlength]=\"6\"\n      [maxlength]=\"20\"\n    />\n    <button\n      mat-icon-button\n      matSuffix\n      (click)=\"passwordToogleVisibility = !passwordToogleVisibility\"\n      [attr.aria-label]=\"'Hide password'\"\n      [attr.aria-pressed]=\"passwordToogleVisibility\"\n    >\n      <mat-icon>{{\n        passwordToogleVisibility ? \"visibility_off\" : \"visibility\"\n      }}</mat-icon>\n    </button>\n    <mat-error *ngIf=\"getControl(formModel, 'newPassword')\">{{\n      getErrorMessage(formModel, \"newPassword\")\n    }}</mat-error>\n  </mat-form-field>\n\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"!formModel.valid\"\n      (click)=\"submit()\"\n    >\n      Entrar\n    </button>\n  </div>\n\n  <div class=\"alternative-links\">\n    <span>\n      Se lembra da sua senha?\n      <a (click)=\"goToSignIn()\"> Entre agora </a>\n    </span>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-send-code',\n  templateUrl: './send-code.component.html',\n  styleUrls: [\n    './../../../core/shared/scss/login-form-style.shared.scss',\n    './send-code.component.scss',\n  ],\n})\nexport class SendCodeComponent {\n  @Input() form: {\n    email: string;\n    password: string;\n    fullName: string;\n    code: string;\n    newPassword: string;\n  } = {\n    email: '',\n    password: '',\n\n    fullName: '',\n\n    code: '',\n    newPassword: '',\n  };\n  @Output() formChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() onGoToSignIn: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onSubmit: EventEmitter<void> = new EventEmitter<void>();\n\n  passwordToogleVisibility = true;\n\n  getControl(ngForm: NgForm, control: string) {\n    return ngForm.form.get(control);\n  }\n\n  getErrorMessage(ngForm: NgForm, control: string) {\n    const controlForm = this.getControl(ngForm, control);\n\n    if (!controlForm) {\n      return '';\n    }\n\n    if (controlForm.hasError('required')) {\n      return 'Campo obrigatório';\n    }\n    if (controlForm.hasError('email')) {\n      return 'Email inválido';\n    }\n    if (controlForm.hasError('minlength')) {\n      return 'Mínimo de 6 caracteres';\n    }\n    if (controlForm.hasError('maxlength')) {\n      return 'Máximo de 20 caracteres';\n    }\n    return '';\n  }\n\n  changeFormValue() {\n    this.formChange.emit(this.form);\n  }\n\n  goToSignIn() {\n    console.log('goToSignUp');\n    this.onGoToSignIn.emit();\n  }\n\n  submit() {\n    console.log(this.form);\n    this.onSubmit.emit();\n  }\n}\n","<form #formModel=\"ngForm\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Email</mat-label>\n    <input\n      matInput\n      placeholder=\"pat@example.com\"\n      type=\"email\"\n      name=\"email\"\n      autocomplete=\"email\"\n      [(ngModel)]=\"form.email\"\n      (ngModelChange)=\"changeFormValue()\"\n      email\n      required\n    />\n    <mat-error *ngIf=\"getControl(formModel, 'email')\">{{\n      getErrorMessage(formModel, \"email\")\n    }}</mat-error>\n  </mat-form-field>\n\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"!formModel.valid\"\n      (click)=\"submit()\"\n    >\n      Entrar\n    </button>\n  </div>\n\n  <div class=\"alternative-links\">\n    <span>\n      Se lembra da sua senha?\n      <a (click)=\"goToSignIn()\"> Entre agora </a>\n    </span>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: [\n    './../../../core/shared/scss/login-form-style.shared.scss',\n    './sign-in.component.scss',\n  ],\n})\nexport class SignInComponent {\n  @Input() form: {\n    email: string;\n    password: string;\n    fullName: string;\n    code: string;\n    newPassword: string;\n  } = {\n    email: '',\n    password: '',\n    fullName: '',\n    code: '',\n    newPassword: '',\n  };\n  @Input() showSignIn = true;\n\n  @Output() formChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() onGoToSignUp: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onGoToForgotPassword: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onSubmit: EventEmitter<void> = new EventEmitter<void>();\n\n  passwordToogleVisibility = true;\n  constructor() {}\n\n  getControl(ngForm: NgForm, control: string) {\n    return ngForm.form.get(control);\n  }\n\n  resetForm() {\n    this.form = {\n      email: '',\n      password: '',\n      fullName: '',\n      code: '',\n      newPassword: '',\n    };\n  }\n\n  getErrorMessage(ngForm: NgForm, control: string) {\n    const controlForm = this.getControl(ngForm, control);\n\n    if (!controlForm) {\n      return '';\n    }\n\n    if (controlForm.hasError('required')) {\n      return 'Campo obrigatório';\n    }\n    if (controlForm.hasError('email')) {\n      return 'Email inválido';\n    }\n    if (controlForm.hasError('minlength')) {\n      return 'Mínimo de 6 caracteres';\n    }\n    if (controlForm.hasError('maxlength')) {\n      return 'Máximo de 20 caracteres';\n    }\n    return '';\n  }\n\n  changeFormValue() {\n    this.formChange.emit(this.form);\n  }\n\n  goToSignUp() {\n    console.log('goToSignUp');\n    this.resetForm();\n    this.changeFormValue();\n    this.onGoToSignUp.emit();\n  }\n  goToForgotPassword() {\n    console.log('goToForgotPassword');\n    this.onGoToForgotPassword.emit();\n  }\n\n  submit() {\n    console.log(this.form);\n    this.onSubmit.emit();\n  }\n}\n","<form #formModel=\"ngForm\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Email</mat-label>\n    <input\n      matInput\n      placeholder=\"pat@example.com\"\n      type=\"email\"\n      name=\"email\"\n      autocomplete=\"email\"\n      [(ngModel)]=\"form.email\"\n      (ngModelChange)=\"changeFormValue()\"\n      email\n      required\n    />\n    <mat-error *ngIf=\"getControl(formModel, 'email')\">{{\n      getErrorMessage(formModel, \"email\")\n    }}</mat-error>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Senha</mat-label>\n    <input\n      matInput\n      [type]=\"passwordToogleVisibility ? 'password' : 'text'\"\n      name=\"password\"\n      autocomplete=\"current-password\"\n      [(ngModel)]=\"form.password\"\n      (ngModelChange)=\"changeFormValue()\"\n      required\n    />\n    <button\n      mat-icon-button\n      matSuffix\n      (click)=\"passwordToogleVisibility = !passwordToogleVisibility\"\n      [attr.aria-label]=\"'Hide password'\"\n      [attr.aria-pressed]=\"passwordToogleVisibility\"\n    >\n      <mat-icon>{{\n        passwordToogleVisibility ? \"visibility_off\" : \"visibility\"\n      }}</mat-icon>\n    </button>\n    <mat-error *ngIf=\"getControl(formModel, 'email')\">{{\n      getErrorMessage(formModel, \"password\")\n    }}</mat-error>\n  </mat-form-field>\n\n  <div class=\"alternative-links\">\n    <a (click)=\"goToForgotPassword()\">Esqueceu a senha?</a>\n  </div>\n\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"!formModel.valid\"\n      (click)=\"submit()\"\n    >\n      Entrar\n    </button>\n  </div>\n\n  <div class=\"alternative-links\" *ngIf=\"showSignIn\">\n    <span>\n      Não tem uma conta?\n      <a (click)=\"goToSignUp()\"> Cadastre-se </a>\n    </span>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: [\n    './../../../core/shared/scss/login-form-style.shared.scss',\n    './sign-up.component.scss',\n  ],\n})\nexport class SignUpComponent {\n  @Input() form: {\n    email: string;\n    password: string;\n    fullName: string;\n    code: string;\n    newPassword: string;\n  } = {\n    email: '',\n    password: '',\n\n    fullName: '',\n\n    code: '',\n    newPassword: '',\n  };\n  @Output() formChange: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() onGoToSignIn: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onSubmit: EventEmitter<void> = new EventEmitter<void>();\n\n  passwordToogleVisibility = true;\n\n  constructor() {}\n\n  getControl(ngForm: NgForm, control: string) {\n    return ngForm.form.get(control);\n  }\n\n  resetForm() {\n    this.form = {\n      email: '',\n      password: '',\n      fullName: '',\n      code: '',\n      newPassword: '',\n    };\n  }\n\n  getErrorMessage(ngForm: NgForm, control: string) {\n    const controlForm = this.getControl(ngForm, control);\n\n    if (!controlForm) {\n      return '';\n    }\n\n    if (controlForm.hasError('required')) {\n      return 'Campo obrigatório';\n    }\n    if (controlForm.hasError('email')) {\n      return 'Email inválido';\n    }\n    if (controlForm.hasError('minlength')) {\n      return 'Mínimo de 6 caracteres';\n    }\n    if (controlForm.hasError('maxlength')) {\n      return 'Máximo de 20 caracteres';\n    }\n    return '';\n  }\n\n  changeFormValue() {\n    this.formChange.emit(this.form);\n  }\n\n  goToSignIn() {\n    console.log('goToSignUp');\n    this.resetForm();\n    this.changeFormValue();\n    this.onGoToSignIn.emit();\n  }\n\n  submit() {\n    console.log(this.form);\n    this.onSubmit.emit();\n  }\n}\n","<form #formModel=\"ngForm\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Email</mat-label>\n    <input\n      matInput\n      placeholder=\"pat@example.com\"\n      type=\"email\"\n      name=\"email\"\n      [(ngModel)]=\"form.email\"\n      (ngModelChange)=\"changeFormValue()\"\n      email\n      required\n    />\n    <mat-error *ngIf=\"getControl(formModel, 'email')\">{{\n      getErrorMessage(formModel, \"email\")\n    }}</mat-error>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Nome completo</mat-label>\n    <input\n      matInput\n      placeholder=\"Seu nome\"\n      type=\"text\"\n      name=\"fullName\"\n      [(ngModel)]=\"form.fullName\"\n      (ngModelChange)=\"changeFormValue()\"\n      required\n    />\n    <mat-error *ngIf=\"getControl(formModel, 'fullName')\">{{\n      getErrorMessage(formModel, \"fullName\")\n    }}</mat-error>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Senha</mat-label>\n    <input\n      matInput\n      [type]=\"passwordToogleVisibility ? 'password' : 'text'\"\n      name=\"password\"\n      [(ngModel)]=\"form.password\"\n      (ngModelChange)=\"changeFormValue()\"\n      required\n    />\n    <button\n      mat-icon-button\n      matSuffix\n      (click)=\"passwordToogleVisibility = !passwordToogleVisibility\"\n      [attr.aria-label]=\"'Hide password'\"\n      [attr.aria-pressed]=\"passwordToogleVisibility\"\n    >\n      <mat-icon>{{\n        passwordToogleVisibility ? \"visibility_off\" : \"visibility\"\n      }}</mat-icon>\n    </button>\n    <mat-error *ngIf=\"getControl(formModel, 'email')\">{{\n      getErrorMessage(formModel, \"password\")\n    }}</mat-error>\n  </mat-form-field>\n\n  <div class=\"form-actions\">\n    <button\n      mat-raised-button\n      color=\"primary\"\n      [disabled]=\"!formModel.valid\"\n      (click)=\"submit()\"\n    >\n      Entrar\n    </button>\n  </div>\n\n  <div class=\"alternative-links\">\n    <span>\n      Já possui uma conta?\n      <a (click)=\"goToSignIn()\"> Entre agora </a>\n    </span>\n  </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\ninterface snackBarParams {\n  message: string;\n  action: string;\n\n  config?: MatSnackBarConfig;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessengerService {\n  constructor(private snackBar: MatSnackBar) {}\n\n  private showMessage(params: snackBarParams, config: MatSnackBarConfig) {\n    this.snackBar.open(params.message, params.action, config);\n  }\n\n  successMessage(params: snackBarParams) {\n    const config = {\n      duration: 3000,\n      panelClass: ['success-snackbar'],\n      ...params.config,\n    };\n\n    this.showMessage(params, config);\n  }\n\n  errorMessage(params: snackBarParams) {\n    const config = {\n      duration: 3000,\n      panelClass: ['error-snackbar'],\n      ...params.config,\n    };\n\n    this.showMessage(params, config);\n  }\n\n  warningMessage(params: snackBarParams) {\n    const config = {\n      duration: 3000,\n      panelClass: ['warning-snackbar'],\n      ...params.config,\n    };\n\n    this.showMessage(params, config);\n  }\n\n  infoMessage(params: snackBarParams) {\n    const config = {\n      duration: 3000,\n      panelClass: ['info-snackbar'],\n      ...params.config,\n    };\n\n    this.showMessage(params, config);\n  }\n\n  customMessage(params: snackBarParams, config: MatSnackBarConfig) {\n    this.showMessage(params, config);\n  }\n}\n"],"names":["RouterModule","LoginComponent","routes","path","component","LoginRoutingModule","forChild","imports","exports","i0","LoginType","constructor","messangerService","router","LOGIN","email","password","fullName","code","newPassword","formChange","form","changeView","view","atualView","submitLogin","console","log","submitSignIn","REGISTER","submitSignUp","SEND_CODE","submitSignSendCode","RESET_PASSWORD","submitSignRecoverPassword","data","navigate","selectors","decls","vars","consts","template","CommonModule","SignInComponent","SignUpComponent","SendCodeComponent","RecoverPasswordComponent","MaterialBundleModule","FormsModule","ReactiveFormsModule","LoginModule","declarations","EventEmitter","getControl","ngForm","control","get","getErrorMessage","controlForm","hasError","changeFormValue","emit","goToSignIn","onGoToSignIn","submit","onSubmit","inputs","outputs","ctx","resetForm","goToSignUp","onGoToSignUp","goToForgotPassword","onGoToForgotPassword","showSignIn","MessengerService","snackBar","showMessage","params","config","open","message","action","successMessage","duration","panelClass","errorMessage","warningMessage","infoMessage","customMessage","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
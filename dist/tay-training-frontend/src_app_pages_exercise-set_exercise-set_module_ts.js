"use strict";
(self["webpackChunktay_training_frontend"] = self["webpackChunktay_training_frontend"] || []).push([["src_app_pages_exercise-set_exercise-set_module_ts"],{

/***/ 3400:
/*!*******************************************************************************************!*\
  !*** ./src/app/pages/exercise-set/exercise-set-details/exercise-set-details.component.ts ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExerciseSetDetailsComponent": () => (/* binding */ ExerciseSetDetailsComponent)
/* harmony export */ });
/* harmony import */ var _Users_caio1_Trabalho_Empresa_tay_training_tay_training_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/animations */ 4851);
/* harmony import */ var src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/core/classes/control.class */ 5208);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var src_app_services_utils_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/utils.service */ 8270);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ 7067);
/* harmony import */ var src_app_services_loading_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/services/loading.service */ 4471);
/* harmony import */ var src_app_services_exercises_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/services/exercises.service */ 8718);
/* harmony import */ var src_app_services_methods_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/services/methods.service */ 5812);
/* harmony import */ var src_app_services_exercise_set_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/services/exercise-set.service */ 5251);
/* harmony import */ var src_app_services_exercise_method_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/exercise-method.service */ 3613);
/* harmony import */ var src_app_services_exercise_configuration_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/services/exercise-configuration.service */ 3764);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/core */ 9121);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/button */ 4522);
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/icon */ 7822);
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material/input */ 8562);
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/material/form-field */ 5074);
/* harmony import */ var _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/material/progress-spinner */ 1708);
/* harmony import */ var _angular_material_radio__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/material/radio */ 2922);
/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/material/select */ 7371);
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/material/table */ 5288);
/* harmony import */ var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/material/tooltip */ 6896);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ngx-mask */ 446);

























const _c0 = ["reactiveForm"];
const _c1 = ["tableExercisies"];
function ExerciseSetDetailsComponent_div_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "div", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](1, "mat-spinner");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
}
function ExerciseSetDetailsComponent_mat_hint_10_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r2.form["name"].config.hint);
  }
}
function ExerciseSetDetailsComponent_mat_error_11_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r3.getErrorText(ctx_r3.form["name"]), " ");
  }
}
function ExerciseSetDetailsComponent_mat_option_17_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-option", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r22 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("value", item_r22.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", item_r22.name, " ");
  }
}
function ExerciseSetDetailsComponent_mat_hint_18_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r5.form["url"].config.hint);
  }
}
function ExerciseSetDetailsComponent_mat_error_19_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r6.getErrorText(ctx_r6.form["setCategories"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_24_th_6_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "th", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1, "Tipo");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
}
function ExerciseSetDetailsComponent_ng_container_24_td_7_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "td", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const element_r34 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](element_r34.type);
  }
}
function ExerciseSetDetailsComponent_ng_container_24_th_9_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "th", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1, "Quantidade de exer.");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
}
function ExerciseSetDetailsComponent_ng_container_24_td_10_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "td", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const element_r35 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", element_r35.exerciseConfigurations.length, " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_24_th_12_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "th", 34);
  }
}
function ExerciseSetDetailsComponent_ng_container_24_td_13_Template(rf, ctx) {
  if (rf & 1) {
    const _r39 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "td", 36)(1, "button", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("click", function ExerciseSetDetailsComponent_ng_container_24_td_13_Template_button_click_1_listener($event) {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r39);
      const i_r37 = restoredCtx.dataIndex;
      const ctx_r38 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r38.editExercise($event, i_r37));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](2, "mat-icon");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](3, "edit");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](4, "button", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("click", function ExerciseSetDetailsComponent_ng_container_24_td_13_Template_button_click_4_listener($event) {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r39);
      const i_r37 = restoredCtx.dataIndex;
      const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r40.removeExercise($event, i_r37));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](5, "mat-icon");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](6, "delete");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()();
  }
}
function ExerciseSetDetailsComponent_ng_container_24_td_15_ng_container_2_div_6_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "div", 4)(1, "div", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](3, "div", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
  }
  if (rf & 2) {
    const exerciseConfiguration_r43 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]().$implicit;
    const ctx_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" Exercicio: ", ctx_r45.getExercise(exerciseConfiguration_r43.exerciseId), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" M\u00E9todo: ", ctx_r45.getMethod(exerciseConfiguration_r43.methodId), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_24_td_15_ng_container_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](1, "div", 40)(2, "div", 4)(3, "div", 41)(4, "h4");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](6, ExerciseSetDetailsComponent_ng_container_24_td_15_ng_container_2_div_6_Template, 5, 2, "div", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](7, "div", 4)(8, "div", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](10, "div", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](11);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](12, "div", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](13);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const exerciseConfiguration_r43 = ctx.$implicit;
    const i_r44 = ctx.index;
    const ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"]("Exercicio ", i_r44 + 1, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r42.allExercises.length > 0 && ctx_r42.allMethods.length > 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" S\u00E9ries: ", exerciseConfiguration_r43.series, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" Repeti\u00E7\u00F5es: ", exerciseConfiguration_r43.reps, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" Tempo de descanso: ", exerciseConfiguration_r43.rest, " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_24_td_15_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "td", 35)(1, "div", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](2, ExerciseSetDetailsComponent_ng_container_24_td_15_ng_container_2_Template, 14, 5, "ng-container", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
  }
  if (rf & 2) {
    const element_r41 = ctx.$implicit;
    const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵattribute"]("colspan", ctx_r30.columnsDisplay.length);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵclassProp"]("exepanded-details", element_r41 == ctx_r30.expandedExercise);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("@detailExpand", element_r41 == ctx_r30.expandedExercise ? "expanded" : "collapsed");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngForOf", element_r41.exerciseConfigurations);
  }
}
function ExerciseSetDetailsComponent_ng_container_24_tr_16_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "tr", 48);
  }
}
function ExerciseSetDetailsComponent_ng_container_24_tr_17_Template(rf, ctx) {
  if (rf & 1) {
    const _r49 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "tr", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("click", function ExerciseSetDetailsComponent_ng_container_24_tr_17_Template_tr_click_0_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r49);
      const element_r47 = restoredCtx.$implicit;
      const ctx_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r48.expandedExercise = ctx_r48.expandedExercise === element_r47 ? null : element_r47);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const element_r47 = ctx.$implicit;
    const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵclassProp"]("example-expanded-row", ctx_r32.expandedExercise === element_r47);
  }
}
function ExerciseSetDetailsComponent_ng_container_24_tr_18_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "tr", 50);
  }
}
const _c2 = function () {
  return ["expandedDetail"];
};
function ExerciseSetDetailsComponent_ng_container_24_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](1, "h3");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](2, "Treinos Salvos");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](3, "table", 22, 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerStart"](5, 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](6, ExerciseSetDetailsComponent_ng_container_24_th_6_Template, 2, 0, "th", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](7, ExerciseSetDetailsComponent_ng_container_24_td_7_Template, 2, 1, "td", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerStart"](8, 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](9, ExerciseSetDetailsComponent_ng_container_24_th_9_Template, 2, 0, "th", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](10, ExerciseSetDetailsComponent_ng_container_24_td_10_Template, 2, 1, "td", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerStart"](11, 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](12, ExerciseSetDetailsComponent_ng_container_24_th_12_Template, 1, 0, "th", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](13, ExerciseSetDetailsComponent_ng_container_24_td_13_Template, 7, 0, "td", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerStart"](14, 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](15, ExerciseSetDetailsComponent_ng_container_24_td_15_Template, 3, 5, "td", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](16, ExerciseSetDetailsComponent_ng_container_24_tr_16_Template, 1, 0, "tr", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](17, ExerciseSetDetailsComponent_ng_container_24_tr_17_Template, 1, 2, "tr", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](18, ExerciseSetDetailsComponent_ng_container_24_tr_18_Template, 1, 0, "tr", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("dataSource", ctx_r7.exercicies);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](13);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("matHeaderRowDef", ctx_r7.columnsDisplay);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("matRowDefColumns", ctx_r7.columnsDisplay);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("matRowDefColumns", _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵpureFunction0"](4, _c2));
  }
}
function ExerciseSetDetailsComponent_mat_radio_button_32_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-radio-button", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r51 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("value", item_r51.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", item_r51.name, " ");
  }
}
function ExerciseSetDetailsComponent_h4_34_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "h4");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1, " Configura\u00E7\u00F5es do Exerc\u00EDcio 1 ");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
}
function ExerciseSetDetailsComponent_mat_option_41_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-option", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r52 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("value", item_r52.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", item_r52.name, " ");
  }
}
function ExerciseSetDetailsComponent_mat_hint_42_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r11.oneSetExercise["exercise"].config.hint);
  }
}
function ExerciseSetDetailsComponent_mat_error_43_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r12.getErrorText(ctx_r12.oneSetExercise["exercise"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_45_mat_option_5_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-option", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r56 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("value", item_r56.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", item_r56.name, " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_45_mat_hint_6_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r54 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r54.oneSetExercise["method"].config.hint);
  }
}
function ExerciseSetDetailsComponent_ng_container_45_mat_error_7_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r55.getErrorText(ctx_r55.oneSetExercise["method"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_45_Template(rf, ctx) {
  if (rf & 1) {
    const _r58 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](1, "mat-form-field", 8)(2, "mat-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](4, "mat-select", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_ng_container_45_Template_mat_select_ngModelChange_4_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r58);
      const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r57.oneSetExercise["method"].value = $event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](5, ExerciseSetDetailsComponent_ng_container_45_mat_option_5_Template, 2, 2, "mat-option", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](6, ExerciseSetDetailsComponent_ng_container_45_mat_hint_6_Template, 2, 1, "mat-hint", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](7, ExerciseSetDetailsComponent_ng_container_45_mat_error_7_Template, 2, 1, "mat-error", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r13.oneSetExercise["method"].label);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngModel", ctx_r13.oneSetExercise["method"].value)("name", ctx_r13.oneSetExercise["method"].config.name)("placeholder", ctx_r13.oneSetExercise["method"].config.placeholder)("disabled", ctx_r13.oneSetExercise["method"].config.disabled)("required", ctx_r13.oneSetExercise["method"].config.required);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngForOf", ctx_r13.oneSetExercise["method"].selectOptions);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r13.oneSetExercise["method"].config.hint);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r13.getErrorText(ctx_r13.oneSetExercise["method"]));
  }
}
function ExerciseSetDetailsComponent_mat_hint_52_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r14.oneSetExercise["series"].config.hint);
  }
}
function ExerciseSetDetailsComponent_mat_error_53_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r15.getErrorText(ctx_r15.oneSetExercise["series"]), " ");
  }
}
function ExerciseSetDetailsComponent_mat_hint_59_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r16.oneSetExercise["sleepTime"].config.hint);
  }
}
function ExerciseSetDetailsComponent_mat_error_60_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r17.getErrorText(ctx_r17.oneSetExercise["sleepTime"]), " ");
  }
}
function ExerciseSetDetailsComponent_mat_hint_67_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r18.oneSetExercise["repetitions"].config.hint);
  }
}
function ExerciseSetDetailsComponent_mat_error_68_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r19.getErrorText(ctx_r19.oneSetExercise["repetitions"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_70_mat_option_9_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-option", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r69 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("value", item_r69.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", item_r69.name, " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_70_mat_hint_10_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r60.biSetExercise["exercise"].config.hint);
  }
}
function ExerciseSetDetailsComponent_ng_container_70_mat_error_11_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r61.getErrorText(ctx_r61.biSetExercise["exercise"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_70_ng_container_13_mat_option_5_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-option", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r73 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("value", item_r73.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", item_r73.name, " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_70_ng_container_13_mat_hint_6_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r71 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r71.biSetExercise["method"].config.hint);
  }
}
function ExerciseSetDetailsComponent_ng_container_70_ng_container_13_mat_error_7_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r72 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r72.getErrorText(ctx_r72.biSetExercise["method"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_70_ng_container_13_Template(rf, ctx) {
  if (rf & 1) {
    const _r75 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](1, "mat-form-field", 8)(2, "mat-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](4, "mat-select", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_ng_container_70_ng_container_13_Template_mat_select_ngModelChange_4_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r75);
      const ctx_r74 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r74.biSetExercise["method"].value = $event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](5, ExerciseSetDetailsComponent_ng_container_70_ng_container_13_mat_option_5_Template, 2, 2, "mat-option", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](6, ExerciseSetDetailsComponent_ng_container_70_ng_container_13_mat_hint_6_Template, 2, 1, "mat-hint", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](7, ExerciseSetDetailsComponent_ng_container_70_ng_container_13_mat_error_7_Template, 2, 1, "mat-error", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r62.biSetExercise["method"].label);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngModel", ctx_r62.biSetExercise["method"].value)("name", ctx_r62.biSetExercise["method"].config.name)("placeholder", ctx_r62.biSetExercise["method"].config.placeholder)("disabled", ctx_r62.biSetExercise["method"].config.disabled)("required", ctx_r62.biSetExercise["method"].config.required);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngForOf", ctx_r62.biSetExercise["method"].selectOptions);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r62.biSetExercise["method"].config.hint);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r62.getErrorText(ctx_r62.biSetExercise["method"]));
  }
}
function ExerciseSetDetailsComponent_ng_container_70_mat_hint_20_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r63.biSetExercise["series"].config.hint);
  }
}
function ExerciseSetDetailsComponent_ng_container_70_mat_error_21_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r64 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r64.getErrorText(ctx_r64.biSetExercise["series"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_70_mat_hint_27_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r65 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r65.biSetExercise["sleepTime"].config.hint);
  }
}
function ExerciseSetDetailsComponent_ng_container_70_mat_error_28_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r66 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r66.getErrorText(ctx_r66.biSetExercise["sleepTime"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_70_mat_hint_35_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r67 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r67.biSetExercise["repetitions"].config.hint);
  }
}
function ExerciseSetDetailsComponent_ng_container_70_mat_error_36_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r68 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r68.getErrorText(ctx_r68.biSetExercise["repetitions"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_70_Template(rf, ctx) {
  if (rf & 1) {
    const _r77 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](1, "h4");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](2, "Configura\u00E7\u00F5es do Exerc\u00EDcio 2");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](3, "div", 4)(4, "div", 5)(5, "mat-form-field", 8)(6, "mat-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](8, "mat-select", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_ng_container_70_Template_mat_select_ngModelChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r77);
      const ctx_r76 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r76.biSetExercise["exercise"].value = $event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](9, ExerciseSetDetailsComponent_ng_container_70_mat_option_9_Template, 2, 2, "mat-option", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](10, ExerciseSetDetailsComponent_ng_container_70_mat_hint_10_Template, 2, 1, "mat-hint", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](11, ExerciseSetDetailsComponent_ng_container_70_mat_error_11_Template, 2, 1, "mat-error", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](12, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](13, ExerciseSetDetailsComponent_ng_container_70_ng_container_13_Template, 8, 9, "ng-container", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](14, "div", 4)(15, "div", 5)(16, "mat-form-field")(17, "mat-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](18);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](19, "input", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_ng_container_70_Template_input_ngModelChange_19_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r77);
      const ctx_r78 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r78.biSetExercise["series"].value = $event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](20, ExerciseSetDetailsComponent_ng_container_70_mat_hint_20_Template, 2, 1, "mat-hint", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](21, ExerciseSetDetailsComponent_ng_container_70_mat_error_21_Template, 2, 1, "mat-error", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](22, "div", 5)(23, "mat-form-field")(24, "mat-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](25);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](26, "input", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_ng_container_70_Template_input_ngModelChange_26_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r77);
      const ctx_r79 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r79.biSetExercise["sleepTime"].value = $event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](27, ExerciseSetDetailsComponent_ng_container_70_mat_hint_27_Template, 2, 1, "mat-hint", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](28, ExerciseSetDetailsComponent_ng_container_70_mat_error_28_Template, 2, 1, "mat-error", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](29, "div", 4)(30, "div", 5)(31, "mat-form-field")(32, "mat-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](33);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](34, "input", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_ng_container_70_Template_input_ngModelChange_34_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r77);
      const ctx_r80 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r80.biSetExercise["repetitions"].value = $event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](35, ExerciseSetDetailsComponent_ng_container_70_mat_hint_35_Template, 2, 1, "mat-hint", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](36, ExerciseSetDetailsComponent_ng_container_70_mat_error_36_Template, 2, 1, "mat-error", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](37, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r20.biSetExercise["exercise"].label);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngModel", ctx_r20.biSetExercise["exercise"].value)("name", ctx_r20.biSetExercise["exercise"].config.name)("placeholder", ctx_r20.biSetExercise["exercise"].config.placeholder)("disabled", ctx_r20.biSetExercise["exercise"].config.disabled)("required", ctx_r20.biSetExercise["exercise"].config.required);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngForOf", ctx_r20.biSetExercise["exercise"].selectOptions);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r20.biSetExercise["exercise"].config.hint);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r20.getErrorText(ctx_r20.biSetExercise["exercise"]));
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r20.biSetExercise.method);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r20.biSetExercise["series"].label);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("name", ctx_r20.biSetExercise["series"].config.name)("type", ctx_r20.biSetExercise["series"].config.type)("ngModel", ctx_r20.biSetExercise["series"].value)("placeholder", ctx_r20.biSetExercise["series"].config.placeholder)("disabled", ctx_r20.biSetExercise["series"].config.disabled)("readonly", ctx_r20.biSetExercise["series"].config.readonly);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r20.biSetExercise["series"].config.hint);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r20.getErrorText(ctx_r20.biSetExercise["series"]));
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r20.biSetExercise["sleepTime"].label);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("type", ctx_r20.biSetExercise["sleepTime"].config.type)("name", ctx_r20.biSetExercise["sleepTime"].config.name)("ngModel", ctx_r20.biSetExercise["sleepTime"].value)("placeholder", ctx_r20.biSetExercise["sleepTime"].config.placeholder)("disabled", ctx_r20.biSetExercise["sleepTime"].config.disabled)("readonly", ctx_r20.biSetExercise["sleepTime"].config.readonly)("required", ctx_r20.biSetExercise["sleepTime"].config.required)("minlength", ctx_r20.biSetExercise["sleepTime"].config.minlength)("maxlength", ctx_r20.biSetExercise["sleepTime"].config.maxlength)("pattern", ctx_r20.biSetExercise["sleepTime"].config.pattern)("email", ctx_r20.biSetExercise["sleepTime"].config.email);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r20.biSetExercise["sleepTime"].config.hint);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r20.getErrorText(ctx_r20.biSetExercise["sleepTime"]));
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r20.biSetExercise["repetitions"].label);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("type", ctx_r20.biSetExercise["repetitions"].config.type)("name", ctx_r20.biSetExercise["repetitions"].config.name)("ngModel", ctx_r20.biSetExercise["repetitions"].value)("placeholder", ctx_r20.biSetExercise["repetitions"].config.placeholder)("disabled", ctx_r20.biSetExercise["repetitions"].config.disabled)("readonly", ctx_r20.biSetExercise["repetitions"].config.readonly)("required", ctx_r20.biSetExercise["repetitions"].config.required)("minlength", ctx_r20.biSetExercise["repetitions"].config.minlength)("maxlength", ctx_r20.biSetExercise["repetitions"].config.maxlength)("pattern", ctx_r20.biSetExercise["repetitions"].config.pattern)("email", ctx_r20.biSetExercise["repetitions"].config.email);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r20.biSetExercise["repetitions"].config.hint);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r20.getErrorText(ctx_r20.biSetExercise["repetitions"]));
  }
}
function ExerciseSetDetailsComponent_ng_container_71_mat_option_9_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-option", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r91 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("value", item_r91.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", item_r91.name, " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_71_mat_hint_10_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r82 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r82.triSetExercise["exercise"].config.hint);
  }
}
function ExerciseSetDetailsComponent_ng_container_71_mat_error_11_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r83 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r83.getErrorText(ctx_r83.triSetExercise["exercise"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_71_ng_container_13_mat_option_5_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-option", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r95 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("value", item_r95.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", item_r95.name, " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_71_ng_container_13_mat_hint_6_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r93 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r93.triSetExercise["method"].config.hint);
  }
}
function ExerciseSetDetailsComponent_ng_container_71_ng_container_13_mat_error_7_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r94 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r94.getErrorText(ctx_r94.triSetExercise["method"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_71_ng_container_13_Template(rf, ctx) {
  if (rf & 1) {
    const _r97 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](1, "mat-form-field", 8)(2, "mat-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](4, "mat-select", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_ng_container_71_ng_container_13_Template_mat_select_ngModelChange_4_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r97);
      const ctx_r96 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r96.triSetExercise["method"].value = $event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](5, ExerciseSetDetailsComponent_ng_container_71_ng_container_13_mat_option_5_Template, 2, 2, "mat-option", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](6, ExerciseSetDetailsComponent_ng_container_71_ng_container_13_mat_hint_6_Template, 2, 1, "mat-hint", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](7, ExerciseSetDetailsComponent_ng_container_71_ng_container_13_mat_error_7_Template, 2, 1, "mat-error", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r84 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r84.triSetExercise["method"].label);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngModel", ctx_r84.triSetExercise["method"].value)("name", ctx_r84.triSetExercise["method"].config.name)("placeholder", ctx_r84.triSetExercise["method"].config.placeholder)("disabled", ctx_r84.triSetExercise["method"].config.disabled)("required", ctx_r84.triSetExercise["method"].config.required);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngForOf", ctx_r84.triSetExercise["method"].selectOptions);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r84.triSetExercise["method"].config.hint);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r84.getErrorText(ctx_r84.triSetExercise["method"]));
  }
}
function ExerciseSetDetailsComponent_ng_container_71_mat_hint_20_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r85 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r85.triSetExercise["series"].config.hint);
  }
}
function ExerciseSetDetailsComponent_ng_container_71_mat_error_21_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r86.getErrorText(ctx_r86.triSetExercise["series"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_71_mat_hint_27_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r87 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r87.triSetExercise["sleepTime"].config.hint);
  }
}
function ExerciseSetDetailsComponent_ng_container_71_mat_error_28_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r88 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r88.getErrorText(ctx_r88.triSetExercise["sleepTime"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_71_mat_hint_35_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-hint");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r89 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r89.triSetExercise["repetitions"].config.hint);
  }
}
function ExerciseSetDetailsComponent_ng_container_71_mat_error_36_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "mat-error");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r90 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx_r90.getErrorText(ctx_r90.triSetExercise["repetitions"]), " ");
  }
}
function ExerciseSetDetailsComponent_ng_container_71_Template(rf, ctx) {
  if (rf & 1) {
    const _r99 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](1, "h4");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](2, "Configura\u00E7\u00F5es do Exerc\u00EDcio 3");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](3, "div", 4)(4, "div", 5)(5, "mat-form-field", 8)(6, "mat-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](8, "mat-select", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_ng_container_71_Template_mat_select_ngModelChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r99);
      const ctx_r98 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r98.triSetExercise["exercise"].value = $event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](9, ExerciseSetDetailsComponent_ng_container_71_mat_option_9_Template, 2, 2, "mat-option", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](10, ExerciseSetDetailsComponent_ng_container_71_mat_hint_10_Template, 2, 1, "mat-hint", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](11, ExerciseSetDetailsComponent_ng_container_71_mat_error_11_Template, 2, 1, "mat-error", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](12, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](13, ExerciseSetDetailsComponent_ng_container_71_ng_container_13_Template, 8, 9, "ng-container", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](14, "div", 4)(15, "div", 5)(16, "mat-form-field")(17, "mat-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](18);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](19, "input", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_ng_container_71_Template_input_ngModelChange_19_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r99);
      const ctx_r100 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r100.triSetExercise["series"].value = $event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](20, ExerciseSetDetailsComponent_ng_container_71_mat_hint_20_Template, 2, 1, "mat-hint", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](21, ExerciseSetDetailsComponent_ng_container_71_mat_error_21_Template, 2, 1, "mat-error", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](22, "div", 5)(23, "mat-form-field")(24, "mat-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](25);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](26, "input", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_ng_container_71_Template_input_ngModelChange_26_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r99);
      const ctx_r101 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r101.triSetExercise["sleepTime"].value = $event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](27, ExerciseSetDetailsComponent_ng_container_71_mat_hint_27_Template, 2, 1, "mat-hint", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](28, ExerciseSetDetailsComponent_ng_container_71_mat_error_28_Template, 2, 1, "mat-error", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](29, "div", 4)(30, "div", 5)(31, "mat-form-field")(32, "mat-label");
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](33);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](34, "input", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_ng_container_71_Template_input_ngModelChange_34_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵrestoreView"](_r99);
      const ctx_r102 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵresetView"](ctx_r102.triSetExercise["repetitions"].value = $event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](35, ExerciseSetDetailsComponent_ng_container_71_mat_hint_35_Template, 2, 1, "mat-hint", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](36, ExerciseSetDetailsComponent_ng_container_71_mat_error_36_Template, 2, 1, "mat-error", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](37, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r21.triSetExercise["exercise"].label);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngModel", ctx_r21.triSetExercise["exercise"].value)("name", ctx_r21.triSetExercise["exercise"].config.name)("placeholder", ctx_r21.triSetExercise["exercise"].config.placeholder)("disabled", ctx_r21.triSetExercise["exercise"].config.disabled)("required", ctx_r21.triSetExercise["exercise"].config.required);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngForOf", ctx_r21.triSetExercise["exercise"].selectOptions);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r21.triSetExercise["exercise"].config.hint);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r21.getErrorText(ctx_r21.triSetExercise["exercise"]));
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r21.triSetExercise.method);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r21.triSetExercise["series"].label);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("name", ctx_r21.triSetExercise["series"].config.name)("type", ctx_r21.triSetExercise["series"].config.type)("ngModel", ctx_r21.triSetExercise["series"].value)("placeholder", ctx_r21.triSetExercise["series"].config.placeholder)("disabled", ctx_r21.triSetExercise["series"].config.disabled)("readonly", ctx_r21.triSetExercise["series"].config.readonly);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r21.triSetExercise["series"].config.hint);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r21.getErrorText(ctx_r21.triSetExercise["series"]));
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r21.triSetExercise["sleepTime"].label);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("type", ctx_r21.triSetExercise["sleepTime"].config.type)("name", ctx_r21.triSetExercise["sleepTime"].config.name)("ngModel", ctx_r21.triSetExercise["sleepTime"].value)("placeholder", ctx_r21.triSetExercise["sleepTime"].config.placeholder)("disabled", ctx_r21.triSetExercise["sleepTime"].config.disabled)("readonly", ctx_r21.triSetExercise["sleepTime"].config.readonly)("required", ctx_r21.triSetExercise["sleepTime"].config.required)("minlength", ctx_r21.triSetExercise["sleepTime"].config.minlength)("maxlength", ctx_r21.triSetExercise["sleepTime"].config.maxlength)("pattern", ctx_r21.triSetExercise["sleepTime"].config.pattern)("email", ctx_r21.triSetExercise["sleepTime"].config.email);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r21.triSetExercise["sleepTime"].config.hint);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r21.getErrorText(ctx_r21.triSetExercise["sleepTime"]));
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx_r21.triSetExercise["repetitions"].label);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("type", ctx_r21.triSetExercise["repetitions"].config.type)("name", ctx_r21.triSetExercise["repetitions"].config.name)("ngModel", ctx_r21.triSetExercise["repetitions"].value)("placeholder", ctx_r21.triSetExercise["repetitions"].config.placeholder)("disabled", ctx_r21.triSetExercise["repetitions"].config.disabled)("readonly", ctx_r21.triSetExercise["repetitions"].config.readonly)("required", ctx_r21.triSetExercise["repetitions"].config.required)("minlength", ctx_r21.triSetExercise["repetitions"].config.minlength)("maxlength", ctx_r21.triSetExercise["repetitions"].config.maxlength)("pattern", ctx_r21.triSetExercise["repetitions"].config.pattern)("email", ctx_r21.triSetExercise["repetitions"].config.email);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r21.triSetExercise["repetitions"].config.hint);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx_r21.getErrorText(ctx_r21.triSetExercise["repetitions"]));
  }
}
class ExerciseSetDetailsComponent {
  constructor(utilsService, actRoute, loadingService, router, exercisesService, methodsService, exerciseSetService, exerciseMethodsService, exerciseConfigurationService) {
    this.utilsService = utilsService;
    this.actRoute = actRoute;
    this.loadingService = loadingService;
    this.router = router;
    this.exercisesService = exercisesService;
    this.methodsService = methodsService;
    this.exerciseSetService = exerciseSetService;
    this.exerciseMethodsService = exerciseMethodsService;
    this.exerciseConfigurationService = exerciseConfigurationService;
    this.form = {
      name: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_1__.ControlInput({
        label: 'Nome',
        config: {
          name: 'name',
          required: true,
          errors: {
            required: 'Campo obrigatório'
          }
        }
      }),
      setCategories: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_1__.ControlInput({
        label: 'Categoria do treino',
        selectOptions: [{
          name: 'Opção 0',
          value: '0'
        }, {
          name: 'Opção 1',
          value: '1'
        }, {
          name: 'Opção 2',
          value: '2'
        }, {
          name: 'Opção 3',
          value: '3'
        }],
        config: {
          name: 'setCategories',
          required: true,
          errors: {
            required: 'Campo obrigatório'
          }
        }
      })
    };
    this.exerciseMethodController = {
      manyExercises: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_1__.ControlInput({
        label: 'Exercícios por série',
        value: 'ONESET',
        config: {
          name: 'manyExercises',
          errors: {
            required: 'Campo obrigatório'
          }
        }
      })
    };
    this.exercicies = [];
    this.allExercises = [{
      name: 'Treino 0',
      value: 0
    }, {
      name: 'Treino 1',
      value: 1
    }, {
      name: 'Treino 2',
      value: 2
    }, {
      name: 'Treino 3',
      value: 3
    }];
    this.allMethods = [{
      name: 'Método 0',
      value: 0
    }, {
      name: 'Método 1',
      value: 1
    }, {
      name: 'Método 2',
      value: 2
    }, {
      name: 'Método 3',
      value: 3
    }];
    this.typeExercise = [{
      name: 'One Set',
      value: 'ONESET'
    }, {
      name: 'Bi Set',
      value: 'BISET'
    }, {
      name: 'Tri Set',
      value: 'TRISET'
    }];
    // Exercises table Configurations
    // columns = [
    //   { name: 'exercise', title: 'Exercício' },
    //   { name: 'method', title: 'Método' },
    //   { name: 'series', title: 'Séries' },
    //   { name: 'sleepTime', title: 'Tempo de descanso' },
    //   { name: 'repetitions', title: 'Repetições' },
    // ];
    this.columnsDisplay = ['type', 'countExercicies', 'actions'];
    this.expandedExercise = null;
    this.isEdit = false;
    this.editId = null;
    this.exerciseMethodSaved = [];
    this.oneSetExercise = this.initOneBiAndTriSetForms('oneSetExercise');
    this.biSetExercise = this.initOneBiAndTriSetForms('biSetExercise');
    this.triSetExercise = this.initOneBiAndTriSetForms('triSetExercise');
  }
  ngOnInit() {
    var _this = this;
    return (0,_Users_caio1_Trabalho_Empresa_tay_training_tay_training_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      _this.allExercises = (yield _this.exercisesService.getAll()).map(e => {
        return {
          name: e.name,
          value: e.id
        };
      });
      _this.allMethods = (yield _this.methodsService.getAll()).map(e => {
        return {
          name: e.name,
          value: e.id
        };
      });
      console.log('exercise', _this.allExercises);
      console.log('methods', _this.allMethods);
      _this.oneSetExercise.exercise.selectOptions = _this.allExercises;
      _this.biSetExercise.exercise.selectOptions = _this.allExercises;
      _this.triSetExercise.exercise.selectOptions = _this.allExercises;
      _this.oneSetExercise.method.selectOptions = _this.allMethods;
      _this.biSetExercise.method.selectOptions = _this.allMethods;
      _this.triSetExercise.method.selectOptions = _this.allMethods;
    })();
  }
  ngAfterViewInit() {
    var _this2 = this;
    this.actRoute.params.subscribe( /*#__PURE__*/function () {
      var _ref = (0,_Users_caio1_Trabalho_Empresa_tay_training_tay_training_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (params) {
        if (params['id'] !== 'new') {
          setTimeout(() => {
            _this2.loadingService.activeLoading();
          }, 50);
          // Load data...
          _this2.isEdit = true;
          _this2.editId = params['id'];
          const exerciseGroup = yield _this2.exerciseSetService.getById(_this2.editId, ['exerciseMethods', 'exerciseMethods.exerciseConfigurations']);
          console.log('exerciseGroup', exerciseGroup);
          _this2.formRef.controls['name'].setValue(exerciseGroup.name);
          _this2.formRef.controls['setCategories'].setValue(exerciseGroup.category);
          _this2.exercicies = exerciseGroup.exerciseMethods;
          _this2.exerciseMethodSaved = JSON.parse(JSON.stringify(_this2.exercicies));
          setTimeout(() => {
            _this2.loadingService.deactiveLoading();
          }, 50);
        }
      });
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }());
  }
  getExercise(exercise) {
    return !!this.allExercises.find(x => x.value === exercise) ? this.allExercises.find(x => x.value === exercise).name : '';
  }
  getMethod(method) {
    return !!this.allMethods.find(x => x.value === method) ? this.allMethods.find(x => x.value === method).name : '';
  }
  getErrorText(control) {
    return this.utilsService.getErrorText(this.formRef, control);
  }
  issueValues() {
    if (!this.formRef || !this.formRef.form) {
      return '';
    }
    const controls = this.formRef.form.controls;
    const keys = Object.keys(controls);
    let ret = '';
    for (const key of keys) {
      if (this.form[key] && this.getErrorText(this.form[key])) ret += `${this.form[key].label}: ${this.getErrorText(this.form[key])}\r\n`;
    }
    return ret;
  }
  // Init new exercise methods
  // dragdropEvent(event: CdkDragDrop<string[]>) {
  //   moveItemInArray(this.exercicies, event.previousIndex, event.currentIndex);
  // }
  initOneBiAndTriSetForms(prefix) {
    const model = {
      exercise: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_1__.ControlInput({
        label: 'Exercício',
        selectOptions: [{
          name: 'Opção 0',
          value: 0
        }, {
          name: 'Opção 1',
          value: 1
        }, {
          name: 'Opção 2',
          value: 2
        }, {
          name: 'Opção 3',
          value: 3
        }],
        config: {
          name: 'exercise',
          errors: {
            required: 'Campo obrigatório'
          }
        }
      }),
      method: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_1__.ControlInput({
        label: 'Método',
        selectOptions: [{
          name: 'Opção 0',
          value: 0
        }, {
          name: 'Opção 1',
          value: 1
        }, {
          name: 'Opção 2',
          value: 2
        }, {
          name: 'Opção 3',
          value: 3
        }],
        config: {
          name: 'method',
          errors: {
            required: 'Campo obrigatório'
          }
        }
      }),
      series: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_1__.ControlInput({
        label: 'Séries',
        config: {
          name: 'series',
          type: 'text',
          errors: {
            required: 'Campo obrigatório'
          }
        }
      }),
      sleepTime: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_1__.ControlInput({
        label: 'Tempo de descanso',
        config: {
          name: 'sleepTime',
          errors: {
            required: 'Campo obrigatório'
          }
        }
      }),
      repetitions: new src_app_core_classes_control_class__WEBPACK_IMPORTED_MODULE_1__.ControlInput({
        label: 'Repetições',
        config: {
          name: 'repetitions',
          errors: {
            required: 'Campo obrigatório'
          }
        }
      })
    };
    model.exercise.config.name = `${prefix}_exercise`;
    model.method.config.name = `${prefix}_method`;
    model.series.config.name = `${prefix}_series`;
    model.sleepTime.config.name = `${prefix}_repetitions`;
    model.repetitions.config.name = `${prefix}_sleepTime`;
    return model;
  }
  extractOneBiAndTriSetForms(set) {
    return {
      exerciseId: this.formRef.form.controls[`${set}_exercise`].value,
      methodId: this.formRef.form.controls[`${set}_method`].value,
      series: this.formRef.form.controls[`${set}_series`].value,
      reps: this.formRef.form.controls[`${set}_repetitions`].value,
      rest: this.formRef.form.controls[`${set}_sleepTime`].value
    };
  }
  populateOneBiAndTriSetForms(set, config) {
    this.formRef.form.controls[`${set}_exercise`].setValue(config.exerciseId);
    this.formRef.form.controls[`${set}_method`].setValue(config.methodId);
    this.formRef.form.controls[`${set}_series`].setValue(config.series);
    this.formRef.form.controls[`${set}_repetitions`].setValue(config.reps);
    this.formRef.form.controls[`${set}_sleepTime`].setValue(config.rest);
  }
  populateSetForms(exercise) {
    this.resetAllSetForms();
    if (exercise.exerciseConfigurations[0]) {
      this.populateOneBiAndTriSetForms('oneSetExercise', exercise.exerciseConfigurations[0]);
    }
    if (exercise.exerciseConfigurations[1]) {
      this.populateOneBiAndTriSetForms('biSetExercise', exercise.exerciseConfigurations[1]);
    }
    if (exercise.exerciseConfigurations[2]) {
      this.populateOneBiAndTriSetForms('triSetExercise', exercise.exerciseConfigurations[2]);
    }
  }
  resetOneBiAndTriSetForms(set) {
    console.log('set', set);
    console.log('form', this.formRef);
    this.formRef.form.controls[`${set}_exercise`].reset();
    this.formRef.form.controls[`${set}_method`].reset();
    this.formRef.form.controls[`${set}_series`].reset();
    this.formRef.form.controls[`${set}_repetitions`].reset();
    this.formRef.form.controls[`${set}_sleepTime`].reset();
  }
  resetAllSetForms() {
    this.resetOneBiAndTriSetForms('oneSetExercise');
    if (this.exerciseMethodController.manyExercises.value !== 'ONESET') this.resetOneBiAndTriSetForms('biSetExercise');
    if (this.exerciseMethodController.manyExercises.value === 'TRISET') this.resetOneBiAndTriSetForms('triSetExercise');
  }
  issueValuesNewExercise() {
    let ret = '';
    // if (!this.newExercise.exercise.value)
    //   ret += `Exercício: Campo obrigatório \r\n`;
    // if (this.newExercise.method && !this.newExercise.method.value)
    //   ret += `Método: Campo obrigatório \r\n`;
    // if (!this.newExercise.series.value) ret += `Séries: Campo obrigatório \r\n`;
    // if (!this.newExercise.sleepTime.value)
    //   ret += `Tempo de descanso: Campo obrigatório\r\n`;
    // if (!this.newExercise.repetitions.value)
    //   ret += `Repetições: Campo obrigatório`;
    return ret;
  }
  addExercise() {
    // Check the Exercise type betwenn one, bi or tri set
    const configExercises = [];
    if (this.exerciseMethodController.manyExercises.value === 'ONESET') {
      // Fill one Config Exercise and push to array
      const oneSet = this.extractOneBiAndTriSetForms('oneSetExercise');
      configExercises.push(oneSet);
    } else if (this.exerciseMethodController.manyExercises.value === 'BISET') {
      const oneSet = this.extractOneBiAndTriSetForms('oneSetExercise');
      const biSet = this.extractOneBiAndTriSetForms('biSetExercise');
      configExercises.push(oneSet);
      configExercises.push(biSet);
    } else if (this.exerciseMethodController.manyExercises.value === 'TRISET') {
      const oneSet = this.extractOneBiAndTriSetForms('oneSetExercise');
      const biSet = this.extractOneBiAndTriSetForms('biSetExercise');
      const triSet = this.extractOneBiAndTriSetForms('triSetExercise');
      configExercises.push(oneSet);
      configExercises.push(biSet);
      configExercises.push(triSet);
    }
    const exercise = {
      type: this.exerciseMethodController.manyExercises.value,
      exerciseConfigurations: configExercises
    };
    this.exercicies.push(exercise);
    this.table?.renderRows();
    console.log(this.exercicies);
    this.resetAllSetForms();
  }
  removeExercise(event, index) {
    event.stopPropagation();
    console.log('index', index);
    this.exercicies.splice(index, 1);
    this.table?.renderRows();
    console.log('exercisies', this.exercicies);
  }
  editExercise(event, index) {
    event.stopPropagation();
    const exercise = this.exercicies[index];
    this.formRef.form.controls[`manyExercises`].setValue(exercise.type);
    this.populateSetForms(exercise);
    this.removeExercise(event, index);
  }
  // End new exercise methods
  maskFilled(control) {
    console.log('maskFilled');
  }
  dateEvents(name, event) {
    console.log('dateEvents', name, event);
  }
  onSubmit() {
    var _this3 = this;
    return (0,_Users_caio1_Trabalho_Empresa_tay_training_tay_training_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      console.log('Iniciando o submit');
      const data = _this3.formRef.value;
      try {
        // Create Exercise Groups (Exercise Set)
        console.log('Criando o grupo de exercícios');
        const exerciseSet = {
          name: data.name,
          category: data.setCategories
        };
        console.log('Salvando/Atualizando o grupo de exercícios');
        const exerciseSetCreated = !_this3.isEdit ? yield _this3.exerciseSetService.create(exerciseSet) : yield _this3.exerciseSetService.update(_this3.editId, exerciseSet);
        console.log('Grupo salvo/atualizado com sucesso');
        console.log('Criando os métodos de exercícios');
        // Create Exercise Methods
        const queryToSave = _this3.exercicies.map( /*#__PURE__*/function () {
          var _ref2 = (0,_Users_caio1_Trabalho_Empresa_tay_training_tay_training_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (e, i) {
            console.log('Map index', i);
            const toSave = {
              id: e.id ? e.id : undefined,
              type: e.type,
              exerciseGroupId: exerciseSetCreated.id
            };
            console.log('Para salvar => ', toSave);
            const exerciseMethodCreated = !toSave.id ? yield _this3.exerciseMethodsService.create(toSave) : yield _this3.exerciseMethodsService.update(toSave.id, toSave);
            console.log('Método de exercício salvo/atualizado com sucesso');
            console.log('Criando as configurações de exercícios');
            const exerciseConfigurations = e.exerciseConfigurations.map(exerciseConfiguration => {
              return {
                ...exerciseConfiguration,
                exerciseMethodId: exerciseMethodCreated.id
              };
            });
            console.log('Configurações de exercícios montadas para salvar/editar', exerciseConfigurations);
            const exerciseConfigurationCreated = !_this3.isEdit ? yield _this3.exerciseConfigurationService.createMany(exerciseConfigurations) : yield _this3.exerciseConfigurationService.updateListExerciseMethod(exerciseConfigurations);
            console.log('Configurações de exercicios salvas com sucesso');
            const ret = {
              exerciseSetId: exerciseSetCreated.id,
              exerciseMethodId: exerciseMethodCreated.id,
              exerciseConfigurationIds: exerciseConfigurationCreated
            };
            console.log('Rerutn final');
            return ret;
          });
          return function (_x2, _x3) {
            return _ref2.apply(this, arguments);
          };
        }());
        yield Promise.all(queryToSave);
        if (_this3.isEdit) yield _this3.checkExerciseMethodsCreated();
        // Create Exercise Configurations
        _this3.router.navigate(['exercise-set']);
      } catch (error) {
        console.log('error on create', error);
      }
    })();
  }
  checkExerciseMethodsCreated() {
    var _this4 = this;
    return (0,_Users_caio1_Trabalho_Empresa_tay_training_tay_training_frontend_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      const deletedOnes = _this4.exerciseMethodSaved.filter(em => !_this4.exercicies.filter(e => e.id).map(e => e.id).includes(em.id));
      const d$ = deletedOnes.map(em => _this4.exerciseMethodsService.delete(em.id));
      const d = yield Promise.all(d$);
      return d;
    })();
  }
}
ExerciseSetDetailsComponent.ɵfac = function ExerciseSetDetailsComponent_Factory(t) {
  return new (t || ExerciseSetDetailsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_services_utils_service__WEBPACK_IMPORTED_MODULE_2__.UtilsService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_services_loading_service__WEBPACK_IMPORTED_MODULE_3__.LoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_services_exercises_service__WEBPACK_IMPORTED_MODULE_4__.ExercisesService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_services_methods_service__WEBPACK_IMPORTED_MODULE_5__.MethodsService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_services_exercise_set_service__WEBPACK_IMPORTED_MODULE_6__.ExerciseSetService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_services_exercise_method_service__WEBPACK_IMPORTED_MODULE_7__.ExerciseMethodService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_app_services_exercise_configuration_service__WEBPACK_IMPORTED_MODULE_8__.ExerciseConfigurationService));
};
ExerciseSetDetailsComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineComponent"]({
  type: ExerciseSetDetailsComponent,
  selectors: [["app-exercise-set-details"]],
  viewQuery: function ExerciseSetDetailsComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵviewQuery"](_c0, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵviewQuery"](_c1, 5);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵloadQuery"]()) && (ctx.formRef = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵloadQuery"]()) && (ctx.table = _t.first);
    }
  },
  decls: 88,
  vars: 87,
  consts: [[1, "master", "mat-elevation-z2"], ["class", "loading-shade all", 4, "ngIf"], [1, "form"], ["reactiveForm", "ngForm"], [1, "row"], [1, "col"], ["matInput", "", 3, "type", "name", "ngModel", "placeholder", "disabled", "readonly", "required", "minlength", "maxlength", "pattern", "email", "mask", "dropSpecialCharacters", "validation", "ngModelChange"], [4, "ngIf"], ["appearance", "fill"], [3, "ngModel", "name", "placeholder", "disabled", "required", "ngModelChange"], [3, "value", 4, "ngFor", "ngForOf"], [1, "row", "mat-elevation-z2", "workouts"], [2, "margin-top", "1em"], [3, "ngModel", "name", "ngModelChange"], ["matInput", "", 3, "name", "type", "ngModel", "placeholder", "disabled", "readonly", "ngModelChange"], ["matInput", "", 3, "type", "name", "ngModel", "placeholder", "disabled", "readonly", "required", "minlength", "maxlength", "pattern", "email", "ngModelChange"], [1, "col", "submit-col"], ["type", "button", "mat-raised-button", "", "color", "accent", 1, "submit-btn", 3, "click"], ["mat-icon-button", "", "aria-label", "Help Form Button", "type", "button", "matTooltipClass", "multiline-tooltip", 1, "help-btn", 3, "matTooltip"], ["type", "button", "mat-raised-button", "", "color", "accent", 1, "submit-btn", 3, "disabled", "click"], [1, "loading-shade", "all"], [3, "value"], ["mat-table", "", "multiTemplateDataRows", "", 1, "mat-elevation-z8", 3, "dataSource"], ["tableExercisies", ""], ["matColumnDef", "type"], ["mat-header-cell", "", 4, "matHeaderCellDef"], ["mat-cell", "", 4, "matCellDef"], ["matColumnDef", "countExercicies"], ["matColumnDef", "actions"], ["mat-cell", "", "class", "actions", 4, "matCellDef"], ["matColumnDef", "expandedDetail"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", "class", "exercise-table-row", 3, "example-expanded-row", "click", 4, "matRowDef", "matRowDefColumns"], ["mat-row", "", "class", "exercise-detail-row", 4, "matRowDef", "matRowDefColumns"], ["mat-header-cell", ""], ["mat-cell", ""], ["mat-cell", "", 1, "actions"], ["mat-icon-button", "", "type", "button", 3, "click"], [1, "content-exercise-details"], [4, "ngFor", "ngForOf"], [1, "config"], [1, "col", "subtitle"], ["class", "row", 4, "ngIf"], [1, "col", "series"], [1, "col", "reps"], [1, "col", "rest"], [1, "col", "exerciseId"], [1, "col", "methodId"], ["mat-header-row", ""], ["mat-row", "", 1, "exercise-table-row", 3, "click"], ["mat-row", "", 1, "exercise-detail-row"]],
  template: function ExerciseSetDetailsComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "section", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](1, ExerciseSetDetailsComponent_div_1_Template, 2, 0, "div", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](2, "form", 2, 3)(4, "div", 4)(5, "div", 5)(6, "mat-form-field")(7, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](8);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](9, "input", 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_Template_input_ngModelChange_9_listener($event) {
        return ctx.form["name"].value = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](10, ExerciseSetDetailsComponent_mat_hint_10_Template, 2, 1, "mat-hint", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](11, ExerciseSetDetailsComponent_mat_error_11_Template, 2, 1, "mat-error", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](12, "div", 5)(13, "mat-form-field", 8)(14, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](15);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](16, "mat-select", 9);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_Template_mat_select_ngModelChange_16_listener($event) {
        return ctx.form["setCategories"].value = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](17, ExerciseSetDetailsComponent_mat_option_17_Template, 2, 2, "mat-option", 10);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](18, ExerciseSetDetailsComponent_mat_hint_18_Template, 2, 1, "mat-hint", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](19, ExerciseSetDetailsComponent_mat_error_19_Template, 2, 1, "mat-error", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](20, "div", 11)(21, "div", 5)(22, "h2");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](23, "Treinos");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](24, ExerciseSetDetailsComponent_ng_container_24_Template, 19, 5, "ng-container", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](25, "h3", 12);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](26, "Adicionar novo");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](27, "div", 4)(28, "div", 5)(29, "span");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](30);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](31, "mat-radio-group", 13);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_Template_mat_radio_group_ngModelChange_31_listener($event) {
        return ctx.exerciseMethodController["manyExercises"].value = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](32, ExerciseSetDetailsComponent_mat_radio_button_32_Template, 2, 2, "mat-radio-button", 10);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerStart"](33);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](34, ExerciseSetDetailsComponent_h4_34_Template, 2, 0, "h4", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](35, "div", 4)(36, "div", 5)(37, "mat-form-field", 8)(38, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](39);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](40, "mat-select", 9);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_Template_mat_select_ngModelChange_40_listener($event) {
        return ctx.oneSetExercise["exercise"].value = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](41, ExerciseSetDetailsComponent_mat_option_41_Template, 2, 2, "mat-option", 10);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](42, ExerciseSetDetailsComponent_mat_hint_42_Template, 2, 1, "mat-hint", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](43, ExerciseSetDetailsComponent_mat_error_43_Template, 2, 1, "mat-error", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](44, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](45, ExerciseSetDetailsComponent_ng_container_45_Template, 8, 9, "ng-container", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](46, "div", 4)(47, "div", 5)(48, "mat-form-field")(49, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](50);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](51, "input", 14);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_Template_input_ngModelChange_51_listener($event) {
        return ctx.oneSetExercise["series"].value = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](52, ExerciseSetDetailsComponent_mat_hint_52_Template, 2, 1, "mat-hint", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](53, ExerciseSetDetailsComponent_mat_error_53_Template, 2, 1, "mat-error", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](54, "div", 5)(55, "mat-form-field")(56, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](57);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](58, "input", 15);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_Template_input_ngModelChange_58_listener($event) {
        return ctx.oneSetExercise["sleepTime"].value = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](59, ExerciseSetDetailsComponent_mat_hint_59_Template, 2, 1, "mat-hint", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](60, ExerciseSetDetailsComponent_mat_error_60_Template, 2, 1, "mat-error", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](61, "div", 4)(62, "div", 5)(63, "mat-form-field")(64, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](65);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](66, "input", 15);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("ngModelChange", function ExerciseSetDetailsComponent_Template_input_ngModelChange_66_listener($event) {
        return ctx.oneSetExercise["repetitions"].value = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](67, ExerciseSetDetailsComponent_mat_hint_67_Template, 2, 1, "mat-hint", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](68, ExerciseSetDetailsComponent_mat_error_68_Template, 2, 1, "mat-error", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](69, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementContainerEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](70, ExerciseSetDetailsComponent_ng_container_70_Template, 38, 47, "ng-container", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](71, ExerciseSetDetailsComponent_ng_container_71_Template, 38, 47, "ng-container", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](72, "div", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](73, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](74, "div", 16)(75, "button", 17);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("click", function ExerciseSetDetailsComponent_Template_button_click_75_listener() {
        return ctx.addExercise();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](76, " Salvar treino ");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](77, "button", 18)(78, "mat-icon");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](79, "help");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()()()()();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](80, "div", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](81, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](82, "div", 16)(83, "button", 19);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵlistener"]("click", function ExerciseSetDetailsComponent_Template_button_click_83_listener() {
        return ctx.onSubmit();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](84, " Salvar ");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](85, "button", 18)(86, "mat-icon");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtext"](87, "help");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]()()()()()();
    }
    if (rf & 2) {
      const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵreference"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.loadingService.loading);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](7);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx.form["name"].label);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("type", ctx.form["name"].config.type)("name", ctx.form["name"].config.name)("ngModel", ctx.form["name"].value)("placeholder", ctx.form["name"].config.placeholder)("disabled", ctx.form["name"].config.disabled)("readonly", ctx.form["name"].config.readonly)("required", ctx.form["name"].config.required)("minlength", ctx.form["name"].config.minlength)("maxlength", ctx.form["name"].config.maxlength)("pattern", ctx.form["name"].config.pattern)("email", ctx.form["name"].config.email)("mask", ctx.form["name"].config.mask && ctx.form["name"].config.maskConfig.mask ? ctx.form["name"].config.maskConfig.mask : null)("dropSpecialCharacters", ctx.form["name"].config.mask && ctx.form["name"].config.maskConfig.dropSpecialCharacters ? ctx.form["name"].config.maskConfig.dropSpecialCharacters : true)("validation", ctx.form["name"].config.mask && ctx.form["name"].config.maskConfig.validation ? ctx.form["name"].config.maskConfig.validation : false);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.form["name"].config.hint);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.getErrorText(ctx.form["name"]));
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx.form["setCategories"].label);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngModel", ctx.form["setCategories"].value)("name", ctx.form["setCategories"].config.name)("placeholder", ctx.form["setCategories"].config.placeholder)("disabled", ctx.form["setCategories"].config.disabled)("required", ctx.form["setCategories"].config.required);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngForOf", ctx.form["setCategories"].selectOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.form["setCategories"].config.hint);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.getErrorText(ctx.form["setCategories"]));
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.exercicies.length > 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](6);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate1"](" ", ctx.exerciseMethodController["manyExercises"].label, " ");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngModel", ctx.exerciseMethodController["manyExercises"].value)("name", ctx.exerciseMethodController["manyExercises"].config.name);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngForOf", ctx.typeExercise);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.exerciseMethodController["manyExercises"].value !== "ONESET");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx.oneSetExercise["exercise"].label);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngModel", ctx.oneSetExercise["exercise"].value)("name", ctx.oneSetExercise["exercise"].config.name)("placeholder", ctx.oneSetExercise["exercise"].config.placeholder)("disabled", ctx.oneSetExercise["exercise"].config.disabled)("required", ctx.oneSetExercise["exercise"].config.required);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngForOf", ctx.oneSetExercise["exercise"].selectOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.oneSetExercise["exercise"].config.hint);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.getErrorText(ctx.oneSetExercise["exercise"]));
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.oneSetExercise.method);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx.oneSetExercise["series"].label);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("name", ctx.oneSetExercise["series"].config.name)("type", ctx.oneSetExercise["series"].config.type)("ngModel", ctx.oneSetExercise["series"].value)("placeholder", ctx.oneSetExercise["series"].config.placeholder)("disabled", ctx.oneSetExercise["series"].config.disabled)("readonly", ctx.oneSetExercise["series"].config.readonly);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.oneSetExercise["series"].config.hint);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.getErrorText(ctx.oneSetExercise["series"]));
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx.oneSetExercise["sleepTime"].label);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("type", ctx.oneSetExercise["sleepTime"].config.type)("name", ctx.oneSetExercise["sleepTime"].config.name)("ngModel", ctx.oneSetExercise["sleepTime"].value)("placeholder", ctx.oneSetExercise["sleepTime"].config.placeholder)("disabled", ctx.oneSetExercise["sleepTime"].config.disabled)("readonly", ctx.oneSetExercise["sleepTime"].config.readonly)("required", ctx.oneSetExercise["sleepTime"].config.required)("minlength", ctx.oneSetExercise["sleepTime"].config.minlength)("maxlength", ctx.oneSetExercise["sleepTime"].config.maxlength)("pattern", ctx.oneSetExercise["sleepTime"].config.pattern)("email", ctx.oneSetExercise["sleepTime"].config.email);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.oneSetExercise["sleepTime"].config.hint);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.getErrorText(ctx.oneSetExercise["sleepTime"]));
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtextInterpolate"](ctx.oneSetExercise["repetitions"].label);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("type", ctx.oneSetExercise["repetitions"].config.type)("name", ctx.oneSetExercise["repetitions"].config.name)("ngModel", ctx.oneSetExercise["repetitions"].value)("placeholder", ctx.oneSetExercise["repetitions"].config.placeholder)("disabled", ctx.oneSetExercise["repetitions"].config.disabled)("readonly", ctx.oneSetExercise["repetitions"].config.readonly)("required", ctx.oneSetExercise["repetitions"].config.required)("minlength", ctx.oneSetExercise["repetitions"].config.minlength)("maxlength", ctx.oneSetExercise["repetitions"].config.maxlength)("pattern", ctx.oneSetExercise["repetitions"].config.pattern)("email", ctx.oneSetExercise["repetitions"].config.email);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.oneSetExercise["repetitions"].config.hint);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.getErrorText(ctx.oneSetExercise["repetitions"]));
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.exerciseMethodController.manyExercises.value !== "ONESET");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.exerciseMethodController.manyExercises.value === "TRISET");
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](6);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("matTooltip", ctx.issueValuesNewExercise());
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](6);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("disabled", _r1.invalid);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵclassProp"]("show", _r1.invalid);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("matTooltip", ctx.issueValues());
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_11__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_11__.NgIf, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.RequiredValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MinLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.PatternValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.EmailValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgModel, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgForm, _angular_material_core__WEBPACK_IMPORTED_MODULE_13__.MatOption, _angular_material_button__WEBPACK_IMPORTED_MODULE_14__.MatButton, _angular_material_button__WEBPACK_IMPORTED_MODULE_14__.MatIconButton, _angular_material_icon__WEBPACK_IMPORTED_MODULE_15__.MatIcon, _angular_material_input__WEBPACK_IMPORTED_MODULE_16__.MatInput, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_17__.MatFormField, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_17__.MatLabel, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_17__.MatHint, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_17__.MatError, _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_18__.MatProgressSpinner, _angular_material_radio__WEBPACK_IMPORTED_MODULE_19__.MatRadioGroup, _angular_material_radio__WEBPACK_IMPORTED_MODULE_19__.MatRadioButton, _angular_material_select__WEBPACK_IMPORTED_MODULE_20__.MatSelect, _angular_material_table__WEBPACK_IMPORTED_MODULE_21__.MatTable, _angular_material_table__WEBPACK_IMPORTED_MODULE_21__.MatHeaderCellDef, _angular_material_table__WEBPACK_IMPORTED_MODULE_21__.MatHeaderRowDef, _angular_material_table__WEBPACK_IMPORTED_MODULE_21__.MatColumnDef, _angular_material_table__WEBPACK_IMPORTED_MODULE_21__.MatCellDef, _angular_material_table__WEBPACK_IMPORTED_MODULE_21__.MatRowDef, _angular_material_table__WEBPACK_IMPORTED_MODULE_21__.MatHeaderCell, _angular_material_table__WEBPACK_IMPORTED_MODULE_21__.MatCell, _angular_material_table__WEBPACK_IMPORTED_MODULE_21__.MatHeaderRow, _angular_material_table__WEBPACK_IMPORTED_MODULE_21__.MatRow, _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_22__.MatTooltip, ngx_mask__WEBPACK_IMPORTED_MODULE_23__.NgxMaskDirective],
  styles: ["@import url(https://fonts.googleapis.com/icon?family=Material+Icons);@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 900[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 100[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 900&display=swap\u00CF)[_ngcontent-%COMP%];@charset \"UTF-8\";\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\nbody[_ngcontent-%COMP%] {\n  --primary-color: #fa1b31;\n  --primary-lighter-color: #f66d73;\n  --primary-darker-color: #cd0014;\n  --text-primary-color: #ffffff;\n  --text-primary-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-primary-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --accent-color: #1bfae4;\n  --accent-lighter-color: #d9fefa;\n  --accent-darker-color: #00bd95;\n  --text-accent-color: #ffffff;\n  --text-accent-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-accent-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --warn-color: #ff0000;\n  --warn-lighter-color: #ffb3b3;\n  --warn-darker-color: #ff0000;\n  --text-warn-color: #ffffff;\n  --text-warn-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-warn-darker-color: #ffffff;\n}\n\n.mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #686868;\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #686868;\n}\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #686868;\n}\n\n.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-elevation-z0[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n}\n\n.mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #424242;\n}\n\n.mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #595959;\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-mdc-card-title[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-headline6-font-size, 20px);\n  line-height: var(--mdc-typography-headline6-line-height, 32px);\n  font-weight: var(--mdc-typography-headline6-font-weight, 500);\n  letter-spacing: var(--mdc-typography-headline6-letter-spacing, 0.0075em);\n  -webkit-text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n  text-transform: var(--mdc-typography-headline6-text-transform, none);\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n.mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-supporting-text-font: Roboto;\n  --mdc-plain-tooltip-supporting-text-size: 13px;\n  --mdc-plain-tooltip-supporting-text-weight: 500;\n  --mdc-plain-tooltip-supporting-text-tracking: 0.0893em;\n}\n\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n.mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(255, 255, 255, 0.87));\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.08);\n}\n.mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.24);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: #4a4a4a;\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.42);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.06);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #464646;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.08;\n}\n\n.mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.24;\n}\n\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%]:disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n\n.mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 28px;\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -34.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 24px;\n  padding-bottom: 8px;\n}\n\n.mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mdc-text-field__input[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n.mdc-text-field__affix[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--textarea[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  line-height: 1.5rem;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-subscript-wrapper[_ngcontent-%COMP%], .mat-mdc-form-field-bottom-align[_ngcontent-%COMP%]::before {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%], .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: calc(17px * var(--mat-mdc-form-field-floating-label-scale, 0.75));\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-select[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-autocomplete-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: #424242;\n  --mdc-dialog-with-divider-divider-color: rgba(255, 255, 255, 0.12);\n  --mdc-dialog-subhead-color: rgba(255, 255, 255, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-subhead-font: Roboto;\n  --mdc-dialog-subhead-line-height: 32px;\n  --mdc-dialog-subhead-size: 20px;\n  --mdc-dialog-subhead-weight: 500;\n  --mdc-dialog-subhead-tracking: 0.0075em;\n  --mdc-dialog-supporting-text-font: Roboto;\n  --mdc-dialog-supporting-text-line-height: 24px;\n  --mdc-dialog-supporting-text-size: 17px;\n  --mdc-dialog-supporting-text-weight: 500;\n  --mdc-dialog-supporting-text-tracking: 0.0179em;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #595959;\n  --mdc-chip-elevated-disabled-container-color: #595959;\n  --mdc-chip-label-text-color: #fafafa;\n  --mdc-chip-disabled-label-text-color: #fafafa;\n  --mdc-chip-with-icon-icon-color: #fafafa;\n  --mdc-chip-with-icon-disabled-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #fafafa;\n  --mdc-chip-with-icon-selected-icon-color: #fafafa;\n}\n.mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n\n.mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: white;\n}\n\n.mat-mdc-chip[_ngcontent-%COMP%] {\n  height: 32px;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #000;\n  --mdc-switch-disabled-unselected-handle-color: #000;\n  --mdc-switch-disabled-selected-track-color: #f5f5f5;\n  --mdc-switch-disabled-unselected-track-color: #f5f5f5;\n  --mdc-switch-unselected-focus-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-pressed-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-hover-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-focus-track-color: #616161;\n  --mdc-switch-unselected-hover-track-color: #616161;\n  --mdc-switch-unselected-pressed-track-color: #616161;\n  --mdc-switch-unselected-track-color: #616161;\n  --mdc-switch-unselected-focus-handle-color: #fafafa;\n  --mdc-switch-unselected-hover-handle-color: #fafafa;\n  --mdc-switch-unselected-pressed-handle-color: #fafafa;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #9e9e9e;\n  --mdc-switch-selected-icon-color: #212121;\n  --mdc-switch-disabled-selected-icon-color: #212121;\n  --mdc-switch-disabled-unselected-icon-color: #212121;\n  --mdc-switch-unselected-icon-color: #212121;\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-slide-toggle.mat-primary[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #fb979b;\n  --mdc-switch-selected-hover-handle-color: #fb979b;\n  --mdc-switch-selected-pressed-handle-color: #fb979b;\n}\n.mat-mdc-slide-toggle.mat-accent[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #1bfae4;\n  --mdc-switch-selected-hover-handle-color: #1bfae4;\n  --mdc-switch-selected-pressed-handle-color: #1bfae4;\n}\n.mat-mdc-slide-toggle.mat-warn[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: red;\n  --mdc-switch-selected-hover-handle-color: red;\n  --mdc-switch-selected-pressed-handle-color: red;\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-state-layer-size: 48px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%] {\n  padding: calc((40px - 20px) / 2);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__background[_ngcontent-%COMP%]::before {\n  top: calc(-1 * (40px - 20px) / 2);\n  left: calc(-1 * (40px - 20px) / 2);\n  width: 40px;\n  height: 40px;\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - 40px) / 2);\n  right: calc((40px - 40px) / 2);\n  left: calc((40px - 40px) / 2);\n  width: 40px;\n  height: 40px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: white;\n  --mdc-slider-label-label-text-color: black;\n  --mdc-slider-disabled-handle-color: #fff;\n  --mdc-slider-disabled-active-track-color: #fff;\n  --mdc-slider-disabled-inactive-track-color: #fff;\n  --mdc-slider-with-tick-marks-disabled-container-color: #fff;\n  --mat-mdc-slider-value-indicator-opacity: 0.9;\n}\n.mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-label-text-font: Roboto;\n  --mdc-slider-label-label-text-size: 14px;\n  --mdc-slider-label-label-text-line-height: 24px;\n  --mdc-slider-label-label-text-tracking: 0.0067em;\n  --mdc-slider-label-label-text-weight: 500;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-mdc-menu-content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n.mat-mdc-menu-content[_ngcontent-%COMP%], .mat-mdc-menu-content[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: white;\n  --mdc-list-list-item-supporting-text-color: rgba(255, 255, 255, 0.7);\n  --mdc-list-list-item-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-disabled-label-text-color: white;\n  --mdc-list-list-item-disabled-leading-icon-color: white;\n  --mdc-list-list-item-disabled-trailing-icon-color: white;\n  --mdc-list-list-item-hover-label-text-color: white;\n  --mdc-list-list-item-hover-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-focus-label-text-color: white;\n  --mdc-list-list-item-hover-state-layer-color: white;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.08;\n  --mdc-list-list-item-focus-state-layer-color: white;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.24;\n}\n\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-one-line-container-height: 48px;\n  --mdc-list-list-item-two-line-container-height: 64px;\n  --mdc-list-list-item-three-line-container-height: 88px;\n}\n\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line[_ngcontent-%COMP%] {\n  height: 56px;\n}\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-font: Roboto;\n  --mdc-list-list-item-label-text-line-height: 24px;\n  --mdc-list-list-item-label-text-size: 17px;\n  --mdc-list-list-item-label-text-tracking: 0.0179em;\n  --mdc-list-list-item-label-text-weight: 500;\n  --mdc-list-list-item-supporting-text-font: Roboto;\n  --mdc-list-list-item-supporting-text-line-height: 20px;\n  --mdc-list-list-item-supporting-text-size: 15px;\n  --mdc-list-list-item-supporting-text-tracking: 0.0179em;\n  --mdc-list-list-item-supporting-text-weight: 400;\n  --mdc-list-list-item-trailing-supporting-text-font: Roboto;\n  --mdc-list-list-item-trailing-supporting-text-line-height: 14px;\n  --mdc-list-list-item-trailing-supporting-text-size: 13px;\n  --mdc-list-list-item-trailing-supporting-text-tracking: 0.0893em;\n  --mdc-list-list-item-trailing-supporting-text-weight: 500;\n}\n\n.mdc-list-group__subheader[_ngcontent-%COMP%] {\n  font: 400 16px / 28px Roboto;\n  letter-spacing: 0.0094em;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: #424242;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n  border-right: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 40px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 20px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -26.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-paginator-container[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n\n.mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n\n.mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mat-mdc-tab-header[_ngcontent-%COMP%]   .mdc-tab[_ngcontent-%COMP%] {\n  height: 48px;\n}\n\n.mdc-tab[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fff;\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n\n.mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%] {\n  padding: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  margin: calc((var(--mdc-checkbox-touch-target-size, 40px) - 40px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__background[_ngcontent-%COMP%] {\n  top: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  left: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  right: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  left: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  width: var(--mdc-checkbox-touch-target-size, 40px);\n  height: var(--mdc-checkbox-touch-target-size, 40px);\n}\n\n@media all and (-ms-high-contrast: none) {\n  .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__focus-ring[_ngcontent-%COMP%] {\n    display: none;\n  }\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fff;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-text-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #424242;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-filled-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #424242;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-elevation: 0;\n}\n\n.mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fff;\n}\n.mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-button[_ngcontent-%COMP%], .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n\n.mat-mdc-raised-button[_ngcontent-%COMP%], .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-raised-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  height: 36px;\n}\n\n.mdc-button[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n\n.mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-icon-button-disabled-icon-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 48px;\n  max-width: 48px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  margin-right: 4px;\n  margin-left: 4px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 48px;\n   \n  left: 50%;\n  width: 48px;\n  transform: translate(-50%, -50%);\n}\n\n.mat-mdc-fab[_ngcontent-%COMP%], .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #424242;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-fab-icon-color: rgba(255, 255, 255, 0.5);\n  --mat-mdc-fab-color: rgba(255, 255, 255, 0.5);\n}\n\n.mdc-fab--extended[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: rgba(0, 0, 0, 0.87);\n  --mdc-snackbar-container-color: #d9d9d9;\n  --mdc-snackbar-supporting-text-color: rgba(66, 66, 66, 0.87);\n}\n\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mdc-snackbar-supporting-text-font: Roboto;\n  --mdc-snackbar-supporting-text-line-height: 20px;\n  --mdc-snackbar-supporting-text-size: 15px;\n  --mdc-snackbar-supporting-text-weight: 400;\n}\n\n.mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n}\n\n.mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n\n.mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__cell[_ngcontent-%COMP%], .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mdc-data-table__pagination-total[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-table[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  min-height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__header-row[_ngcontent-%COMP%] {\n  height: 56px;\n}\n\n.mdc-data-table__content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n\n.mat-badge[_ngcontent-%COMP%] {\n  position: relative;\n}\n\n.mat-badge.mat-badge[_ngcontent-%COMP%] {\n  overflow: visible;\n}\n\n.mat-badge-hidden[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n\n.ng-animate-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%], .mat-badge-content._mat-animation-noopable[_ngcontent-%COMP%] {\n  transition: none;\n}\n\n.mat-badge-content.mat-badge-active[_ngcontent-%COMP%] {\n  transform: none;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -8px;\n}\n\n.mat-badge-medium[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -11px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -14px;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n\n.mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n\n.mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #6e6e6e;\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, sans-serif;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 9px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 24px;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n  background: #424242;\n}\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: white;\n}\n\n.mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #595959;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #595959;\n}\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #595959;\n}\n\n.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #212121;\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n  background-color: black;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: #424242;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #595959;\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-label-content[_ngcontent-%COMP%] {\n  line-height: 48px;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: white;\n}\n\n.mat-datepicker-toggle[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(255, 255, 255, 0.12);\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%], .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-calendar-body-cell-content[_ngcontent-%COMP%], .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: white;\n  border-color: transparent;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.24);\n}\n\n.mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n\n.mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n\n.mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n\n.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n\n.mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n\n.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n\n@media (hover: hover) {\n  .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: #424242;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n\n.mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  padding: 8px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  margin-right: 0px;\n  margin-left: 0px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 40px;\n   \n  left: 50%;\n  width: 40px;\n  transform: translate(-50%, -50%);\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mat-mdc-button-touch-target[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-calendar[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-body[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-calendar-body-label[_ngcontent-%COMP%], .mat-calendar-period-button[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\n  font-size: 11px;\n  font-weight: 400;\n}\n\n.mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%] {\n  background: #424242;\n  color: white;\n}\n.mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n\n@media (hover: none) {\n  .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: #424242;\n  }\n}\n.mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-expansion-panel-header-description[_ngcontent-%COMP%], .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n}\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  font-family: Roboto;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-expansion-panel-content[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-grid-tile-header[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%] {\n  font-size: 15px;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%] {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2), .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2) {\n  font-size: 13px;\n}\n\n.mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-drawer[_ngcontent-%COMP%] {\n  background-color: #424242;\n  color: white;\n}\n.mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n.mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n\n.mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(189, 189, 189, 0.6);\n}\n\n.mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n.mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.7);\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-stepper-horizontal[_ngcontent-%COMP%], .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%], .mat-vertical-stepper-header[_ngcontent-%COMP%] {\n  padding: 24px 24px;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  top: -16px;\n  bottom: -16px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before {\n  top: 36px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  top: 36px;\n}\n\n.mat-stepper-vertical[_ngcontent-%COMP%], .mat-stepper-horizontal[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-step-label[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-step-sub-label-error[_ngcontent-%COMP%] {\n  font-weight: normal;\n}\n\n.mat-step-label-error[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mat-step-label-selected[_ngcontent-%COMP%] {\n  font-size: 17px;\n  font-weight: 500;\n}\n\n.mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #c6c6c6;\n}\n\n.mat-toolbar[_ngcontent-%COMP%] {\n  background: #212121;\n  color: white;\n}\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n\n.mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n  min-height: 64px;\n}\n\n.mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n    min-height: 56px;\n  }\n  .mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n    height: 56px;\n  }\n}\n.mat-toolbar[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%] {\n  font: 500 20px / 32px Roboto;\n  letter-spacing: 0.0075em;\n  margin: 0;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-tree-node[_ngcontent-%COMP%] {\n  min-height: 48px;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  font-weight: 400;\n  font-size: 15px;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-app-background[_ngcontent-%COMP%], .theme-alternate.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z0[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z1[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z2[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z3[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z4[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z5[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z6[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z7[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z8[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z9[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z10[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z11[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z12[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z13[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z14[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z15[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z16[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z17[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z18[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z19[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z20[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z21[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z22[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z23[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z24[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: whitesmoke;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.42);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.06);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: white;\n  --mdc-dialog-with-divider-divider-color: rgba(0, 0, 0, 0.12);\n  --mdc-dialog-subhead-color: rgba(0, 0, 0, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #e0e0e0;\n  --mdc-chip-elevated-disabled-container-color: #e0e0e0;\n  --mdc-chip-label-text-color: #212121;\n  --mdc-chip-disabled-label-text-color: #212121;\n  --mdc-chip-with-icon-icon-color: #212121;\n  --mdc-chip-with-icon-disabled-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #212121;\n  --mdc-chip-with-icon-selected-icon-color: #212121;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #424242;\n  --mdc-switch-disabled-unselected-handle-color: #424242;\n  --mdc-switch-disabled-selected-track-color: #424242;\n  --mdc-switch-disabled-unselected-track-color: #424242;\n  --mdc-switch-unselected-focus-state-layer-color: #424242;\n  --mdc-switch-unselected-pressed-state-layer-color: #424242;\n  --mdc-switch-unselected-hover-state-layer-color: #424242;\n  --mdc-switch-unselected-focus-track-color: #e0e0e0;\n  --mdc-switch-unselected-hover-track-color: #e0e0e0;\n  --mdc-switch-unselected-pressed-track-color: #e0e0e0;\n  --mdc-switch-unselected-track-color: #e0e0e0;\n  --mdc-switch-unselected-focus-handle-color: #212121;\n  --mdc-switch-unselected-hover-handle-color: #212121;\n  --mdc-switch-unselected-pressed-handle-color: #212121;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #616161;\n  --mdc-switch-selected-icon-color: #fff;\n  --mdc-switch-disabled-selected-icon-color: #fff;\n  --mdc-switch-disabled-unselected-icon-color: #fff;\n  --mdc-switch-unselected-icon-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: black;\n  --mdc-slider-label-label-text-color: white;\n  --mdc-slider-disabled-handle-color: #000;\n  --mdc-slider-disabled-active-track-color: #000;\n  --mdc-slider-disabled-inactive-track-color: #000;\n  --mdc-slider-with-tick-marks-disabled-container-color: #000;\n  --mat-mdc-slider-value-indicator-opacity: 0.6;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, 0.54);\n  --mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-disabled-label-text-color: black;\n  --mdc-list-list-item-disabled-leading-icon-color: black;\n  --mdc-list-list-item-disabled-trailing-icon-color: black;\n  --mdc-list-list-item-hover-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-focus-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-state-layer-color: black;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.04;\n  --mdc-list-list-item-focus-state-layer-color: black;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-text-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fff;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-filled-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fff;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-elevation: 0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fff;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-fab-icon-color: rgba(0, 0, 0, 0.38);\n  --mat-mdc-fab-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: #1bfae4;\n  --mdc-snackbar-container-color: #333333;\n  --mdc-snackbar-supporting-text-color: rgba(255, 255, 255, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-total[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-table[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #bdbdbd;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell-content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.24);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: white;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%] {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #757575;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree-node[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-raised-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%] {\n  padding: 0 1.15em;\n  margin: 0 0.65em;\n  min-width: 3em;\n  line-height: 36.4px;\n}\n\n.mat-standard-chip[_ngcontent-%COMP%] {\n  padding: 0.5em 0.85em;\n  min-height: 2.5em;\n}\n\n.material-icons[_ngcontent-%COMP%] {\n  font-size: 24px;\n  font-family: \"Material Icons\", \"Material Icons\";\n}\n.material-icons[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-family: \"Roboto\";\n}\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n[_nghost-%COMP%] {\n  display: block;\n  height: 100%;\n}\n\nmain[_ngcontent-%COMP%] {\n  min-width: 100vw;\n  min-height: 100vh;\n}\n\n.multiline-tooltip[_ngcontent-%COMP%] {\n  white-space: pre-line;\n}\n\n.spacer[_ngcontent-%COMP%] {\n  flex: 1 1 auto;\n}\n\n\n.row[_ngcontent-%COMP%] {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-left: -15px;\n  margin-right: -15px;\n  margin-left: -15px;\n  \n}\n.row[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%] {\n  flex-basis: 0;\n  flex-grow: 1;\n  max-width: 100%;\n  position: relative;\n  width: 100%;\n  min-height: 1px;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-bottom: 1em;\n}\n\n.loading-shade[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 56px;\n  right: 0;\n  background: rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.loading-shade.all[_ngcontent-%COMP%] {\n  bottom: 0;\n}\n\n[_nghost-%COMP%] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  padding: 2em;\n}\n\n.master[_ngcontent-%COMP%] {\n  box-sizing: border-box;\n  padding: 1.5em;\n  width: clamp(300px, 95%, 1200px);\n  min-width: 200px;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  border-radius: 6px;\n  background-color: #3d3d3d;\n}\n.master[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\n  box-sizing: border-box;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n.master[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\n  width: 100%;\n}\n.master[_ngcontent-%COMP%]   .submit-col[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n.master[_ngcontent-%COMP%]   .submit-col[_ngcontent-%COMP%]   .submit-btn[_ngcontent-%COMP%] {\n  text-align: center;\n}\n\n.help-btn[_ngcontent-%COMP%] {\n  margin-left: 0.5em;\n  display: none;\n}\n.help-btn.show[_ngcontent-%COMP%] {\n  display: block;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */", "@import url(https://fonts.googleapis.com/icon?family=Material+Icons);@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 900[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 100[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 900&display=swap\u00CF)[_ngcontent-%COMP%];@charset \"UTF-8\";\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\nbody[_ngcontent-%COMP%] {\n  --primary-color: #fa1b31;\n  --primary-lighter-color: #f66d73;\n  --primary-darker-color: #cd0014;\n  --text-primary-color: #ffffff;\n  --text-primary-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-primary-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --accent-color: #1bfae4;\n  --accent-lighter-color: #d9fefa;\n  --accent-darker-color: #00bd95;\n  --text-accent-color: #ffffff;\n  --text-accent-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-accent-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --warn-color: #ff0000;\n  --warn-lighter-color: #ffb3b3;\n  --warn-darker-color: #ff0000;\n  --text-warn-color: #ffffff;\n  --text-warn-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-warn-darker-color: #ffffff;\n}\n\n.mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #686868;\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #686868;\n}\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #686868;\n}\n\n.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-elevation-z0[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n}\n\n.mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #424242;\n}\n\n.mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #595959;\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-mdc-card-title[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-headline6-font-size, 20px);\n  line-height: var(--mdc-typography-headline6-line-height, 32px);\n  font-weight: var(--mdc-typography-headline6-font-weight, 500);\n  letter-spacing: var(--mdc-typography-headline6-letter-spacing, 0.0075em);\n  -webkit-text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n  text-transform: var(--mdc-typography-headline6-text-transform, none);\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n.mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-supporting-text-font: Roboto;\n  --mdc-plain-tooltip-supporting-text-size: 13px;\n  --mdc-plain-tooltip-supporting-text-weight: 500;\n  --mdc-plain-tooltip-supporting-text-tracking: 0.0893em;\n}\n\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n.mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(255, 255, 255, 0.87));\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.08);\n}\n.mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.24);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: #4a4a4a;\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.42);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.06);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #464646;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.08;\n}\n\n.mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.24;\n}\n\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%]:disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n\n.mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 28px;\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -34.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 24px;\n  padding-bottom: 8px;\n}\n\n.mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mdc-text-field__input[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n.mdc-text-field__affix[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--textarea[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  line-height: 1.5rem;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-subscript-wrapper[_ngcontent-%COMP%], .mat-mdc-form-field-bottom-align[_ngcontent-%COMP%]::before {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%], .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: calc(17px * var(--mat-mdc-form-field-floating-label-scale, 0.75));\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-select[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-autocomplete-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: #424242;\n  --mdc-dialog-with-divider-divider-color: rgba(255, 255, 255, 0.12);\n  --mdc-dialog-subhead-color: rgba(255, 255, 255, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-subhead-font: Roboto;\n  --mdc-dialog-subhead-line-height: 32px;\n  --mdc-dialog-subhead-size: 20px;\n  --mdc-dialog-subhead-weight: 500;\n  --mdc-dialog-subhead-tracking: 0.0075em;\n  --mdc-dialog-supporting-text-font: Roboto;\n  --mdc-dialog-supporting-text-line-height: 24px;\n  --mdc-dialog-supporting-text-size: 17px;\n  --mdc-dialog-supporting-text-weight: 500;\n  --mdc-dialog-supporting-text-tracking: 0.0179em;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #595959;\n  --mdc-chip-elevated-disabled-container-color: #595959;\n  --mdc-chip-label-text-color: #fafafa;\n  --mdc-chip-disabled-label-text-color: #fafafa;\n  --mdc-chip-with-icon-icon-color: #fafafa;\n  --mdc-chip-with-icon-disabled-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #fafafa;\n  --mdc-chip-with-icon-selected-icon-color: #fafafa;\n}\n.mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n\n.mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: white;\n}\n\n.mat-mdc-chip[_ngcontent-%COMP%] {\n  height: 32px;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #000;\n  --mdc-switch-disabled-unselected-handle-color: #000;\n  --mdc-switch-disabled-selected-track-color: #f5f5f5;\n  --mdc-switch-disabled-unselected-track-color: #f5f5f5;\n  --mdc-switch-unselected-focus-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-pressed-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-hover-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-focus-track-color: #616161;\n  --mdc-switch-unselected-hover-track-color: #616161;\n  --mdc-switch-unselected-pressed-track-color: #616161;\n  --mdc-switch-unselected-track-color: #616161;\n  --mdc-switch-unselected-focus-handle-color: #fafafa;\n  --mdc-switch-unselected-hover-handle-color: #fafafa;\n  --mdc-switch-unselected-pressed-handle-color: #fafafa;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #9e9e9e;\n  --mdc-switch-selected-icon-color: #212121;\n  --mdc-switch-disabled-selected-icon-color: #212121;\n  --mdc-switch-disabled-unselected-icon-color: #212121;\n  --mdc-switch-unselected-icon-color: #212121;\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-slide-toggle.mat-primary[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #fb979b;\n  --mdc-switch-selected-hover-handle-color: #fb979b;\n  --mdc-switch-selected-pressed-handle-color: #fb979b;\n}\n.mat-mdc-slide-toggle.mat-accent[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #1bfae4;\n  --mdc-switch-selected-hover-handle-color: #1bfae4;\n  --mdc-switch-selected-pressed-handle-color: #1bfae4;\n}\n.mat-mdc-slide-toggle.mat-warn[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: red;\n  --mdc-switch-selected-hover-handle-color: red;\n  --mdc-switch-selected-pressed-handle-color: red;\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-state-layer-size: 48px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%] {\n  padding: calc((40px - 20px) / 2);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__background[_ngcontent-%COMP%]::before {\n  top: calc(-1 * (40px - 20px) / 2);\n  left: calc(-1 * (40px - 20px) / 2);\n  width: 40px;\n  height: 40px;\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - 40px) / 2);\n  right: calc((40px - 40px) / 2);\n  left: calc((40px - 40px) / 2);\n  width: 40px;\n  height: 40px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: white;\n  --mdc-slider-label-label-text-color: black;\n  --mdc-slider-disabled-handle-color: #fff;\n  --mdc-slider-disabled-active-track-color: #fff;\n  --mdc-slider-disabled-inactive-track-color: #fff;\n  --mdc-slider-with-tick-marks-disabled-container-color: #fff;\n  --mat-mdc-slider-value-indicator-opacity: 0.9;\n}\n.mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-label-text-font: Roboto;\n  --mdc-slider-label-label-text-size: 14px;\n  --mdc-slider-label-label-text-line-height: 24px;\n  --mdc-slider-label-label-text-tracking: 0.0067em;\n  --mdc-slider-label-label-text-weight: 500;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-mdc-menu-content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n.mat-mdc-menu-content[_ngcontent-%COMP%], .mat-mdc-menu-content[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: white;\n  --mdc-list-list-item-supporting-text-color: rgba(255, 255, 255, 0.7);\n  --mdc-list-list-item-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-disabled-label-text-color: white;\n  --mdc-list-list-item-disabled-leading-icon-color: white;\n  --mdc-list-list-item-disabled-trailing-icon-color: white;\n  --mdc-list-list-item-hover-label-text-color: white;\n  --mdc-list-list-item-hover-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-focus-label-text-color: white;\n  --mdc-list-list-item-hover-state-layer-color: white;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.08;\n  --mdc-list-list-item-focus-state-layer-color: white;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.24;\n}\n\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-one-line-container-height: 48px;\n  --mdc-list-list-item-two-line-container-height: 64px;\n  --mdc-list-list-item-three-line-container-height: 88px;\n}\n\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line[_ngcontent-%COMP%] {\n  height: 56px;\n}\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-font: Roboto;\n  --mdc-list-list-item-label-text-line-height: 24px;\n  --mdc-list-list-item-label-text-size: 17px;\n  --mdc-list-list-item-label-text-tracking: 0.0179em;\n  --mdc-list-list-item-label-text-weight: 500;\n  --mdc-list-list-item-supporting-text-font: Roboto;\n  --mdc-list-list-item-supporting-text-line-height: 20px;\n  --mdc-list-list-item-supporting-text-size: 15px;\n  --mdc-list-list-item-supporting-text-tracking: 0.0179em;\n  --mdc-list-list-item-supporting-text-weight: 400;\n  --mdc-list-list-item-trailing-supporting-text-font: Roboto;\n  --mdc-list-list-item-trailing-supporting-text-line-height: 14px;\n  --mdc-list-list-item-trailing-supporting-text-size: 13px;\n  --mdc-list-list-item-trailing-supporting-text-tracking: 0.0893em;\n  --mdc-list-list-item-trailing-supporting-text-weight: 500;\n}\n\n.mdc-list-group__subheader[_ngcontent-%COMP%] {\n  font: 400 16px / 28px Roboto;\n  letter-spacing: 0.0094em;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: #424242;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n  border-right: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 40px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 20px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -26.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-paginator-container[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n\n.mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n\n.mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mat-mdc-tab-header[_ngcontent-%COMP%]   .mdc-tab[_ngcontent-%COMP%] {\n  height: 48px;\n}\n\n.mdc-tab[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fff;\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n\n.mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%] {\n  padding: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  margin: calc((var(--mdc-checkbox-touch-target-size, 40px) - 40px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__background[_ngcontent-%COMP%] {\n  top: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  left: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  right: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  left: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  width: var(--mdc-checkbox-touch-target-size, 40px);\n  height: var(--mdc-checkbox-touch-target-size, 40px);\n}\n\n@media all and (-ms-high-contrast: none) {\n  .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__focus-ring[_ngcontent-%COMP%] {\n    display: none;\n  }\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fff;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-text-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #424242;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-filled-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #424242;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-elevation: 0;\n}\n\n.mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fff;\n}\n.mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-button[_ngcontent-%COMP%], .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n\n.mat-mdc-raised-button[_ngcontent-%COMP%], .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-raised-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  height: 36px;\n}\n\n.mdc-button[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n\n.mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-icon-button-disabled-icon-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 48px;\n  max-width: 48px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  margin-right: 4px;\n  margin-left: 4px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 48px;\n   \n  left: 50%;\n  width: 48px;\n  transform: translate(-50%, -50%);\n}\n\n.mat-mdc-fab[_ngcontent-%COMP%], .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #424242;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-fab-icon-color: rgba(255, 255, 255, 0.5);\n  --mat-mdc-fab-color: rgba(255, 255, 255, 0.5);\n}\n\n.mdc-fab--extended[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: rgba(0, 0, 0, 0.87);\n  --mdc-snackbar-container-color: #d9d9d9;\n  --mdc-snackbar-supporting-text-color: rgba(66, 66, 66, 0.87);\n}\n\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mdc-snackbar-supporting-text-font: Roboto;\n  --mdc-snackbar-supporting-text-line-height: 20px;\n  --mdc-snackbar-supporting-text-size: 15px;\n  --mdc-snackbar-supporting-text-weight: 400;\n}\n\n.mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n}\n\n.mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n\n.mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__cell[_ngcontent-%COMP%], .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mdc-data-table__pagination-total[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-table[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  min-height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__header-row[_ngcontent-%COMP%] {\n  height: 56px;\n}\n\n.mdc-data-table__content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n\n.mat-badge[_ngcontent-%COMP%] {\n  position: relative;\n}\n\n.mat-badge.mat-badge[_ngcontent-%COMP%] {\n  overflow: visible;\n}\n\n.mat-badge-hidden[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n\n.ng-animate-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%], .mat-badge-content._mat-animation-noopable[_ngcontent-%COMP%] {\n  transition: none;\n}\n\n.mat-badge-content.mat-badge-active[_ngcontent-%COMP%] {\n  transform: none;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -8px;\n}\n\n.mat-badge-medium[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -11px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -14px;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n\n.mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n\n.mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #6e6e6e;\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, sans-serif;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 9px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 24px;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n  background: #424242;\n}\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: white;\n}\n\n.mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #595959;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #595959;\n}\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #595959;\n}\n\n.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #212121;\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n  background-color: black;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: #424242;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #595959;\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-label-content[_ngcontent-%COMP%] {\n  line-height: 48px;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: white;\n}\n\n.mat-datepicker-toggle[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(255, 255, 255, 0.12);\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%], .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-calendar-body-cell-content[_ngcontent-%COMP%], .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: white;\n  border-color: transparent;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.24);\n}\n\n.mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n\n.mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n\n.mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n\n.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n\n.mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n\n.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n\n@media (hover: hover) {\n  .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: #424242;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n\n.mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  padding: 8px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  margin-right: 0px;\n  margin-left: 0px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 40px;\n   \n  left: 50%;\n  width: 40px;\n  transform: translate(-50%, -50%);\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mat-mdc-button-touch-target[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-calendar[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-body[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-calendar-body-label[_ngcontent-%COMP%], .mat-calendar-period-button[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\n  font-size: 11px;\n  font-weight: 400;\n}\n\n.mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%] {\n  background: #424242;\n  color: white;\n}\n.mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n\n@media (hover: none) {\n  .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: #424242;\n  }\n}\n.mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-expansion-panel-header-description[_ngcontent-%COMP%], .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n}\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  font-family: Roboto;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-expansion-panel-content[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-grid-tile-header[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%] {\n  font-size: 15px;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%] {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2), .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2) {\n  font-size: 13px;\n}\n\n.mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-drawer[_ngcontent-%COMP%] {\n  background-color: #424242;\n  color: white;\n}\n.mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n.mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n\n.mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(189, 189, 189, 0.6);\n}\n\n.mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n.mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.7);\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-stepper-horizontal[_ngcontent-%COMP%], .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%], .mat-vertical-stepper-header[_ngcontent-%COMP%] {\n  padding: 24px 24px;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  top: -16px;\n  bottom: -16px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before {\n  top: 36px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  top: 36px;\n}\n\n.mat-stepper-vertical[_ngcontent-%COMP%], .mat-stepper-horizontal[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-step-label[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-step-sub-label-error[_ngcontent-%COMP%] {\n  font-weight: normal;\n}\n\n.mat-step-label-error[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mat-step-label-selected[_ngcontent-%COMP%] {\n  font-size: 17px;\n  font-weight: 500;\n}\n\n.mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #c6c6c6;\n}\n\n.mat-toolbar[_ngcontent-%COMP%] {\n  background: #212121;\n  color: white;\n}\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n\n.mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n  min-height: 64px;\n}\n\n.mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n    min-height: 56px;\n  }\n  .mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n    height: 56px;\n  }\n}\n.mat-toolbar[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%] {\n  font: 500 20px / 32px Roboto;\n  letter-spacing: 0.0075em;\n  margin: 0;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-tree-node[_ngcontent-%COMP%] {\n  min-height: 48px;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  font-weight: 400;\n  font-size: 15px;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-app-background[_ngcontent-%COMP%], .theme-alternate.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z0[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z1[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z2[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z3[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z4[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z5[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z6[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z7[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z8[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z9[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z10[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z11[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z12[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z13[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z14[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z15[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z16[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z17[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z18[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z19[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z20[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z21[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z22[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z23[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z24[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: whitesmoke;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.42);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.06);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: white;\n  --mdc-dialog-with-divider-divider-color: rgba(0, 0, 0, 0.12);\n  --mdc-dialog-subhead-color: rgba(0, 0, 0, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #e0e0e0;\n  --mdc-chip-elevated-disabled-container-color: #e0e0e0;\n  --mdc-chip-label-text-color: #212121;\n  --mdc-chip-disabled-label-text-color: #212121;\n  --mdc-chip-with-icon-icon-color: #212121;\n  --mdc-chip-with-icon-disabled-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #212121;\n  --mdc-chip-with-icon-selected-icon-color: #212121;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #424242;\n  --mdc-switch-disabled-unselected-handle-color: #424242;\n  --mdc-switch-disabled-selected-track-color: #424242;\n  --mdc-switch-disabled-unselected-track-color: #424242;\n  --mdc-switch-unselected-focus-state-layer-color: #424242;\n  --mdc-switch-unselected-pressed-state-layer-color: #424242;\n  --mdc-switch-unselected-hover-state-layer-color: #424242;\n  --mdc-switch-unselected-focus-track-color: #e0e0e0;\n  --mdc-switch-unselected-hover-track-color: #e0e0e0;\n  --mdc-switch-unselected-pressed-track-color: #e0e0e0;\n  --mdc-switch-unselected-track-color: #e0e0e0;\n  --mdc-switch-unselected-focus-handle-color: #212121;\n  --mdc-switch-unselected-hover-handle-color: #212121;\n  --mdc-switch-unselected-pressed-handle-color: #212121;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #616161;\n  --mdc-switch-selected-icon-color: #fff;\n  --mdc-switch-disabled-selected-icon-color: #fff;\n  --mdc-switch-disabled-unselected-icon-color: #fff;\n  --mdc-switch-unselected-icon-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: black;\n  --mdc-slider-label-label-text-color: white;\n  --mdc-slider-disabled-handle-color: #000;\n  --mdc-slider-disabled-active-track-color: #000;\n  --mdc-slider-disabled-inactive-track-color: #000;\n  --mdc-slider-with-tick-marks-disabled-container-color: #000;\n  --mat-mdc-slider-value-indicator-opacity: 0.6;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, 0.54);\n  --mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-disabled-label-text-color: black;\n  --mdc-list-list-item-disabled-leading-icon-color: black;\n  --mdc-list-list-item-disabled-trailing-icon-color: black;\n  --mdc-list-list-item-hover-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-focus-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-state-layer-color: black;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.04;\n  --mdc-list-list-item-focus-state-layer-color: black;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-text-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fff;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-filled-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fff;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-elevation: 0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fff;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-fab-icon-color: rgba(0, 0, 0, 0.38);\n  --mat-mdc-fab-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: #1bfae4;\n  --mdc-snackbar-container-color: #333333;\n  --mdc-snackbar-supporting-text-color: rgba(255, 255, 255, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-total[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-table[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #bdbdbd;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell-content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.24);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: white;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%] {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #757575;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree-node[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-raised-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%] {\n  padding: 0 1.15em;\n  margin: 0 0.65em;\n  min-width: 3em;\n  line-height: 36.4px;\n}\n\n.mat-standard-chip[_ngcontent-%COMP%] {\n  padding: 0.5em 0.85em;\n  min-height: 2.5em;\n}\n\n.material-icons[_ngcontent-%COMP%] {\n  font-size: 24px;\n  font-family: \"Material Icons\", \"Material Icons\";\n}\n.material-icons[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-family: \"Roboto\";\n}\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n[_nghost-%COMP%] {\n  display: block;\n  height: 100%;\n}\n\nmain[_ngcontent-%COMP%] {\n  min-width: 100vw;\n  min-height: 100vh;\n}\n\n.multiline-tooltip[_ngcontent-%COMP%] {\n  white-space: pre-line;\n}\n\n.spacer[_ngcontent-%COMP%] {\n  flex: 1 1 auto;\n}\n\n\n.row[_ngcontent-%COMP%] {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-left: -15px;\n  margin-right: -15px;\n  margin-left: -15px;\n  \n}\n.row[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%] {\n  flex-basis: 0;\n  flex-grow: 1;\n  max-width: 100%;\n  position: relative;\n  width: 100%;\n  min-height: 1px;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-bottom: 1em;\n}\n\n.loading-shade[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 56px;\n  right: 0;\n  background: rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.loading-shade.all[_ngcontent-%COMP%] {\n  bottom: 0;\n}\n\n.actions[_ngcontent-%COMP%] {\n  width: 150px;\n}\n\n.workouts[_ngcontent-%COMP%] {\n  padding: 0.5em !important;\n  margin-bottom: 1em;\n}\n\n.exercises-table[_ngcontent-%COMP%] {\n  margin: 1em 0;\n}\n\ntr.exercise-detail-row[_ngcontent-%COMP%] {\n  height: 0 !important;\n}\n\ntr.exercise-table-row[_ngcontent-%COMP%]:not(.example-expanded-row):active {\n  background: #efefef;\n}\n\n.exercise-table-row[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\n  border-bottom-width: 0;\n}\n\n.content-exercise-details[_ngcontent-%COMP%] {\n  overflow: hidden;\n  display: flex;\n}\n\n.exepanded-details[_ngcontent-%COMP%] {\n  padding: 0em;\n}\n\n.mat-column-expandedDetail[_ngcontent-%COMP%] {\n  padding: 0;\n}\n\n.config[_ngcontent-%COMP%] {\n  width: 100%;\n  padding: 0.5em;\n  margin: 0.5em;\n  background-color: #4a4a4a;\n}\n.config[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%] {\n  text-align: center;\n}\n.config[_ngcontent-%COMP%]   .col.subtitle[_ngcontent-%COMP%] {\n  text-align: left;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"],
  data: {
    animation: [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_24__.trigger)('detailExpand', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_24__.state)('collapsed', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_24__.style)({
      height: '0px',
      minHeight: '0'
    })), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_24__.state)('expanded', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_24__.style)({
      height: '*'
    })), (0,_angular_animations__WEBPACK_IMPORTED_MODULE_24__.transition)('expanded <=> collapsed', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_24__.animate)('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))])]
  }
});

/***/ }),

/***/ 7768:
/*!*******************************************************************!*\
  !*** ./src/app/pages/exercise-set/exercise-set-routing.module.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExerciseSetRoutingModule": () => (/* binding */ ExerciseSetRoutingModule)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ 7067);
/* harmony import */ var _exercise_set_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exercise-set.component */ 6121);
/* harmony import */ var _exercise_set_details_exercise_set_details_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./exercise-set-details/exercise-set-details.component */ 3400);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 2560);





const routes = [{
  path: '',
  component: _exercise_set_component__WEBPACK_IMPORTED_MODULE_0__.ExerciseSetComponent
}, {
  path: ':id',
  component: _exercise_set_details_exercise_set_details_component__WEBPACK_IMPORTED_MODULE_1__.ExerciseSetDetailsComponent
}];
class ExerciseSetRoutingModule {}
ExerciseSetRoutingModule.ɵfac = function ExerciseSetRoutingModule_Factory(t) {
  return new (t || ExerciseSetRoutingModule)();
};
ExerciseSetRoutingModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
  type: ExerciseSetRoutingModule
});
ExerciseSetRoutingModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
  imports: [_angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule.forChild(routes), _angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule]
});
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](ExerciseSetRoutingModule, {
    imports: [_angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule],
    exports: [_angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule]
  });
})();

/***/ }),

/***/ 6121:
/*!**************************************************************!*\
  !*** ./src/app/pages/exercise-set/exercise-set.component.ts ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExerciseSetComponent": () => (/* binding */ ExerciseSetComponent)
/* harmony export */ });
/* harmony import */ var src_app_core_classes_master_table_class__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/core/classes/master-table.class */ 5535);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 7067);
/* harmony import */ var src_app_services_exercise_set_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/services/exercise-set.service */ 5251);
/* harmony import */ var src_app_services_loading_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/services/loading.service */ 4471);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/button */ 4522);
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/icon */ 7822);
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/input */ 8562);
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/form-field */ 5074);
/* harmony import */ var _core_shared_components_master_table_master_table_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/shared/components/master-table/master-table.component */ 7729);










const _c0 = ["masterTable"];
class ExerciseSetComponent extends src_app_core_classes_master_table_class__WEBPACK_IMPORTED_MODULE_0__.MasterTable {
  constructor(router, exerciseSetService, loadingService) {
    const data = {
      title: 'Exercise Set',
      targetFilters: ['Name', 'Category'],
      columns: [{
        name: 'id',
        title: 'ID'
      }, {
        name: 'name',
        title: 'Name'
      }, {
        name: 'category',
        title: 'Category'
      }
      // { name: 'description', title: 'Description' },
      ],

      path: '/exercise-set'
    };
    super(router, exerciseSetService, data, loadingService);
    this.exerciseSetService = exerciseSetService;
  }
}
ExerciseSetComponent.ɵfac = function ExerciseSetComponent_Factory(t) {
  return new (t || ExerciseSetComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_5__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_app_services_exercise_set_service__WEBPACK_IMPORTED_MODULE_1__.ExerciseSetService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_app_services_loading_service__WEBPACK_IMPORTED_MODULE_2__.LoadingService));
};
ExerciseSetComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: ExerciseSetComponent,
  selectors: [["app-exercise-set"]],
  viewQuery: function ExerciseSetComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵviewQuery"](_c0, 5);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵloadQuery"]()) && (ctx.masterTable = _t.first);
    }
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵInheritDefinitionFeature"]],
  decls: 19,
  vars: 5,
  consts: [[1, "master", "mat-elevation-z2"], [1, "header-content"], [1, "title"], ["mat-raised-button", "", "color", "accent", 3, "click"], [1, ""], [1, "filter-content"], ["appearance", "outline"], ["matInput", "", "placeholder", "Filtre aqui", 3, "input"], ["matPrefix", ""], ["functionName", "getByFilter", 3, "columns", "service", "filterChange$", "edit$", "delete$", "changeTable$"], ["masterTable", ""]],
  template: function ExerciseSetComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "section", 0)(1, "div", 1)(2, "h2", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](4, "button", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function ExerciseSetComponent_Template_button_click_4_listener() {
        return ctx.add();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "mat-icon", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](6, "add");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](7, " Add ");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](8, "div", 5)(9, "mat-form-field", 6)(10, "mat-label");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](11, "Filtrar");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](12, "input", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("input", function ExerciseSetComponent_Template_input_input_12_listener($event) {
        return ctx.changeFilter($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](13, "mat-icon", 8);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](14, "search");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](15, "mat-hint");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](16);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()()();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](17, "app-master-table", 9, 10);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("edit$", function ExerciseSetComponent_Template_app_master_table_edit__17_listener($event) {
        return ctx.edit($event);
      })("delete$", function ExerciseSetComponent_Template_app_master_table_delete__17_listener($event) {
        return ctx.delete($event);
      })("changeTable$", function ExerciseSetComponent_Template_app_master_table_changeTable__17_listener($event) {
        return ctx.changeTable($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate"](ctx.title);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](13);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"]("Filtre por ", ctx.targetFilters.join(", "), "");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("columns", ctx.columns)("service", ctx.exerciseSetService)("filterChange$", ctx.filterChange$);
    }
  },
  dependencies: [_angular_material_button__WEBPACK_IMPORTED_MODULE_6__.MatButton, _angular_material_icon__WEBPACK_IMPORTED_MODULE_7__.MatIcon, _angular_material_input__WEBPACK_IMPORTED_MODULE_8__.MatInput, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__.MatFormField, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__.MatLabel, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__.MatHint, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__.MatPrefix, _core_shared_components_master_table_master_table_component__WEBPACK_IMPORTED_MODULE_3__.MasterTableComponent],
  styles: ["@import url(https://fonts.googleapis.com/icon?family=Material+Icons);@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 900[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 100[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 900&display=swap\u00CF)[_ngcontent-%COMP%];@charset \"UTF-8\";\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\nbody[_ngcontent-%COMP%] {\n  --primary-color: #fa1b31;\n  --primary-lighter-color: #f66d73;\n  --primary-darker-color: #cd0014;\n  --text-primary-color: #ffffff;\n  --text-primary-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-primary-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --accent-color: #1bfae4;\n  --accent-lighter-color: #d9fefa;\n  --accent-darker-color: #00bd95;\n  --text-accent-color: #ffffff;\n  --text-accent-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-accent-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --warn-color: #ff0000;\n  --warn-lighter-color: #ffb3b3;\n  --warn-darker-color: #ff0000;\n  --text-warn-color: #ffffff;\n  --text-warn-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-warn-darker-color: #ffffff;\n}\n\n.mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #686868;\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #686868;\n}\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #686868;\n}\n\n.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-elevation-z0[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n}\n\n.mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #424242;\n}\n\n.mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #595959;\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-mdc-card-title[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-headline6-font-size, 20px);\n  line-height: var(--mdc-typography-headline6-line-height, 32px);\n  font-weight: var(--mdc-typography-headline6-font-weight, 500);\n  letter-spacing: var(--mdc-typography-headline6-letter-spacing, 0.0075em);\n  -webkit-text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n  text-transform: var(--mdc-typography-headline6-text-transform, none);\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n.mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-supporting-text-font: Roboto;\n  --mdc-plain-tooltip-supporting-text-size: 13px;\n  --mdc-plain-tooltip-supporting-text-weight: 500;\n  --mdc-plain-tooltip-supporting-text-tracking: 0.0893em;\n}\n\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n.mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(255, 255, 255, 0.87));\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.08);\n}\n.mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.24);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: #4a4a4a;\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.42);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.06);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #464646;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.08;\n}\n\n.mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.24;\n}\n\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%]:disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n\n.mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 28px;\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -34.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 24px;\n  padding-bottom: 8px;\n}\n\n.mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mdc-text-field__input[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n.mdc-text-field__affix[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--textarea[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  line-height: 1.5rem;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-subscript-wrapper[_ngcontent-%COMP%], .mat-mdc-form-field-bottom-align[_ngcontent-%COMP%]::before {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%], .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: calc(17px * var(--mat-mdc-form-field-floating-label-scale, 0.75));\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-select[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-autocomplete-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: #424242;\n  --mdc-dialog-with-divider-divider-color: rgba(255, 255, 255, 0.12);\n  --mdc-dialog-subhead-color: rgba(255, 255, 255, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-subhead-font: Roboto;\n  --mdc-dialog-subhead-line-height: 32px;\n  --mdc-dialog-subhead-size: 20px;\n  --mdc-dialog-subhead-weight: 500;\n  --mdc-dialog-subhead-tracking: 0.0075em;\n  --mdc-dialog-supporting-text-font: Roboto;\n  --mdc-dialog-supporting-text-line-height: 24px;\n  --mdc-dialog-supporting-text-size: 17px;\n  --mdc-dialog-supporting-text-weight: 500;\n  --mdc-dialog-supporting-text-tracking: 0.0179em;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #595959;\n  --mdc-chip-elevated-disabled-container-color: #595959;\n  --mdc-chip-label-text-color: #fafafa;\n  --mdc-chip-disabled-label-text-color: #fafafa;\n  --mdc-chip-with-icon-icon-color: #fafafa;\n  --mdc-chip-with-icon-disabled-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #fafafa;\n  --mdc-chip-with-icon-selected-icon-color: #fafafa;\n}\n.mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n\n.mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: white;\n}\n\n.mat-mdc-chip[_ngcontent-%COMP%] {\n  height: 32px;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #000;\n  --mdc-switch-disabled-unselected-handle-color: #000;\n  --mdc-switch-disabled-selected-track-color: #f5f5f5;\n  --mdc-switch-disabled-unselected-track-color: #f5f5f5;\n  --mdc-switch-unselected-focus-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-pressed-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-hover-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-focus-track-color: #616161;\n  --mdc-switch-unselected-hover-track-color: #616161;\n  --mdc-switch-unselected-pressed-track-color: #616161;\n  --mdc-switch-unselected-track-color: #616161;\n  --mdc-switch-unselected-focus-handle-color: #fafafa;\n  --mdc-switch-unselected-hover-handle-color: #fafafa;\n  --mdc-switch-unselected-pressed-handle-color: #fafafa;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #9e9e9e;\n  --mdc-switch-selected-icon-color: #212121;\n  --mdc-switch-disabled-selected-icon-color: #212121;\n  --mdc-switch-disabled-unselected-icon-color: #212121;\n  --mdc-switch-unselected-icon-color: #212121;\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-slide-toggle.mat-primary[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #fb979b;\n  --mdc-switch-selected-hover-handle-color: #fb979b;\n  --mdc-switch-selected-pressed-handle-color: #fb979b;\n}\n.mat-mdc-slide-toggle.mat-accent[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #1bfae4;\n  --mdc-switch-selected-hover-handle-color: #1bfae4;\n  --mdc-switch-selected-pressed-handle-color: #1bfae4;\n}\n.mat-mdc-slide-toggle.mat-warn[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: red;\n  --mdc-switch-selected-hover-handle-color: red;\n  --mdc-switch-selected-pressed-handle-color: red;\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-state-layer-size: 48px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%] {\n  padding: calc((40px - 20px) / 2);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__background[_ngcontent-%COMP%]::before {\n  top: calc(-1 * (40px - 20px) / 2);\n  left: calc(-1 * (40px - 20px) / 2);\n  width: 40px;\n  height: 40px;\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - 40px) / 2);\n  right: calc((40px - 40px) / 2);\n  left: calc((40px - 40px) / 2);\n  width: 40px;\n  height: 40px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: white;\n  --mdc-slider-label-label-text-color: black;\n  --mdc-slider-disabled-handle-color: #fff;\n  --mdc-slider-disabled-active-track-color: #fff;\n  --mdc-slider-disabled-inactive-track-color: #fff;\n  --mdc-slider-with-tick-marks-disabled-container-color: #fff;\n  --mat-mdc-slider-value-indicator-opacity: 0.9;\n}\n.mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-label-text-font: Roboto;\n  --mdc-slider-label-label-text-size: 14px;\n  --mdc-slider-label-label-text-line-height: 24px;\n  --mdc-slider-label-label-text-tracking: 0.0067em;\n  --mdc-slider-label-label-text-weight: 500;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-mdc-menu-content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n.mat-mdc-menu-content[_ngcontent-%COMP%], .mat-mdc-menu-content[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: white;\n  --mdc-list-list-item-supporting-text-color: rgba(255, 255, 255, 0.7);\n  --mdc-list-list-item-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-disabled-label-text-color: white;\n  --mdc-list-list-item-disabled-leading-icon-color: white;\n  --mdc-list-list-item-disabled-trailing-icon-color: white;\n  --mdc-list-list-item-hover-label-text-color: white;\n  --mdc-list-list-item-hover-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-focus-label-text-color: white;\n  --mdc-list-list-item-hover-state-layer-color: white;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.08;\n  --mdc-list-list-item-focus-state-layer-color: white;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.24;\n}\n\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-one-line-container-height: 48px;\n  --mdc-list-list-item-two-line-container-height: 64px;\n  --mdc-list-list-item-three-line-container-height: 88px;\n}\n\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line[_ngcontent-%COMP%] {\n  height: 56px;\n}\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-font: Roboto;\n  --mdc-list-list-item-label-text-line-height: 24px;\n  --mdc-list-list-item-label-text-size: 17px;\n  --mdc-list-list-item-label-text-tracking: 0.0179em;\n  --mdc-list-list-item-label-text-weight: 500;\n  --mdc-list-list-item-supporting-text-font: Roboto;\n  --mdc-list-list-item-supporting-text-line-height: 20px;\n  --mdc-list-list-item-supporting-text-size: 15px;\n  --mdc-list-list-item-supporting-text-tracking: 0.0179em;\n  --mdc-list-list-item-supporting-text-weight: 400;\n  --mdc-list-list-item-trailing-supporting-text-font: Roboto;\n  --mdc-list-list-item-trailing-supporting-text-line-height: 14px;\n  --mdc-list-list-item-trailing-supporting-text-size: 13px;\n  --mdc-list-list-item-trailing-supporting-text-tracking: 0.0893em;\n  --mdc-list-list-item-trailing-supporting-text-weight: 500;\n}\n\n.mdc-list-group__subheader[_ngcontent-%COMP%] {\n  font: 400 16px / 28px Roboto;\n  letter-spacing: 0.0094em;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: #424242;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n  border-right: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 40px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 20px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -26.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-paginator-container[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n\n.mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n\n.mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mat-mdc-tab-header[_ngcontent-%COMP%]   .mdc-tab[_ngcontent-%COMP%] {\n  height: 48px;\n}\n\n.mdc-tab[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fff;\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n\n.mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%] {\n  padding: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  margin: calc((var(--mdc-checkbox-touch-target-size, 40px) - 40px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__background[_ngcontent-%COMP%] {\n  top: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  left: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  right: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  left: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  width: var(--mdc-checkbox-touch-target-size, 40px);\n  height: var(--mdc-checkbox-touch-target-size, 40px);\n}\n\n@media all and (-ms-high-contrast: none) {\n  .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__focus-ring[_ngcontent-%COMP%] {\n    display: none;\n  }\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fff;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-text-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #424242;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-filled-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #424242;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-elevation: 0;\n}\n\n.mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fff;\n}\n.mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-button[_ngcontent-%COMP%], .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n\n.mat-mdc-raised-button[_ngcontent-%COMP%], .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-raised-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  height: 36px;\n}\n\n.mdc-button[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n\n.mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-icon-button-disabled-icon-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 48px;\n  max-width: 48px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  margin-right: 4px;\n  margin-left: 4px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 48px;\n   \n  left: 50%;\n  width: 48px;\n  transform: translate(-50%, -50%);\n}\n\n.mat-mdc-fab[_ngcontent-%COMP%], .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #424242;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-fab-icon-color: rgba(255, 255, 255, 0.5);\n  --mat-mdc-fab-color: rgba(255, 255, 255, 0.5);\n}\n\n.mdc-fab--extended[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: rgba(0, 0, 0, 0.87);\n  --mdc-snackbar-container-color: #d9d9d9;\n  --mdc-snackbar-supporting-text-color: rgba(66, 66, 66, 0.87);\n}\n\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mdc-snackbar-supporting-text-font: Roboto;\n  --mdc-snackbar-supporting-text-line-height: 20px;\n  --mdc-snackbar-supporting-text-size: 15px;\n  --mdc-snackbar-supporting-text-weight: 400;\n}\n\n.mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n}\n\n.mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n\n.mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__cell[_ngcontent-%COMP%], .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mdc-data-table__pagination-total[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-table[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  min-height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__header-row[_ngcontent-%COMP%] {\n  height: 56px;\n}\n\n.mdc-data-table__content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n\n.mat-badge[_ngcontent-%COMP%] {\n  position: relative;\n}\n\n.mat-badge.mat-badge[_ngcontent-%COMP%] {\n  overflow: visible;\n}\n\n.mat-badge-hidden[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n\n.ng-animate-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%], .mat-badge-content._mat-animation-noopable[_ngcontent-%COMP%] {\n  transition: none;\n}\n\n.mat-badge-content.mat-badge-active[_ngcontent-%COMP%] {\n  transform: none;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -8px;\n}\n\n.mat-badge-medium[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -11px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -14px;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n\n.mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n\n.mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #6e6e6e;\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, sans-serif;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 9px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 24px;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n  background: #424242;\n}\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: white;\n}\n\n.mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #595959;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #595959;\n}\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #595959;\n}\n\n.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #212121;\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n  background-color: black;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: #424242;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #595959;\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-label-content[_ngcontent-%COMP%] {\n  line-height: 48px;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: white;\n}\n\n.mat-datepicker-toggle[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(255, 255, 255, 0.12);\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%], .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-calendar-body-cell-content[_ngcontent-%COMP%], .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: white;\n  border-color: transparent;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.24);\n}\n\n.mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n\n.mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n\n.mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n\n.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n\n.mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n\n.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n\n@media (hover: hover) {\n  .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: #424242;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n\n.mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  padding: 8px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  margin-right: 0px;\n  margin-left: 0px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 40px;\n   \n  left: 50%;\n  width: 40px;\n  transform: translate(-50%, -50%);\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mat-mdc-button-touch-target[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-calendar[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-body[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-calendar-body-label[_ngcontent-%COMP%], .mat-calendar-period-button[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\n  font-size: 11px;\n  font-weight: 400;\n}\n\n.mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%] {\n  background: #424242;\n  color: white;\n}\n.mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n\n@media (hover: none) {\n  .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: #424242;\n  }\n}\n.mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-expansion-panel-header-description[_ngcontent-%COMP%], .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n}\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  font-family: Roboto;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-expansion-panel-content[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-grid-tile-header[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%] {\n  font-size: 15px;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%] {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2), .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2) {\n  font-size: 13px;\n}\n\n.mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-drawer[_ngcontent-%COMP%] {\n  background-color: #424242;\n  color: white;\n}\n.mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n.mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n\n.mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(189, 189, 189, 0.6);\n}\n\n.mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n.mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.7);\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-stepper-horizontal[_ngcontent-%COMP%], .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%], .mat-vertical-stepper-header[_ngcontent-%COMP%] {\n  padding: 24px 24px;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  top: -16px;\n  bottom: -16px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before {\n  top: 36px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  top: 36px;\n}\n\n.mat-stepper-vertical[_ngcontent-%COMP%], .mat-stepper-horizontal[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-step-label[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-step-sub-label-error[_ngcontent-%COMP%] {\n  font-weight: normal;\n}\n\n.mat-step-label-error[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mat-step-label-selected[_ngcontent-%COMP%] {\n  font-size: 17px;\n  font-weight: 500;\n}\n\n.mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #c6c6c6;\n}\n\n.mat-toolbar[_ngcontent-%COMP%] {\n  background: #212121;\n  color: white;\n}\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n\n.mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n  min-height: 64px;\n}\n\n.mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n    min-height: 56px;\n  }\n  .mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n    height: 56px;\n  }\n}\n.mat-toolbar[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%] {\n  font: 500 20px / 32px Roboto;\n  letter-spacing: 0.0075em;\n  margin: 0;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-tree-node[_ngcontent-%COMP%] {\n  min-height: 48px;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  font-weight: 400;\n  font-size: 15px;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-app-background[_ngcontent-%COMP%], .theme-alternate.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z0[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z1[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z2[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z3[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z4[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z5[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z6[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z7[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z8[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z9[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z10[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z11[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z12[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z13[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z14[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z15[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z16[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z17[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z18[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z19[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z20[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z21[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z22[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z23[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z24[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: whitesmoke;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.42);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.06);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: white;\n  --mdc-dialog-with-divider-divider-color: rgba(0, 0, 0, 0.12);\n  --mdc-dialog-subhead-color: rgba(0, 0, 0, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #e0e0e0;\n  --mdc-chip-elevated-disabled-container-color: #e0e0e0;\n  --mdc-chip-label-text-color: #212121;\n  --mdc-chip-disabled-label-text-color: #212121;\n  --mdc-chip-with-icon-icon-color: #212121;\n  --mdc-chip-with-icon-disabled-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #212121;\n  --mdc-chip-with-icon-selected-icon-color: #212121;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #424242;\n  --mdc-switch-disabled-unselected-handle-color: #424242;\n  --mdc-switch-disabled-selected-track-color: #424242;\n  --mdc-switch-disabled-unselected-track-color: #424242;\n  --mdc-switch-unselected-focus-state-layer-color: #424242;\n  --mdc-switch-unselected-pressed-state-layer-color: #424242;\n  --mdc-switch-unselected-hover-state-layer-color: #424242;\n  --mdc-switch-unselected-focus-track-color: #e0e0e0;\n  --mdc-switch-unselected-hover-track-color: #e0e0e0;\n  --mdc-switch-unselected-pressed-track-color: #e0e0e0;\n  --mdc-switch-unselected-track-color: #e0e0e0;\n  --mdc-switch-unselected-focus-handle-color: #212121;\n  --mdc-switch-unselected-hover-handle-color: #212121;\n  --mdc-switch-unselected-pressed-handle-color: #212121;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #616161;\n  --mdc-switch-selected-icon-color: #fff;\n  --mdc-switch-disabled-selected-icon-color: #fff;\n  --mdc-switch-disabled-unselected-icon-color: #fff;\n  --mdc-switch-unselected-icon-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: black;\n  --mdc-slider-label-label-text-color: white;\n  --mdc-slider-disabled-handle-color: #000;\n  --mdc-slider-disabled-active-track-color: #000;\n  --mdc-slider-disabled-inactive-track-color: #000;\n  --mdc-slider-with-tick-marks-disabled-container-color: #000;\n  --mat-mdc-slider-value-indicator-opacity: 0.6;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, 0.54);\n  --mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-disabled-label-text-color: black;\n  --mdc-list-list-item-disabled-leading-icon-color: black;\n  --mdc-list-list-item-disabled-trailing-icon-color: black;\n  --mdc-list-list-item-hover-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-focus-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-state-layer-color: black;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.04;\n  --mdc-list-list-item-focus-state-layer-color: black;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-text-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fff;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-filled-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fff;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-elevation: 0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fff;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-fab-icon-color: rgba(0, 0, 0, 0.38);\n  --mat-mdc-fab-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: #1bfae4;\n  --mdc-snackbar-container-color: #333333;\n  --mdc-snackbar-supporting-text-color: rgba(255, 255, 255, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-total[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-table[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #bdbdbd;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell-content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.24);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: white;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%] {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #757575;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree-node[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-raised-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%] {\n  padding: 0 1.15em;\n  margin: 0 0.65em;\n  min-width: 3em;\n  line-height: 36.4px;\n}\n\n.mat-standard-chip[_ngcontent-%COMP%] {\n  padding: 0.5em 0.85em;\n  min-height: 2.5em;\n}\n\n.material-icons[_ngcontent-%COMP%] {\n  font-size: 24px;\n  font-family: \"Material Icons\", \"Material Icons\";\n}\n.material-icons[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-family: \"Roboto\";\n}\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n[_nghost-%COMP%] {\n  display: block;\n  height: 100%;\n}\n\nmain[_ngcontent-%COMP%] {\n  min-width: 100vw;\n  min-height: 100vh;\n}\n\n.multiline-tooltip[_ngcontent-%COMP%] {\n  white-space: pre-line;\n}\n\n.spacer[_ngcontent-%COMP%] {\n  flex: 1 1 auto;\n}\n\n\n.row[_ngcontent-%COMP%] {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-left: -15px;\n  margin-right: -15px;\n  margin-left: -15px;\n  \n}\n.row[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%] {\n  flex-basis: 0;\n  flex-grow: 1;\n  max-width: 100%;\n  position: relative;\n  width: 100%;\n  min-height: 1px;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-bottom: 1em;\n}\n\n.loading-shade[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 56px;\n  right: 0;\n  background: rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.loading-shade.all[_ngcontent-%COMP%] {\n  bottom: 0;\n}\n\n[_nghost-%COMP%] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  padding: 2em;\n}\n\n.master[_ngcontent-%COMP%] {\n  box-sizing: border-box;\n  padding: 0.5em;\n  width: clamp(300px, 90%, 1100px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  border-radius: 6px;\n  background-color: #3d3d3d;\n}\n.master[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%] {\n  box-sizing: border-box;\n  width: 80%;\n  min-width: 250px;\n  padding: 0.5em 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n.master[_ngcontent-%COMP%]   .header-content[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\n  font-size: 1.5em;\n  margin: 0;\n  font-weight: 500;\n  color: #ffffff;\n}\n.master[_ngcontent-%COMP%]   .filter-content[_ngcontent-%COMP%] {\n  box-sizing: border-box;\n  width: 80%;\n  min-width: 250px;\n  padding: 0.5em 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n.master[_ngcontent-%COMP%]   .filter-content[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\n  width: 100%;\n  min-width: 200px;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */", "\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
});

/***/ }),

/***/ 6291:
/*!***********************************************************!*\
  !*** ./src/app/pages/exercise-set/exercise-set.module.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExerciseSetModule": () => (/* binding */ ExerciseSetModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _exercise_set_routing_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exercise-set-routing.module */ 7768);
/* harmony import */ var _exercise_set_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./exercise-set.component */ 6121);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/forms */ 2508);
/* harmony import */ var ngx_mask__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-mask */ 446);
/* harmony import */ var src_app_core_material_bundle_material_bundle_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/core/material-bundle/material-bundle.module */ 6118);
/* harmony import */ var src_app_core_shared_components_components_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/core/shared/components/components.module */ 5970);
/* harmony import */ var src_app_core_shared_directives_driven_forms_directives_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/core/shared/directives/driven-forms-directives.module */ 4836);
/* harmony import */ var _exercise_set_details_exercise_set_details_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./exercise-set-details/exercise-set-details.component */ 3400);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 2560);










class ExerciseSetModule {}
ExerciseSetModule.ɵfac = function ExerciseSetModule_Factory(t) {
  return new (t || ExerciseSetModule)();
};
ExerciseSetModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineNgModule"]({
  type: ExerciseSetModule
});
ExerciseSetModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjector"]({
  providers: [(0,ngx_mask__WEBPACK_IMPORTED_MODULE_7__.provideNgxMask)()],
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.CommonModule, _exercise_set_routing_module__WEBPACK_IMPORTED_MODULE_0__.ExerciseSetRoutingModule, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.ReactiveFormsModule, src_app_core_shared_directives_driven_forms_directives_module__WEBPACK_IMPORTED_MODULE_4__.DrivenFormsDirectivesModule, src_app_core_material_bundle_material_bundle_module__WEBPACK_IMPORTED_MODULE_2__.MaterialBundleModule, src_app_core_shared_components_components_module__WEBPACK_IMPORTED_MODULE_3__.ComponentsModule]
});
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsetNgModuleScope"](ExerciseSetModule, {
    declarations: [_exercise_set_component__WEBPACK_IMPORTED_MODULE_1__.ExerciseSetComponent, _exercise_set_details_exercise_set_details_component__WEBPACK_IMPORTED_MODULE_5__.ExerciseSetDetailsComponent],
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.CommonModule, _exercise_set_routing_module__WEBPACK_IMPORTED_MODULE_0__.ExerciseSetRoutingModule, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.FormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_9__.ReactiveFormsModule, src_app_core_shared_directives_driven_forms_directives_module__WEBPACK_IMPORTED_MODULE_4__.DrivenFormsDirectivesModule, src_app_core_material_bundle_material_bundle_module__WEBPACK_IMPORTED_MODULE_2__.MaterialBundleModule, src_app_core_shared_components_components_module__WEBPACK_IMPORTED_MODULE_3__.ComponentsModule, ngx_mask__WEBPACK_IMPORTED_MODULE_7__.NgxMaskDirective, ngx_mask__WEBPACK_IMPORTED_MODULE_7__.NgxMaskPipe]
  });
})();

/***/ }),

/***/ 3764:
/*!************************************************************!*\
  !*** ./src/app/services/exercise-configuration.service.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExerciseConfigurationService": () => (/* binding */ ExerciseConfigurationService)
/* harmony export */ });
/* harmony import */ var _base_model_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-model.service */ 7594);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 8987);



class ExerciseConfigurationService extends _base_model_service__WEBPACK_IMPORTED_MODULE_0__.BaseModelService {
  constructor(http) {
    super('/exercise-configurations', http);
  }
  updateListExerciseMethod(exerciseConfigurations) {
    const req = this.http.patch(`${this.path}/update-list`, exerciseConfigurations);
    return this.request(req);
  }
}
ExerciseConfigurationService.ɵfac = function ExerciseConfigurationService_Factory(t) {
  return new (t || ExerciseConfigurationService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient));
};
ExerciseConfigurationService.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
  token: ExerciseConfigurationService,
  factory: ExerciseConfigurationService.ɵfac,
  providedIn: 'root'
});

/***/ }),

/***/ 3613:
/*!*****************************************************!*\
  !*** ./src/app/services/exercise-method.service.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ExerciseMethodService": () => (/* binding */ ExerciseMethodService)
/* harmony export */ });
/* harmony import */ var _base_model_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-model.service */ 7594);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 8987);



class ExerciseMethodService extends _base_model_service__WEBPACK_IMPORTED_MODULE_0__.BaseModelService {
  constructor(http) {
    super('/exercise-method', http);
  }
}
ExerciseMethodService.ɵfac = function ExerciseMethodService_Factory(t) {
  return new (t || ExerciseMethodService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient));
};
ExerciseMethodService.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
  token: ExerciseMethodService,
  factory: ExerciseMethodService.ɵfac,
  providedIn: 'root'
});

/***/ })

}]);
//# sourceMappingURL=src_app_pages_exercise-set_exercise-set_module_ts.js.map
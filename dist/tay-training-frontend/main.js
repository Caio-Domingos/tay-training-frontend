"use strict";
(self["webpackChunktay_training_frontend"] = self["webpackChunktay_training_frontend"] || []).push([["main"],{

/***/ 158:
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppRoutingModule": () => (/* binding */ AppRoutingModule)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ 7067);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 2560);



const routes = [{
  path: '',
  redirectTo: 'home',
  pathMatch: 'full'
}, {
  path: 'login',
  loadChildren: () => __webpack_require__.e(/*! import() */ "src_app_pages_login_login_module_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./pages/login/login.module */ 1053)).then(m => m.LoginModule)
}, {
  path: 'home',
  loadChildren: () => __webpack_require__.e(/*! import() */ "src_app_pages_home_home_module_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./pages/home/home.module */ 7994)).then(m => m.HomeModule)
}, {
  path: 'master-details',
  loadChildren: () => Promise.all(/*! import() */[__webpack_require__.e("default-src_app_core_classes_control_class_ts-src_app_core_classes_master-table_class_ts-src_-6c57d9"), __webpack_require__.e("src_app_pages_master-details_master-details_module_ts")]).then(__webpack_require__.bind(__webpack_require__, /*! ./pages/master-details/master-details.module */ 8839)).then(m => m.MasterDetailsModule)
}, {
  path: 'exercises',
  loadChildren: () => Promise.all(/*! import() */[__webpack_require__.e("default-src_app_core_classes_control_class_ts-src_app_core_classes_master-table_class_ts-src_-6c57d9"), __webpack_require__.e("common"), __webpack_require__.e("src_app_pages_exercises_exercises_module_ts")]).then(__webpack_require__.bind(__webpack_require__, /*! ./pages/exercises/exercises.module */ 7429)).then(m => m.ExercisesModule)
}, {
  path: 'workouts',
  loadChildren: () => Promise.all(/*! import() */[__webpack_require__.e("default-src_app_core_classes_control_class_ts-src_app_core_classes_master-table_class_ts-src_-6c57d9"), __webpack_require__.e("common"), __webpack_require__.e("src_app_pages_workouts_workouts_module_ts")]).then(__webpack_require__.bind(__webpack_require__, /*! ./pages/workouts/workouts.module */ 9978)).then(m => m.WorkoutsModule)
}, {
  path: 'methods',
  loadChildren: () => Promise.all(/*! import() */[__webpack_require__.e("default-src_app_core_classes_control_class_ts-src_app_core_classes_master-table_class_ts-src_-6c57d9"), __webpack_require__.e("common"), __webpack_require__.e("src_app_pages_methods_methods_module_ts")]).then(__webpack_require__.bind(__webpack_require__, /*! ./pages/methods/methods.module */ 264)).then(m => m.MethodsModule)
}, {
  path: 'exercise-set',
  loadChildren: () => Promise.all(/*! import() */[__webpack_require__.e("default-src_app_core_classes_control_class_ts-src_app_core_classes_master-table_class_ts-src_-6c57d9"), __webpack_require__.e("common"), __webpack_require__.e("src_app_pages_exercise-set_exercise-set_module_ts")]).then(__webpack_require__.bind(__webpack_require__, /*! ./pages/exercise-set/exercise-set.module */ 6291)).then(m => m.ExerciseSetModule)
}];
class AppRoutingModule {}
AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {
  return new (t || AppRoutingModule)();
};
AppRoutingModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: AppRoutingModule
});
AppRoutingModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__.RouterModule.forRoot(routes), _angular_router__WEBPACK_IMPORTED_MODULE_1__.RouterModule]
});
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](AppRoutingModule, {
    imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__.RouterModule],
    exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__.RouterModule]
  });
})();

/***/ }),

/***/ 5041:
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppComponent": () => (/* binding */ AppComponent)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ 7067);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _services_loading_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services/loading.service */ 4471);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/sidenav */ 6643);
/* harmony import */ var _core_shared_components_header_header_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core/shared/components/header/header.component */ 4080);
/* harmony import */ var _core_shared_components_side_menu_side_menu_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/shared/components/side-menu/side-menu.component */ 5020);








function AppComponent_ng_container_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](1, "router-outlet");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementContainerEnd"]();
  }
}
function AppComponent_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "main")(2, "mat-drawer-container", 1)(3, "mat-drawer", 2, 3)(5, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](6, "app-side-menu", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](7, "mat-drawer-content")(8, "app-header", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("toggleMenu", function AppComponent_ng_container_1_Template_app_header_toggleMenu_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4);
      const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](4);
      return _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵresetView"](_r2.toggle());
    })("goToProfile", function AppComponent_ng_container_1_Template_app_header_goToProfile_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4);
      const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵresetView"](ctx_r5.goToProfile());
    })("logout", function AppComponent_ng_container_1_Template_app_header_logout_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r4);
      const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵresetView"](ctx_r6.logout());
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](9, "router-outlet");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()()();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("hasBackdrop", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("atualRoute", ctx_r1.atualRoute);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("title", ctx_r1.headerTitle)("showMenuBtn", true);
  }
}
class AppComponent {
  constructor(router, loadingService) {
    this.router = router;
    this.loadingService = loadingService;
    this.routesWithSideBar = ['/', '/home', '/master-details', '/exercises', '/workouts', '/methods', '/exercise-set'];
    this.pageTitles = {
      '/home': 'Home',
      '/master-details': {
        '/': 'Lista de itens',
        '/new': 'Novo item',
        default: 'Detalhes do item'
      },
      '/exercises': {
        '/': 'Lista de Exercícios',
        '/new': 'Novo exercício',
        default: 'Detalhes do exercício'
      },
      '/workouts': {
        '/': 'Lista de Treinos',
        '/new': 'Novo treino',
        default: 'Detalhes do treino'
      },
      '/methods': {
        '/': 'Lista de Métodos',
        '/new': 'Novo método',
        default: 'Detalhes do método'
      },
      '/exercise-set': {
        '/': 'Lista de Conj. de Exercícios',
        '/new': 'Novo conj. de exercícios',
        default: 'Detalhes do conj. de exercícios'
      },
      '/': 'Home'
    };
    this.showSideBar = false;
    this.headerTitle = 'Meu aplicativo';
    this.atualRoute = '/';
    this.monitoreRouteChanges();
  }
  monitoreRouteChanges() {
    this.router.events.subscribe(val => {
      if (val instanceof _angular_router__WEBPACK_IMPORTED_MODULE_4__.NavigationEnd) {
        console.log('Rota alterada', val.url);
        this.loadingService.deactiveLoading();
        this.atualRoute = val.url;
        this.showSideBar = this.routesWithSideBar.filter(e => e !== '/').filter(e => val.url.includes(e)).length > 0 || this.routesWithSideBar.includes(val.url);
        this.headerTitle = this.getHeaderTitle(val.url);
      }
    });
  }
  getHeaderTitle(url) {
    const titlePageSearched = Object.entries(this.pageTitles).find(e => url.includes(e[0]));
    if (!titlePageSearched) {
      return 'Meu App';
    }
    const [baseUrl, titles] = titlePageSearched;
    if (titlePageSearched && typeof titles === 'string') {
      return titles;
    } else if (titlePageSearched && typeof titles === 'object') {
      const atualUrlSplited = url.split(baseUrl);
      const [_, id] = atualUrlSplited;
      if (id === '') {
        return titles['/'];
      } else if (titles[id]) {
        return titles[id];
      } else {
        return titles['default'];
      }
    } else {
      return 'Meu App';
    }
  }
  goToProfile() {
    console.log('Ir para o perfil');
  }
  logout() {
    console.log('Fazer logout');
  }
}
AppComponent.ɵfac = function AppComponent_Factory(t) {
  return new (t || AppComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_4__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_services_loading_service__WEBPACK_IMPORTED_MODULE_0__.LoadingService));
};
AppComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({
  type: AppComponent,
  selectors: [["app-root"]],
  decls: 2,
  vars: 2,
  consts: [[4, "ngIf"], [1, "drawer-container", 3, "hasBackdrop"], ["mode", "side", "opened", ""], ["drawer", ""], [1, "side-menu"], [3, "atualRoute"], [3, "title", "showMenuBtn", "toggleMenu", "goToProfile", "logout"]],
  template: function AppComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](0, AppComponent_ng_container_0_Template, 2, 0, "ng-container", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, AppComponent_ng_container_1_Template, 10, 4, "ng-container", 0);
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", !ctx.showSideBar);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", ctx.showSideBar);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _angular_router__WEBPACK_IMPORTED_MODULE_4__.RouterOutlet, _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_6__.MatDrawer, _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_6__.MatDrawerContainer, _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_6__.MatDrawerContent, _core_shared_components_header_header_component__WEBPACK_IMPORTED_MODULE_1__.HeaderComponent, _core_shared_components_side_menu_side_menu_component__WEBPACK_IMPORTED_MODULE_2__.SideMenuComponent],
  styles: ["@import url(https://fonts.googleapis.com/icon?family=Material+Icons);@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 900[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 100[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 900&display=swap\u00CF)[_ngcontent-%COMP%];@charset \"UTF-8\";\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\nbody[_ngcontent-%COMP%] {\n  --primary-color: #fa1b31;\n  --primary-lighter-color: #f66d73;\n  --primary-darker-color: #cd0014;\n  --text-primary-color: #ffffff;\n  --text-primary-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-primary-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --accent-color: #1bfae4;\n  --accent-lighter-color: #d9fefa;\n  --accent-darker-color: #00bd95;\n  --text-accent-color: #ffffff;\n  --text-accent-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-accent-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --warn-color: #ff0000;\n  --warn-lighter-color: #ffb3b3;\n  --warn-darker-color: #ff0000;\n  --text-warn-color: #ffffff;\n  --text-warn-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-warn-darker-color: #ffffff;\n}\n\n.mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #686868;\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #686868;\n}\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #686868;\n}\n\n.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-elevation-z0[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n}\n\n.mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #424242;\n}\n\n.mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #595959;\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-mdc-card-title[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-headline6-font-size, 20px);\n  line-height: var(--mdc-typography-headline6-line-height, 32px);\n  font-weight: var(--mdc-typography-headline6-font-weight, 500);\n  letter-spacing: var(--mdc-typography-headline6-letter-spacing, 0.0075em);\n  -webkit-text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n  text-transform: var(--mdc-typography-headline6-text-transform, none);\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n.mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-supporting-text-font: Roboto;\n  --mdc-plain-tooltip-supporting-text-size: 13px;\n  --mdc-plain-tooltip-supporting-text-weight: 500;\n  --mdc-plain-tooltip-supporting-text-tracking: 0.0893em;\n}\n\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n.mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(255, 255, 255, 0.87));\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.08);\n}\n.mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.24);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: #4a4a4a;\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.42);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.06);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #464646;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.08;\n}\n\n.mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.24;\n}\n\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%]:disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n\n.mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 28px;\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -34.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 24px;\n  padding-bottom: 8px;\n}\n\n.mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mdc-text-field__input[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n.mdc-text-field__affix[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--textarea[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  line-height: 1.5rem;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-subscript-wrapper[_ngcontent-%COMP%], .mat-mdc-form-field-bottom-align[_ngcontent-%COMP%]::before {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%], .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: calc(17px * var(--mat-mdc-form-field-floating-label-scale, 0.75));\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-select[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-autocomplete-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: #424242;\n  --mdc-dialog-with-divider-divider-color: rgba(255, 255, 255, 0.12);\n  --mdc-dialog-subhead-color: rgba(255, 255, 255, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-subhead-font: Roboto;\n  --mdc-dialog-subhead-line-height: 32px;\n  --mdc-dialog-subhead-size: 20px;\n  --mdc-dialog-subhead-weight: 500;\n  --mdc-dialog-subhead-tracking: 0.0075em;\n  --mdc-dialog-supporting-text-font: Roboto;\n  --mdc-dialog-supporting-text-line-height: 24px;\n  --mdc-dialog-supporting-text-size: 17px;\n  --mdc-dialog-supporting-text-weight: 500;\n  --mdc-dialog-supporting-text-tracking: 0.0179em;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #595959;\n  --mdc-chip-elevated-disabled-container-color: #595959;\n  --mdc-chip-label-text-color: #fafafa;\n  --mdc-chip-disabled-label-text-color: #fafafa;\n  --mdc-chip-with-icon-icon-color: #fafafa;\n  --mdc-chip-with-icon-disabled-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #fafafa;\n  --mdc-chip-with-icon-selected-icon-color: #fafafa;\n}\n.mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n\n.mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: white;\n}\n\n.mat-mdc-chip[_ngcontent-%COMP%] {\n  height: 32px;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #000;\n  --mdc-switch-disabled-unselected-handle-color: #000;\n  --mdc-switch-disabled-selected-track-color: #f5f5f5;\n  --mdc-switch-disabled-unselected-track-color: #f5f5f5;\n  --mdc-switch-unselected-focus-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-pressed-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-hover-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-focus-track-color: #616161;\n  --mdc-switch-unselected-hover-track-color: #616161;\n  --mdc-switch-unselected-pressed-track-color: #616161;\n  --mdc-switch-unselected-track-color: #616161;\n  --mdc-switch-unselected-focus-handle-color: #fafafa;\n  --mdc-switch-unselected-hover-handle-color: #fafafa;\n  --mdc-switch-unselected-pressed-handle-color: #fafafa;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #9e9e9e;\n  --mdc-switch-selected-icon-color: #212121;\n  --mdc-switch-disabled-selected-icon-color: #212121;\n  --mdc-switch-disabled-unselected-icon-color: #212121;\n  --mdc-switch-unselected-icon-color: #212121;\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-slide-toggle.mat-primary[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #fb979b;\n  --mdc-switch-selected-hover-handle-color: #fb979b;\n  --mdc-switch-selected-pressed-handle-color: #fb979b;\n}\n.mat-mdc-slide-toggle.mat-accent[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #1bfae4;\n  --mdc-switch-selected-hover-handle-color: #1bfae4;\n  --mdc-switch-selected-pressed-handle-color: #1bfae4;\n}\n.mat-mdc-slide-toggle.mat-warn[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: red;\n  --mdc-switch-selected-hover-handle-color: red;\n  --mdc-switch-selected-pressed-handle-color: red;\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-state-layer-size: 48px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%] {\n  padding: calc((40px - 20px) / 2);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__background[_ngcontent-%COMP%]::before {\n  top: calc(-1 * (40px - 20px) / 2);\n  left: calc(-1 * (40px - 20px) / 2);\n  width: 40px;\n  height: 40px;\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - 40px) / 2);\n  right: calc((40px - 40px) / 2);\n  left: calc((40px - 40px) / 2);\n  width: 40px;\n  height: 40px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: white;\n  --mdc-slider-label-label-text-color: black;\n  --mdc-slider-disabled-handle-color: #fff;\n  --mdc-slider-disabled-active-track-color: #fff;\n  --mdc-slider-disabled-inactive-track-color: #fff;\n  --mdc-slider-with-tick-marks-disabled-container-color: #fff;\n  --mat-mdc-slider-value-indicator-opacity: 0.9;\n}\n.mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-label-text-font: Roboto;\n  --mdc-slider-label-label-text-size: 14px;\n  --mdc-slider-label-label-text-line-height: 24px;\n  --mdc-slider-label-label-text-tracking: 0.0067em;\n  --mdc-slider-label-label-text-weight: 500;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-mdc-menu-content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n.mat-mdc-menu-content[_ngcontent-%COMP%], .mat-mdc-menu-content[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: white;\n  --mdc-list-list-item-supporting-text-color: rgba(255, 255, 255, 0.7);\n  --mdc-list-list-item-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-disabled-label-text-color: white;\n  --mdc-list-list-item-disabled-leading-icon-color: white;\n  --mdc-list-list-item-disabled-trailing-icon-color: white;\n  --mdc-list-list-item-hover-label-text-color: white;\n  --mdc-list-list-item-hover-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-focus-label-text-color: white;\n  --mdc-list-list-item-hover-state-layer-color: white;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.08;\n  --mdc-list-list-item-focus-state-layer-color: white;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.24;\n}\n\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-one-line-container-height: 48px;\n  --mdc-list-list-item-two-line-container-height: 64px;\n  --mdc-list-list-item-three-line-container-height: 88px;\n}\n\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line[_ngcontent-%COMP%] {\n  height: 56px;\n}\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-font: Roboto;\n  --mdc-list-list-item-label-text-line-height: 24px;\n  --mdc-list-list-item-label-text-size: 17px;\n  --mdc-list-list-item-label-text-tracking: 0.0179em;\n  --mdc-list-list-item-label-text-weight: 500;\n  --mdc-list-list-item-supporting-text-font: Roboto;\n  --mdc-list-list-item-supporting-text-line-height: 20px;\n  --mdc-list-list-item-supporting-text-size: 15px;\n  --mdc-list-list-item-supporting-text-tracking: 0.0179em;\n  --mdc-list-list-item-supporting-text-weight: 400;\n  --mdc-list-list-item-trailing-supporting-text-font: Roboto;\n  --mdc-list-list-item-trailing-supporting-text-line-height: 14px;\n  --mdc-list-list-item-trailing-supporting-text-size: 13px;\n  --mdc-list-list-item-trailing-supporting-text-tracking: 0.0893em;\n  --mdc-list-list-item-trailing-supporting-text-weight: 500;\n}\n\n.mdc-list-group__subheader[_ngcontent-%COMP%] {\n  font: 400 16px / 28px Roboto;\n  letter-spacing: 0.0094em;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: #424242;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n  border-right: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 40px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 20px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -26.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-paginator-container[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n\n.mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n\n.mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mat-mdc-tab-header[_ngcontent-%COMP%]   .mdc-tab[_ngcontent-%COMP%] {\n  height: 48px;\n}\n\n.mdc-tab[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fff;\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n\n.mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%] {\n  padding: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  margin: calc((var(--mdc-checkbox-touch-target-size, 40px) - 40px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__background[_ngcontent-%COMP%] {\n  top: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  left: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  right: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  left: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  width: var(--mdc-checkbox-touch-target-size, 40px);\n  height: var(--mdc-checkbox-touch-target-size, 40px);\n}\n\n@media all and (-ms-high-contrast: none) {\n  .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__focus-ring[_ngcontent-%COMP%] {\n    display: none;\n  }\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fff;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-text-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #424242;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-filled-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #424242;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-elevation: 0;\n}\n\n.mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fff;\n}\n.mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-button[_ngcontent-%COMP%], .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n\n.mat-mdc-raised-button[_ngcontent-%COMP%], .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-raised-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  height: 36px;\n}\n\n.mdc-button[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n\n.mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-icon-button-disabled-icon-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 48px;\n  max-width: 48px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  margin-right: 4px;\n  margin-left: 4px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 48px;\n   \n  left: 50%;\n  width: 48px;\n  transform: translate(-50%, -50%);\n}\n\n.mat-mdc-fab[_ngcontent-%COMP%], .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #424242;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-fab-icon-color: rgba(255, 255, 255, 0.5);\n  --mat-mdc-fab-color: rgba(255, 255, 255, 0.5);\n}\n\n.mdc-fab--extended[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: rgba(0, 0, 0, 0.87);\n  --mdc-snackbar-container-color: #d9d9d9;\n  --mdc-snackbar-supporting-text-color: rgba(66, 66, 66, 0.87);\n}\n\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mdc-snackbar-supporting-text-font: Roboto;\n  --mdc-snackbar-supporting-text-line-height: 20px;\n  --mdc-snackbar-supporting-text-size: 15px;\n  --mdc-snackbar-supporting-text-weight: 400;\n}\n\n.mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n}\n\n.mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n\n.mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__cell[_ngcontent-%COMP%], .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mdc-data-table__pagination-total[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-table[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  min-height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__header-row[_ngcontent-%COMP%] {\n  height: 56px;\n}\n\n.mdc-data-table__content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n\n.mat-badge[_ngcontent-%COMP%] {\n  position: relative;\n}\n\n.mat-badge.mat-badge[_ngcontent-%COMP%] {\n  overflow: visible;\n}\n\n.mat-badge-hidden[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n\n.ng-animate-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%], .mat-badge-content._mat-animation-noopable[_ngcontent-%COMP%] {\n  transition: none;\n}\n\n.mat-badge-content.mat-badge-active[_ngcontent-%COMP%] {\n  transform: none;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -8px;\n}\n\n.mat-badge-medium[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -11px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -14px;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n\n.mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n\n.mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #6e6e6e;\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, sans-serif;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 9px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 24px;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n  background: #424242;\n}\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: white;\n}\n\n.mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #595959;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #595959;\n}\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #595959;\n}\n\n.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #212121;\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n  background-color: black;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: #424242;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #595959;\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-label-content[_ngcontent-%COMP%] {\n  line-height: 48px;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: white;\n}\n\n.mat-datepicker-toggle[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(255, 255, 255, 0.12);\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%], .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-calendar-body-cell-content[_ngcontent-%COMP%], .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: white;\n  border-color: transparent;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.24);\n}\n\n.mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n\n.mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n\n.mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n\n.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n\n.mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n\n.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n\n@media (hover: hover) {\n  .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: #424242;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n\n.mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  padding: 8px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  margin-right: 0px;\n  margin-left: 0px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 40px;\n   \n  left: 50%;\n  width: 40px;\n  transform: translate(-50%, -50%);\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mat-mdc-button-touch-target[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-calendar[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-body[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-calendar-body-label[_ngcontent-%COMP%], .mat-calendar-period-button[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\n  font-size: 11px;\n  font-weight: 400;\n}\n\n.mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%] {\n  background: #424242;\n  color: white;\n}\n.mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n\n@media (hover: none) {\n  .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: #424242;\n  }\n}\n.mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-expansion-panel-header-description[_ngcontent-%COMP%], .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n}\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  font-family: Roboto;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-expansion-panel-content[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-grid-tile-header[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%] {\n  font-size: 15px;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%] {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2), .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2) {\n  font-size: 13px;\n}\n\n.mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-drawer[_ngcontent-%COMP%] {\n  background-color: #424242;\n  color: white;\n}\n.mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n.mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n\n.mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(189, 189, 189, 0.6);\n}\n\n.mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n.mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.7);\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-stepper-horizontal[_ngcontent-%COMP%], .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%], .mat-vertical-stepper-header[_ngcontent-%COMP%] {\n  padding: 24px 24px;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  top: -16px;\n  bottom: -16px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before {\n  top: 36px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  top: 36px;\n}\n\n.mat-stepper-vertical[_ngcontent-%COMP%], .mat-stepper-horizontal[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-step-label[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-step-sub-label-error[_ngcontent-%COMP%] {\n  font-weight: normal;\n}\n\n.mat-step-label-error[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mat-step-label-selected[_ngcontent-%COMP%] {\n  font-size: 17px;\n  font-weight: 500;\n}\n\n.mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #c6c6c6;\n}\n\n.mat-toolbar[_ngcontent-%COMP%] {\n  background: #212121;\n  color: white;\n}\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n\n.mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n  min-height: 64px;\n}\n\n.mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n    min-height: 56px;\n  }\n  .mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n    height: 56px;\n  }\n}\n.mat-toolbar[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%] {\n  font: 500 20px / 32px Roboto;\n  letter-spacing: 0.0075em;\n  margin: 0;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-tree-node[_ngcontent-%COMP%] {\n  min-height: 48px;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  font-weight: 400;\n  font-size: 15px;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-app-background[_ngcontent-%COMP%], .theme-alternate.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z0[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z1[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z2[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z3[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z4[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z5[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z6[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z7[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z8[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z9[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z10[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z11[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z12[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z13[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z14[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z15[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z16[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z17[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z18[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z19[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z20[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z21[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z22[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z23[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z24[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: whitesmoke;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.42);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.06);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: white;\n  --mdc-dialog-with-divider-divider-color: rgba(0, 0, 0, 0.12);\n  --mdc-dialog-subhead-color: rgba(0, 0, 0, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #e0e0e0;\n  --mdc-chip-elevated-disabled-container-color: #e0e0e0;\n  --mdc-chip-label-text-color: #212121;\n  --mdc-chip-disabled-label-text-color: #212121;\n  --mdc-chip-with-icon-icon-color: #212121;\n  --mdc-chip-with-icon-disabled-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #212121;\n  --mdc-chip-with-icon-selected-icon-color: #212121;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #424242;\n  --mdc-switch-disabled-unselected-handle-color: #424242;\n  --mdc-switch-disabled-selected-track-color: #424242;\n  --mdc-switch-disabled-unselected-track-color: #424242;\n  --mdc-switch-unselected-focus-state-layer-color: #424242;\n  --mdc-switch-unselected-pressed-state-layer-color: #424242;\n  --mdc-switch-unselected-hover-state-layer-color: #424242;\n  --mdc-switch-unselected-focus-track-color: #e0e0e0;\n  --mdc-switch-unselected-hover-track-color: #e0e0e0;\n  --mdc-switch-unselected-pressed-track-color: #e0e0e0;\n  --mdc-switch-unselected-track-color: #e0e0e0;\n  --mdc-switch-unselected-focus-handle-color: #212121;\n  --mdc-switch-unselected-hover-handle-color: #212121;\n  --mdc-switch-unselected-pressed-handle-color: #212121;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #616161;\n  --mdc-switch-selected-icon-color: #fff;\n  --mdc-switch-disabled-selected-icon-color: #fff;\n  --mdc-switch-disabled-unselected-icon-color: #fff;\n  --mdc-switch-unselected-icon-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: black;\n  --mdc-slider-label-label-text-color: white;\n  --mdc-slider-disabled-handle-color: #000;\n  --mdc-slider-disabled-active-track-color: #000;\n  --mdc-slider-disabled-inactive-track-color: #000;\n  --mdc-slider-with-tick-marks-disabled-container-color: #000;\n  --mat-mdc-slider-value-indicator-opacity: 0.6;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, 0.54);\n  --mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-disabled-label-text-color: black;\n  --mdc-list-list-item-disabled-leading-icon-color: black;\n  --mdc-list-list-item-disabled-trailing-icon-color: black;\n  --mdc-list-list-item-hover-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-focus-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-state-layer-color: black;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.04;\n  --mdc-list-list-item-focus-state-layer-color: black;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-text-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fff;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-filled-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fff;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-elevation: 0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fff;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-fab-icon-color: rgba(0, 0, 0, 0.38);\n  --mat-mdc-fab-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: #1bfae4;\n  --mdc-snackbar-container-color: #333333;\n  --mdc-snackbar-supporting-text-color: rgba(255, 255, 255, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-total[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-table[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #bdbdbd;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell-content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.24);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: white;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%] {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #757575;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree-node[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-raised-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%] {\n  padding: 0 1.15em;\n  margin: 0 0.65em;\n  min-width: 3em;\n  line-height: 36.4px;\n}\n\n.mat-standard-chip[_ngcontent-%COMP%] {\n  padding: 0.5em 0.85em;\n  min-height: 2.5em;\n}\n\n.material-icons[_ngcontent-%COMP%] {\n  font-size: 24px;\n  font-family: \"Material Icons\", \"Material Icons\";\n}\n.material-icons[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-family: \"Roboto\";\n}\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n[_nghost-%COMP%] {\n  display: block;\n  height: 100%;\n}\n\nmain[_ngcontent-%COMP%] {\n  min-width: 100vw;\n  min-height: 100vh;\n}\n\n.multiline-tooltip[_ngcontent-%COMP%] {\n  white-space: pre-line;\n}\n\n.spacer[_ngcontent-%COMP%] {\n  flex: 1 1 auto;\n}\n\n\n.row[_ngcontent-%COMP%] {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-left: -15px;\n  margin-right: -15px;\n  margin-left: -15px;\n  \n}\n.row[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%] {\n  flex-basis: 0;\n  flex-grow: 1;\n  max-width: 100%;\n  position: relative;\n  width: 100%;\n  min-height: 1px;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-bottom: 1em;\n}\n\n.loading-shade[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 56px;\n  right: 0;\n  background: rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.loading-shade.all[_ngcontent-%COMP%] {\n  bottom: 0;\n}\n\nmain[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  min-width: 100vw;\n  min-height: 100vh;\n}\nmain[_ngcontent-%COMP%]   .drawer-container[_ngcontent-%COMP%] {\n  width: 100%;\n  min-height: 100%;\n}\nmain[_ngcontent-%COMP%]   .drawer-container[_ngcontent-%COMP%]   mat-drawer[_ngcontent-%COMP%] {\n  height: 100%;\n}\nmain[_ngcontent-%COMP%]   .drawer-container[_ngcontent-%COMP%]   mat-drawer[_ngcontent-%COMP%]   .side-menu[_ngcontent-%COMP%] {\n  min-width: 230px;\n}\nmain[_ngcontent-%COMP%]   .drawer-container[_ngcontent-%COMP%]   mat-drawer-content[_ngcontent-%COMP%] {\n  min-height: 100vh;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"]
});

/***/ }),

/***/ 6747:
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppModule": () => (/* binding */ AppModule)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 7067);
/* harmony import */ var _core_shared_components_components_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/shared/components/components.module */ 5970);
/* harmony import */ var _core_material_bundle_material_bundle_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core/material-bundle/material-bundle.module */ 6118);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser */ 4497);
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app-routing.module */ 158);
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app.component */ 5041);
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser/animations */ 3262);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common/http */ 8987);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 2560);









class AppModule {}
AppModule.ɵfac = function AppModule_Factory(t) {
  return new (t || AppModule)();
};
AppModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineNgModule"]({
  type: AppModule,
  bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_3__.AppComponent]
});
AppModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjector"]({
  imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__.BrowserModule, _app_routing_module__WEBPACK_IMPORTED_MODULE_2__.AppRoutingModule, _angular_router__WEBPACK_IMPORTED_MODULE_6__.RouterModule, _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_7__.BrowserAnimationsModule, _core_material_bundle_material_bundle_module__WEBPACK_IMPORTED_MODULE_1__.MaterialBundleModule, _core_shared_components_components_module__WEBPACK_IMPORTED_MODULE_0__.ComponentsModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_8__.HttpClientModule]
});
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵsetNgModuleScope"](AppModule, {
    declarations: [_app_component__WEBPACK_IMPORTED_MODULE_3__.AppComponent],
    imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__.BrowserModule, _app_routing_module__WEBPACK_IMPORTED_MODULE_2__.AppRoutingModule, _angular_router__WEBPACK_IMPORTED_MODULE_6__.RouterModule, _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_7__.BrowserAnimationsModule, _core_material_bundle_material_bundle_module__WEBPACK_IMPORTED_MODULE_1__.MaterialBundleModule, _core_shared_components_components_module__WEBPACK_IMPORTED_MODULE_0__.ComponentsModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_8__.HttpClientModule]
  });
})();

/***/ }),

/***/ 6118:
/*!****************************************************************!*\
  !*** ./src/app/core/material-bundle/material-bundle.module.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MaterialBundleModule": () => (/* binding */ MaterialBundleModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/cdk/a11y */ 4218);
/* harmony import */ var _angular_cdk_accordion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/accordion */ 2088);
/* harmony import */ var _angular_cdk_clipboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/clipboard */ 6079);
/* harmony import */ var _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/cdk/drag-drop */ 7727);
/* harmony import */ var _angular_cdk_listbox__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/listbox */ 6840);
/* harmony import */ var _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! @angular/cdk/portal */ 7520);
/* harmony import */ var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! @angular/cdk/scrolling */ 6328);
/* harmony import */ var _angular_cdk_stepper__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/cdk/stepper */ 1861);
/* harmony import */ var _angular_cdk_table__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/cdk/table */ 9673);
/* harmony import */ var _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/cdk/tree */ 5183);
/* harmony import */ var _angular_material_autocomplete__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/autocomplete */ 8550);
/* harmony import */ var _angular_material_badge__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/badge */ 3335);
/* harmony import */ var _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material/bottom-sheet */ 4865);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/material/button */ 4522);
/* harmony import */ var _angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/material/button-toggle */ 9837);
/* harmony import */ var _angular_material_card__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/material/card */ 2156);
/* harmony import */ var _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/material/checkbox */ 4792);
/* harmony import */ var _angular_material_chips__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/material/chips */ 1169);
/* harmony import */ var _angular_material_stepper__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/material/stepper */ 4193);
/* harmony import */ var _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/material/datepicker */ 2298);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/material/dialog */ 1484);
/* harmony import */ var _angular_material_divider__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/material/divider */ 1528);
/* harmony import */ var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @angular/material/expansion */ 7591);
/* harmony import */ var _angular_material_grid_list__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @angular/material/grid-list */ 2642);
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @angular/material/icon */ 7822);
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @angular/material/input */ 8562);
/* harmony import */ var _angular_material_list__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @angular/material/list */ 6517);
/* harmony import */ var _angular_material_menu__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @angular/material/menu */ 8589);
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/core */ 9121);
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @angular/material/paginator */ 6060);
/* harmony import */ var _angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @angular/material/progress-bar */ 1294);
/* harmony import */ var _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @angular/material/progress-spinner */ 1708);
/* harmony import */ var _angular_material_radio__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @angular/material/radio */ 2922);
/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @angular/material/select */ 7371);
/* harmony import */ var _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @angular/material/sidenav */ 6643);
/* harmony import */ var _angular_material_slider__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @angular/material/slider */ 5682);
/* harmony import */ var _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @angular/material/slide-toggle */ 4714);
/* harmony import */ var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @angular/material/snack-bar */ 930);
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @angular/material/sort */ 2197);
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @angular/material/table */ 5288);
/* harmony import */ var _angular_material_tabs__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @angular/material/tabs */ 5892);
/* harmony import */ var _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! @angular/material/toolbar */ 2543);
/* harmony import */ var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! @angular/material/tooltip */ 6896);
/* harmony import */ var _angular_material_tree__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! @angular/material/tree */ 3453);
/* harmony import */ var _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! @angular/cdk/overlay */ 5895);
/* harmony import */ var _angular_cdk_menu__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/cdk/menu */ 5397);
/* harmony import */ var _angular_cdk_dialog__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! @angular/cdk/dialog */ 2529);
/* harmony import */ var _angular_material_date_fns_adapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material-date-fns-adapter */ 4265);
/* harmony import */ var date_fns_locale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! date-fns/locale */ 6842);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 2560);



















































class MaterialBundleModule {}
MaterialBundleModule.ɵfac = function MaterialBundleModule_Factory(t) {
  return new (t || MaterialBundleModule)();
};
MaterialBundleModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: MaterialBundleModule
});
MaterialBundleModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  providers: [{
    provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_1__.MAT_DATE_LOCALE,
    useValue: date_fns_locale__WEBPACK_IMPORTED_MODULE_2__["default"]
  }, {
    provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_1__.DateAdapter,
    useClass: _angular_material_date_fns_adapter__WEBPACK_IMPORTED_MODULE_3__.DateFnsAdapter,
    deps: [_angular_material_core__WEBPACK_IMPORTED_MODULE_1__.MAT_DATE_LOCALE]
  }, {
    provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_1__.MAT_DATE_FORMATS,
    useValue: _angular_material_date_fns_adapter__WEBPACK_IMPORTED_MODULE_3__.MAT_DATE_FNS_FORMATS
  }],
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_material_date_fns_adapter__WEBPACK_IMPORTED_MODULE_3__.MatDateFnsModule, _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_5__.A11yModule, _angular_cdk_accordion__WEBPACK_IMPORTED_MODULE_6__.CdkAccordionModule, _angular_cdk_clipboard__WEBPACK_IMPORTED_MODULE_7__.ClipboardModule, _angular_cdk_listbox__WEBPACK_IMPORTED_MODULE_8__.CdkListboxModule, _angular_cdk_menu__WEBPACK_IMPORTED_MODULE_9__.CdkMenuModule, _angular_cdk_stepper__WEBPACK_IMPORTED_MODULE_10__.CdkStepperModule, _angular_cdk_table__WEBPACK_IMPORTED_MODULE_11__.CdkTableModule, _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_12__.CdkTreeModule, _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_13__.DragDropModule, _angular_material_autocomplete__WEBPACK_IMPORTED_MODULE_14__.MatAutocompleteModule, _angular_material_badge__WEBPACK_IMPORTED_MODULE_15__.MatBadgeModule, _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_16__.MatBottomSheetModule, _angular_material_button__WEBPACK_IMPORTED_MODULE_17__.MatButtonModule, _angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_18__.MatButtonToggleModule, _angular_material_card__WEBPACK_IMPORTED_MODULE_19__.MatCardModule, _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_20__.MatCheckboxModule, _angular_material_chips__WEBPACK_IMPORTED_MODULE_21__.MatChipsModule, _angular_material_stepper__WEBPACK_IMPORTED_MODULE_22__.MatStepperModule, _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_23__.MatDatepickerModule, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_24__.MatDialogModule, _angular_material_divider__WEBPACK_IMPORTED_MODULE_25__.MatDividerModule, _angular_material_expansion__WEBPACK_IMPORTED_MODULE_26__.MatExpansionModule, _angular_material_grid_list__WEBPACK_IMPORTED_MODULE_27__.MatGridListModule, _angular_material_icon__WEBPACK_IMPORTED_MODULE_28__.MatIconModule, _angular_material_input__WEBPACK_IMPORTED_MODULE_29__.MatInputModule, _angular_material_list__WEBPACK_IMPORTED_MODULE_30__.MatListModule, _angular_material_menu__WEBPACK_IMPORTED_MODULE_31__.MatMenuModule, _angular_material_core__WEBPACK_IMPORTED_MODULE_1__.MatNativeDateModule, _angular_material_paginator__WEBPACK_IMPORTED_MODULE_32__.MatPaginatorModule, _angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_33__.MatProgressBarModule, _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_34__.MatProgressSpinnerModule, _angular_material_radio__WEBPACK_IMPORTED_MODULE_35__.MatRadioModule, _angular_material_core__WEBPACK_IMPORTED_MODULE_1__.MatRippleModule, _angular_material_select__WEBPACK_IMPORTED_MODULE_36__.MatSelectModule, _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_37__.MatSidenavModule, _angular_material_slider__WEBPACK_IMPORTED_MODULE_38__.MatSliderModule, _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_39__.MatSlideToggleModule, _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_40__.MatSnackBarModule, _angular_material_sort__WEBPACK_IMPORTED_MODULE_41__.MatSortModule, _angular_material_table__WEBPACK_IMPORTED_MODULE_42__.MatTableModule, _angular_material_tabs__WEBPACK_IMPORTED_MODULE_43__.MatTabsModule, _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_44__.MatToolbarModule, _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_45__.MatTooltipModule, _angular_material_tree__WEBPACK_IMPORTED_MODULE_46__.MatTreeModule, _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_47__.OverlayModule, _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_48__.PortalModule, _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_49__.ScrollingModule, _angular_cdk_dialog__WEBPACK_IMPORTED_MODULE_50__.DialogModule]
});
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](MaterialBundleModule, {
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule, _angular_material_date_fns_adapter__WEBPACK_IMPORTED_MODULE_3__.MatDateFnsModule],
    exports: [_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_5__.A11yModule, _angular_cdk_accordion__WEBPACK_IMPORTED_MODULE_6__.CdkAccordionModule, _angular_cdk_clipboard__WEBPACK_IMPORTED_MODULE_7__.ClipboardModule, _angular_cdk_listbox__WEBPACK_IMPORTED_MODULE_8__.CdkListboxModule, _angular_cdk_menu__WEBPACK_IMPORTED_MODULE_9__.CdkMenuModule, _angular_cdk_stepper__WEBPACK_IMPORTED_MODULE_10__.CdkStepperModule, _angular_cdk_table__WEBPACK_IMPORTED_MODULE_11__.CdkTableModule, _angular_cdk_tree__WEBPACK_IMPORTED_MODULE_12__.CdkTreeModule, _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_13__.DragDropModule, _angular_material_autocomplete__WEBPACK_IMPORTED_MODULE_14__.MatAutocompleteModule, _angular_material_badge__WEBPACK_IMPORTED_MODULE_15__.MatBadgeModule, _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_16__.MatBottomSheetModule, _angular_material_button__WEBPACK_IMPORTED_MODULE_17__.MatButtonModule, _angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_18__.MatButtonToggleModule, _angular_material_card__WEBPACK_IMPORTED_MODULE_19__.MatCardModule, _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_20__.MatCheckboxModule, _angular_material_chips__WEBPACK_IMPORTED_MODULE_21__.MatChipsModule, _angular_material_stepper__WEBPACK_IMPORTED_MODULE_22__.MatStepperModule, _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_23__.MatDatepickerModule, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_24__.MatDialogModule, _angular_material_divider__WEBPACK_IMPORTED_MODULE_25__.MatDividerModule, _angular_material_expansion__WEBPACK_IMPORTED_MODULE_26__.MatExpansionModule, _angular_material_grid_list__WEBPACK_IMPORTED_MODULE_27__.MatGridListModule, _angular_material_icon__WEBPACK_IMPORTED_MODULE_28__.MatIconModule, _angular_material_input__WEBPACK_IMPORTED_MODULE_29__.MatInputModule, _angular_material_list__WEBPACK_IMPORTED_MODULE_30__.MatListModule, _angular_material_menu__WEBPACK_IMPORTED_MODULE_31__.MatMenuModule, _angular_material_core__WEBPACK_IMPORTED_MODULE_1__.MatNativeDateModule, _angular_material_paginator__WEBPACK_IMPORTED_MODULE_32__.MatPaginatorModule, _angular_material_progress_bar__WEBPACK_IMPORTED_MODULE_33__.MatProgressBarModule, _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_34__.MatProgressSpinnerModule, _angular_material_radio__WEBPACK_IMPORTED_MODULE_35__.MatRadioModule, _angular_material_core__WEBPACK_IMPORTED_MODULE_1__.MatRippleModule, _angular_material_select__WEBPACK_IMPORTED_MODULE_36__.MatSelectModule, _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_37__.MatSidenavModule, _angular_material_slider__WEBPACK_IMPORTED_MODULE_38__.MatSliderModule, _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_39__.MatSlideToggleModule, _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_40__.MatSnackBarModule, _angular_material_sort__WEBPACK_IMPORTED_MODULE_41__.MatSortModule, _angular_material_table__WEBPACK_IMPORTED_MODULE_42__.MatTableModule, _angular_material_tabs__WEBPACK_IMPORTED_MODULE_43__.MatTabsModule, _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_44__.MatToolbarModule, _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_45__.MatTooltipModule, _angular_material_tree__WEBPACK_IMPORTED_MODULE_46__.MatTreeModule, _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_47__.OverlayModule, _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_48__.PortalModule, _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_49__.ScrollingModule, _angular_cdk_dialog__WEBPACK_IMPORTED_MODULE_50__.DialogModule]
  });
})();

/***/ }),

/***/ 5970:
/*!*************************************************************!*\
  !*** ./src/app/core/shared/components/components.module.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComponentsModule": () => (/* binding */ ComponentsModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _header_header_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./header/header.component */ 4080);
/* harmony import */ var _material_bundle_material_bundle_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../material-bundle/material-bundle.module */ 6118);
/* harmony import */ var _side_menu_side_menu_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./side-menu/side-menu.component */ 5020);
/* harmony import */ var _master_table_master_table_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./master-table/master-table.component */ 7729);
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/table */ 5288);
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/paginator */ 6060);
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/sort */ 2197);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 2560);









class ComponentsModule {}
ComponentsModule.ɵfac = function ComponentsModule_Factory(t) {
  return new (t || ComponentsModule)();
};
ComponentsModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineNgModule"]({
  type: ComponentsModule
});
ComponentsModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjector"]({
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule, _material_bundle_material_bundle_module__WEBPACK_IMPORTED_MODULE_1__.MaterialBundleModule, _angular_material_table__WEBPACK_IMPORTED_MODULE_6__.MatTableModule, _angular_material_paginator__WEBPACK_IMPORTED_MODULE_7__.MatPaginatorModule, _angular_material_sort__WEBPACK_IMPORTED_MODULE_8__.MatSortModule]
});
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵsetNgModuleScope"](ComponentsModule, {
    declarations: [_header_header_component__WEBPACK_IMPORTED_MODULE_0__.HeaderComponent, _side_menu_side_menu_component__WEBPACK_IMPORTED_MODULE_2__.SideMenuComponent, _master_table_master_table_component__WEBPACK_IMPORTED_MODULE_3__.MasterTableComponent],
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule, _material_bundle_material_bundle_module__WEBPACK_IMPORTED_MODULE_1__.MaterialBundleModule, _angular_material_table__WEBPACK_IMPORTED_MODULE_6__.MatTableModule, _angular_material_paginator__WEBPACK_IMPORTED_MODULE_7__.MatPaginatorModule, _angular_material_sort__WEBPACK_IMPORTED_MODULE_8__.MatSortModule],
    exports: [_header_header_component__WEBPACK_IMPORTED_MODULE_0__.HeaderComponent, _side_menu_side_menu_component__WEBPACK_IMPORTED_MODULE_2__.SideMenuComponent, _master_table_master_table_component__WEBPACK_IMPORTED_MODULE_3__.MasterTableComponent]
  });
})();

/***/ }),

/***/ 4080:
/*!*******************************************************************!*\
  !*** ./src/app/core/shared/components/header/header.component.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeaderComponent": () => (/* binding */ HeaderComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/button */ 4522);
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/icon */ 7822);
/* harmony import */ var _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/toolbar */ 2543);






function HeaderComponent_button_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function HeaderComponent_button_1_Template_button_click_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r2);
      const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r1.toggleMenu.emit());
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-icon");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "menu");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
  }
}
class HeaderComponent {
  constructor() {
    this.title = 'Meu aplicativo';
    this.showMenuBtn = false;
    this.toggleMenu = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.goToProfile = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.logout = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  }
}
HeaderComponent.ɵfac = function HeaderComponent_Factory(t) {
  return new (t || HeaderComponent)();
};
HeaderComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: HeaderComponent,
  selectors: [["app-header"]],
  inputs: {
    title: "title",
    showMenuBtn: "showMenuBtn"
  },
  outputs: {
    toggleMenu: "toggleMenu",
    goToProfile: "goToProfile",
    logout: "logout"
  },
  decls: 11,
  vars: 2,
  consts: [["class", "menu-btn", "aria-label", "Menu Toggle", "mat-icon-button", "", 3, "click", 4, "ngIf"], [1, "spacer"], ["mat-icon-button", "", "aria-label", "Perfil", 3, "click"], ["mat-icon-button", "", "aria-label", "Sair do aplicativo", 3, "click"], ["aria-label", "Menu Toggle", "mat-icon-button", "", 1, "menu-btn", 3, "click"]],
  template: function HeaderComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "mat-toolbar");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, HeaderComponent_button_1_Template, 3, 0, "button", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "span");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "span", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "button", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function HeaderComponent_Template_button_click_5_listener() {
        return ctx.goToProfile.emit();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "mat-icon");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, "person");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "button", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function HeaderComponent_Template_button_click_8_listener() {
        return ctx.logout.emit();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "mat-icon");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, "logout");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.showMenuBtn);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.title);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _angular_material_button__WEBPACK_IMPORTED_MODULE_2__.MatIconButton, _angular_material_icon__WEBPACK_IMPORTED_MODULE_3__.MatIcon, _angular_material_toolbar__WEBPACK_IMPORTED_MODULE_4__.MatToolbar],
  styles: [".menu-btn[_ngcontent-%COMP%] {\n  margin-right: 0.5em;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29yZS9zaGFyZWQvY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5tZW51LWJ0biB7XG4gIG1hcmdpbi1yaWdodDogMC41ZW07XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */"]
});

/***/ }),

/***/ 8622:
/*!********************************************************************************!*\
  !*** ./src/app/core/shared/components/master-table/master-table-datasource.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MasterTableDataSource": () => (/* binding */ MasterTableDataSource)
/* harmony export */ });
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/cdk/collections */ 1755);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 2673);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 3158);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ 9337);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 635);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 6646);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 745);



/**
 * Data source for the TableExample view. This class should
 * encapsulate all logic for fetching and manipulating the displayed data
 * (including sorting, pagination, and filtering).
 */
class MasterTableDataSource extends _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_0__.DataSource {
  constructor(service, filter$, utilsService, loadingService, functionName) {
    super();
    this.service = service;
    this.filter$ = filter$;
    this.utilsService = utilsService;
    this.loadingService = loadingService;
    this.functionName = functionName;
    this.data = [];
    this.hasErrorOnLoad = false;
    this.atualPagination = this.utilsService.createPaginationConfig(this.paginator, this.sort, '');
  }
  /**
   * Connect this data source to the table. The table will only update when
   * the returned stream emits new items.
   * @returns A stream of the items to be rendered.
   */
  connect() {
    if (this.paginator && this.sort) {
      // Combine everything that affects the rendered data into one update
      // stream for the data-table to consume.
      return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.merge)((0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)(this.data), this.paginator.page, this.sort.sortChange, this.filter$).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.switchMap)(e => {
        // Filter data
        return this.getPagedData().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.catchError)(() => {
          this.hasErrorOnLoad = true;
          return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.of)({
            items: [],
            total: 0
          });
        }));
      }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.tap)(e => {
        this.paginator.length = e.total;
        // Transform atualPagination.take in paginator.pageIndex
        this.paginator.pageIndex = Math.floor(this.atualPagination.skip / this.atualPagination.take);
        // Transform atualPagination.skip in paginator.pageSize
        this.paginator.pageSize = this.atualPagination.take;
      }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.map)(e => {
        console.log('e', e);
        return {
          items: e.data,
          total: e.count
        };
      }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.map)(e => {
        this.loadingService.deactiveLoading();
        return e.items;
      }));
    } else {
      throw Error('Please set the paginator and sort on the data source before connecting.');
    }
  }
  /**
   *  Called when the table is being destroyed. Use this function, to clean up
   * any open connections or free any held resources that were set up during connect.
   */
  disconnect() {}
  /**
   * Paginate the data (client-side). If you're using server-side pagination,
   * this would be replaced by requesting the appropriate data from the server.
   */
  getPagedData() {
    setTimeout(() => {
      this.loadingService.activeLoading();
      this.hasErrorOnLoad = false;
    }, 20);
    return this.filter$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.switchMap)(e => {
      this.atualPagination = this.utilsService.createPaginationConfig(this.paginator, this.sort, e);
      const ret = this.service[this.functionName || 'getByFilter'](this.atualPagination);
      return ret;
    }));
  }
}
/** Simple sort comparator for example ID/Name columns (for client-side sorting). */
function compare(a, b, isAsc) {
  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);
}

/***/ }),

/***/ 7729:
/*!*******************************************************************************!*\
  !*** ./src/app/core/shared/components/master-table/master-table.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MasterTableComponent": () => (/* binding */ MasterTableComponent)
/* harmony export */ });
/* harmony import */ var _master_table_datasource__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./master-table-datasource */ 8622);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/paginator */ 6060);
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/sort */ 2197);
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/table */ 5288);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 6317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 1989);
/* harmony import */ var src_app_services_utils_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/services/utils.service */ 8270);
/* harmony import */ var _services_loading_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../../../services/loading.service */ 4471);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/button */ 4522);
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/icon */ 7822);
/* harmony import */ var _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material/progress-spinner */ 1708);
















function MasterTableComponent_div_1_mat_spinner_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](0, "mat-spinner");
  }
}
function MasterTableComponent_div_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, MasterTableComponent_div_1_mat_spinner_1_Template, 1, 0, "mat-spinner", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", ctx_r0.loadingService.loading);
  }
}
function MasterTableComponent_ng_container_3_th_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "th", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" ", item_r8.title, " ");
  }
}
function MasterTableComponent_ng_container_3_td_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "td", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const row_r12 = ctx.$implicit;
    const item_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate"](row_r12[item_r8.name]);
  }
}
function MasterTableComponent_ng_container_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementContainerStart"](0, 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, MasterTableComponent_ng_container_3_th_1_Template, 2, 1, "th", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](2, MasterTableComponent_ng_container_3_td_2_Template, 2, 1, "td", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const item_r8 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("matColumnDef", item_r8.name);
  }
}
function MasterTableComponent_th_5_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](0, "th", 15);
  }
}
function MasterTableComponent_td_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r16 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "td", 17)(1, "button", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function MasterTableComponent_td_6_Template_button_click_1_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r16);
      const row_r14 = restoredCtx.$implicit;
      const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵresetView"](ctx_r15.edit(row_r14));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "mat-icon");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, "edit");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function MasterTableComponent_td_6_Template_button_click_4_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r16);
      const row_r14 = restoredCtx.$implicit;
      const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵresetView"](ctx_r17.delete(row_r14));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "mat-icon");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](6, "delete");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()()();
  }
}
function MasterTableComponent_tr_7_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](0, "tr", 19);
  }
}
function MasterTableComponent_tr_8_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](0, "tr", 20);
  }
}
const _c0 = function () {
  return [5, 10, 20];
};
class MasterTableComponent {
  constructor(utilsService, loadingService) {
    this.utilsService = utilsService;
    this.loadingService = loadingService;
    this.columns = [];
    this.filterChange$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__.BehaviorSubject('');
    this.filterChangeToDataSource$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__.BehaviorSubject('');
    this.functionName = 'getAll';
    this.edit$ = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
    this.delete$ = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
    this.changeTable$ = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
    this.itemColumns = [];
    this.displayedColumns = [];
    this.filterValue = '';
  }
  createColumns() {
    console.log(this.columns);
    this.itemColumns = JSON.parse(JSON.stringify(this.columns));
    this.columns.push({
      name: 'actions',
      title: 'Actions'
    });
    this.displayedColumns = this.columns.map(c => c.name);
    console.log(this.displayedColumns);
  }
  ngOnInit() {
    this.createColumns();
    this.dataSource = new _master_table_datasource__WEBPACK_IMPORTED_MODULE_0__.MasterTableDataSource(this.service, this.filterChangeToDataSource$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.debounceTime)(200)), this.utilsService, this.loadingService, this.functionName);
  }
  ngAfterViewInit() {
    this.filterChange$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.debounceTime)(500)).subscribe(value => {
      this.filterValue = value;
      this.filterChangeToDataSource$.next(value);
    });
    this.dataSource.sort = this.sort;
    this.dataSource.paginator = this.paginator;
    this.table.dataSource = this.dataSource;
  }
  edit(row) {
    this.edit$.emit(row);
  }
  delete(row) {
    this.delete$.emit(row);
    setTimeout(() => {
      this.filterChangeToDataSource$.next(this.filterValue);
      this.loadingService.deactiveLoading();
    }, 500);
  }
}
MasterTableComponent.ɵfac = function MasterTableComponent_Factory(t) {
  return new (t || MasterTableComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](src_app_services_utils_service__WEBPACK_IMPORTED_MODULE_1__.UtilsService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_services_loading_service__WEBPACK_IMPORTED_MODULE_2__.LoadingService));
};
MasterTableComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({
  type: MasterTableComponent,
  selectors: [["app-master-table"]],
  viewQuery: function MasterTableComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_angular_material_paginator__WEBPACK_IMPORTED_MODULE_6__.MatPaginator, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_angular_material_sort__WEBPACK_IMPORTED_MODULE_7__.MatSort, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_angular_material_table__WEBPACK_IMPORTED_MODULE_8__.MatTable, 5);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.paginator = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.sort = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.table = _t.first);
    }
  },
  inputs: {
    columns: "columns",
    filterChange$: "filterChange$",
    service: "service",
    functionName: "functionName"
  },
  outputs: {
    edit$: "edit$",
    delete$: "delete$",
    changeTable$: "changeTable$"
  },
  decls: 11,
  vars: 9,
  consts: [[1, "mat-elevation-z8", "full-width-table"], ["class", "loading-shade", 4, "ngIf"], ["mat-table", "", "matSort", "", "aria-label", "Elements", 1, "full-width-table"], [3, "matColumnDef", 4, "ngFor", "ngForOf"], ["matColumnDef", "actions"], ["mat-header-cell", "", "mat-sort-header", "", 4, "matHeaderCellDef"], ["mat-cell", "", "class", "actions", 4, "matCellDef"], ["mat-header-row", "", 4, "matHeaderRowDef"], ["mat-row", "", 4, "matRowDef", "matRowDefColumns"], ["aria-label", "Select page", 3, "length", "pageIndex", "pageSize", "pageSizeOptions"], ["paginator", ""], [1, "loading-shade"], [4, "ngIf"], [3, "matColumnDef"], ["mat-cell", "", 4, "matCellDef"], ["mat-header-cell", "", "mat-sort-header", ""], ["mat-cell", ""], ["mat-cell", "", 1, "actions"], ["mat-icon-button", "", 3, "click"], ["mat-header-row", ""], ["mat-row", ""]],
  template: function MasterTableComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, MasterTableComponent_div_1_Template, 2, 1, "div", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "table", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](3, MasterTableComponent_ng_container_3_Template, 3, 1, "ng-container", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementContainerStart"](4, 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](5, MasterTableComponent_th_5_Template, 1, 0, "th", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](6, MasterTableComponent_td_6_Template, 7, 0, "td", 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementContainerEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](7, MasterTableComponent_tr_7_Template, 1, 0, "tr", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](8, MasterTableComponent_tr_8_Template, 1, 0, "tr", 8);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](9, "mat-paginator", 9, 10);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", ctx.loadingService.loading);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngForOf", ctx.itemColumns);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("matHeaderRowDef", ctx.displayedColumns);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("matRowDefColumns", ctx.displayedColumns);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("length", ctx.dataSource.data.length || 0)("pageIndex", 0)("pageSize", 10)("pageSizeOptions", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction0"](8, _c0));
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_9__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, _angular_material_button__WEBPACK_IMPORTED_MODULE_10__.MatIconButton, _angular_material_icon__WEBPACK_IMPORTED_MODULE_11__.MatIcon, _angular_material_paginator__WEBPACK_IMPORTED_MODULE_6__.MatPaginator, _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_12__.MatProgressSpinner, _angular_material_sort__WEBPACK_IMPORTED_MODULE_7__.MatSort, _angular_material_sort__WEBPACK_IMPORTED_MODULE_7__.MatSortHeader, _angular_material_table__WEBPACK_IMPORTED_MODULE_8__.MatTable, _angular_material_table__WEBPACK_IMPORTED_MODULE_8__.MatHeaderCellDef, _angular_material_table__WEBPACK_IMPORTED_MODULE_8__.MatHeaderRowDef, _angular_material_table__WEBPACK_IMPORTED_MODULE_8__.MatColumnDef, _angular_material_table__WEBPACK_IMPORTED_MODULE_8__.MatCellDef, _angular_material_table__WEBPACK_IMPORTED_MODULE_8__.MatRowDef, _angular_material_table__WEBPACK_IMPORTED_MODULE_8__.MatHeaderCell, _angular_material_table__WEBPACK_IMPORTED_MODULE_8__.MatCell, _angular_material_table__WEBPACK_IMPORTED_MODULE_8__.MatHeaderRow, _angular_material_table__WEBPACK_IMPORTED_MODULE_8__.MatRow],
  styles: ["[_nghost-%COMP%] {\n  width: 80%;\n  min-width: 250px;\n  margin: 1.5em 0;\n}\n\n.full-width-table[_ngcontent-%COMP%] {\n  width: 100%;\n  position: relative;\n  min-height: 100px;\n}\n\n.actions[_ngcontent-%COMP%] {\n  width: 150px;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29yZS9zaGFyZWQvY29tcG9uZW50cy9tYXN0ZXItdGFibGUvbWFzdGVyLXRhYmxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBQTtFQUNBLGdCQUFBO0VBRUEsZUFBQTtBQUFGOztBQUVBO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFDRjs7QUFFQTtFQUNFLFlBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgd2lkdGg6IDgwJTtcbiAgbWluLXdpZHRoOiAyNTBweDtcblxuICBtYXJnaW46IDEuNWVtIDA7XG59XG4uZnVsbC13aWR0aC10YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1pbi1oZWlnaHQ6IDEwMHB4O1xufVxuXG4uYWN0aW9ucyB7XG4gIHdpZHRoOiAxNTBweDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */"]
});

/***/ }),

/***/ 5020:
/*!*************************************************************************!*\
  !*** ./src/app/core/shared/components/side-menu/side-menu.component.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SideMenuComponent": () => (/* binding */ SideMenuComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 2560);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ 7067);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ 4666);
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/icon */ 7822);




function SideMenuComponent_div_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function SideMenuComponent_div_6_Template_div_click_0_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);
      const item_r1 = restoredCtx.$implicit;
      const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r2.goTo(item_r1.route));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "mat-icon", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "p", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](5, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r1 = ctx.$implicit;
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("active", item_r1.route === ctx_r0.atualRoute);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](item_r1.icon);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](item_r1.name);
  }
}
class SideMenuComponent {
  constructor(router) {
    this.router = router;
    this.companyName = 'Meu aplicativo';
    this.atualRoute = '/';
    this.menuItems = [{
      name: 'Inicial',
      icon: 'home',
      route: '/home'
    }, {
      name: 'Exercícios',
      icon: 'list',
      route: '/exercises'
    }, {
      name: 'Métodos',
      icon: 'list',
      route: '/methods'
    }, {
      name: 'Conj. de Exercícios',
      icon: 'list',
      route: '/exercise-set'
    }, {
      name: 'Treinos',
      icon: 'list',
      route: '/workouts'
    }];
  }
  goTo(route) {
    this.router.navigateByUrl(route);
  }
}
SideMenuComponent.ɵfac = function SideMenuComponent_Factory(t) {
  return new (t || SideMenuComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_1__.Router));
};
SideMenuComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: SideMenuComponent,
  selectors: [["app-side-menu"]],
  inputs: {
    companyName: "companyName",
    atualRoute: "atualRoute"
  },
  decls: 7,
  vars: 2,
  consts: [[1, "side-menu-content"], [1, "header"], ["src", "https://placehold.co/200", "alt", "Logo da empresa", 1, "img-logo"], [1, "company-name"], [1, "menu"], ["class", "menu-item", "routerLinkActive", "active", 3, "active", "click", 4, "ngFor", "ngForOf"], ["routerLinkActive", "active", 1, "menu-item", 3, "click"], [1, "icon"], [1, "text"], [1, "menu-spacer"]],
  template: function SideMenuComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0)(1, "div", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "img", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "p", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, SideMenuComponent_div_6_Template, 6, 4, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.companyName);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.menuItems);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgForOf, _angular_material_icon__WEBPACK_IMPORTED_MODULE_3__.MatIcon],
  styles: ["@import url(https://fonts.googleapis.com/icon?family=Material+Icons);@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];0[_ngcontent-%COMP%], 900[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 100[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 300[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 400[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 500[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 700[_ngcontent-%COMP%];1[_ngcontent-%COMP%], 900&display=swap\u00CF)[_ngcontent-%COMP%];@charset \"UTF-8\";\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\nbody[_ngcontent-%COMP%] {\n  --primary-color: #fa1b31;\n  --primary-lighter-color: #f66d73;\n  --primary-darker-color: #cd0014;\n  --text-primary-color: #ffffff;\n  --text-primary-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-primary-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --accent-color: #1bfae4;\n  --accent-lighter-color: #d9fefa;\n  --accent-darker-color: #00bd95;\n  --text-accent-color: #ffffff;\n  --text-accent-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-accent-darker-color: #ffffff;\n}\n\nbody[_ngcontent-%COMP%] {\n  --warn-color: #ff0000;\n  --warn-lighter-color: #ffb3b3;\n  --warn-darker-color: #ff0000;\n  --text-warn-color: #ffffff;\n  --text-warn-lighter-color: rgba(0, 0, 0, 0.87);\n  --text-warn-darker-color: #ffffff;\n}\n\n.mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #686868;\n}\n\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #303030;\n}\n\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #686868;\n}\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #686868;\n}\n\n.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-elevation-z0[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24[_ngcontent-%COMP%], .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-option[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n}\n\n.mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #424242;\n}\n\n.mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #595959;\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-mdc-card-title[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-headline6-font-size, 20px);\n  line-height: var(--mdc-typography-headline6-line-height, 32px);\n  font-weight: var(--mdc-typography-headline6-font-weight, 500);\n  letter-spacing: var(--mdc-typography-headline6-letter-spacing, 0.0075em);\n  -webkit-text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n  text-transform: var(--mdc-typography-headline6-text-transform, none);\n}\n\n.mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n.mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n\n.mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-supporting-text-font: Roboto;\n  --mdc-plain-tooltip-supporting-text-size: 13px;\n  --mdc-plain-tooltip-supporting-text-weight: 500;\n  --mdc-plain-tooltip-supporting-text-tracking: 0.0893em;\n}\n\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n@media all {\n  .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n.mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(255, 255, 255, 0.87));\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.08);\n}\n.mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.24);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: #4a4a4a;\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.42);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.87);\n}\n.mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n@media all {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(255, 255, 255, 0.06);\n}\n.mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #464646;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.08;\n}\n\n.mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.24;\n}\n\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\nselect.mat-mdc-form-field-input-control[_ngcontent-%COMP%]:not(.mat-mdc-native-select-inline)   option[_ngcontent-%COMP%]:disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n\n.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n\n.mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 28px;\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -34.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 24px;\n  padding-bottom: 8px;\n}\n\n.mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mdc-text-field__input[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n.mdc-text-field__affix[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-text-field--textarea[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  line-height: 1.5rem;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n[dir=rtl][_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.mat-mdc-form-field-subscript-wrapper[_ngcontent-%COMP%], .mat-mdc-form-field-bottom-align[_ngcontent-%COMP%]::before {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%], .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: calc(17px * var(--mat-mdc-form-field-floating-label-scale, 0.75));\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.38);\n}\n\n.mat-mdc-select-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-select[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-autocomplete-panel[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: #424242;\n  --mdc-dialog-with-divider-divider-color: rgba(255, 255, 255, 0.12);\n  --mdc-dialog-subhead-color: rgba(255, 255, 255, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(255, 255, 255, 0.6);\n}\n\n.mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-subhead-font: Roboto;\n  --mdc-dialog-subhead-line-height: 32px;\n  --mdc-dialog-subhead-size: 20px;\n  --mdc-dialog-subhead-weight: 500;\n  --mdc-dialog-subhead-tracking: 0.0075em;\n  --mdc-dialog-supporting-text-font: Roboto;\n  --mdc-dialog-supporting-text-line-height: 24px;\n  --mdc-dialog-supporting-text-size: 17px;\n  --mdc-dialog-supporting-text-weight: 500;\n  --mdc-dialog-supporting-text-tracking: 0.0179em;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #595959;\n  --mdc-chip-elevated-disabled-container-color: #595959;\n  --mdc-chip-label-text-color: #fafafa;\n  --mdc-chip-disabled-label-text-color: #fafafa;\n  --mdc-chip-with-icon-icon-color: #fafafa;\n  --mdc-chip-with-icon-disabled-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #fafafa;\n  --mdc-chip-with-icon-selected-icon-color: #fafafa;\n}\n.mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n\n.mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: white;\n}\n\n.mat-mdc-chip[_ngcontent-%COMP%] {\n  height: 32px;\n}\n\n.mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #000;\n  --mdc-switch-disabled-unselected-handle-color: #000;\n  --mdc-switch-disabled-selected-track-color: #f5f5f5;\n  --mdc-switch-disabled-unselected-track-color: #f5f5f5;\n  --mdc-switch-unselected-focus-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-pressed-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-hover-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-focus-track-color: #616161;\n  --mdc-switch-unselected-hover-track-color: #616161;\n  --mdc-switch-unselected-pressed-track-color: #616161;\n  --mdc-switch-unselected-track-color: #616161;\n  --mdc-switch-unselected-focus-handle-color: #fafafa;\n  --mdc-switch-unselected-hover-handle-color: #fafafa;\n  --mdc-switch-unselected-pressed-handle-color: #fafafa;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #9e9e9e;\n  --mdc-switch-selected-icon-color: #212121;\n  --mdc-switch-disabled-selected-icon-color: #212121;\n  --mdc-switch-disabled-unselected-icon-color: #212121;\n  --mdc-switch-unselected-icon-color: #212121;\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-slide-toggle.mat-primary[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #fb979b;\n  --mdc-switch-selected-hover-handle-color: #fb979b;\n  --mdc-switch-selected-pressed-handle-color: #fb979b;\n}\n.mat-mdc-slide-toggle.mat-accent[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: #1bfae4;\n  --mdc-switch-selected-hover-handle-color: #1bfae4;\n  --mdc-switch-selected-pressed-handle-color: #1bfae4;\n}\n.mat-mdc-slide-toggle.mat-warn[_ngcontent-%COMP%] {\n  --mdc-switch-selected-focus-handle-color: red;\n  --mdc-switch-selected-hover-handle-color: red;\n  --mdc-switch-selected-pressed-handle-color: red;\n}\n\n.mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-state-layer-size: 48px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%] {\n  padding: calc((40px - 20px) / 2);\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__background[_ngcontent-%COMP%]::before {\n  top: calc(-1 * (40px - 20px) / 2);\n  left: calc(-1 * (40px - 20px) / 2);\n  width: 40px;\n  height: 40px;\n}\n.mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-radio[_ngcontent-%COMP%]   .mdc-radio__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - 40px) / 2);\n  right: calc((40px - 40px) / 2);\n  left: calc((40px - 40px) / 2);\n  width: 40px;\n  height: 40px;\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: white;\n  --mdc-slider-label-label-text-color: black;\n  --mdc-slider-disabled-handle-color: #fff;\n  --mdc-slider-disabled-active-track-color: #fff;\n  --mdc-slider-disabled-inactive-track-color: #fff;\n  --mdc-slider-with-tick-marks-disabled-container-color: #fff;\n  --mat-mdc-slider-value-indicator-opacity: 0.9;\n}\n.mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n\n.mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-label-text-font: Roboto;\n  --mdc-slider-label-label-text-size: 14px;\n  --mdc-slider-label-label-text-line-height: 24px;\n  --mdc-slider-label-label-text-tracking: 0.0067em;\n  --mdc-slider-label-label-text-weight: 500;\n}\n\n.mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #424242);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n\n.mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n\n.mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n\n.mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(255, 255, 255, 0.5));\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n\n.mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(255, 255, 255, 0.08);\n}\n\n.mat-mdc-menu-content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, 0.0094em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  \n  line-height: 24px;\n}\n.mat-mdc-menu-content[_ngcontent-%COMP%], .mat-mdc-menu-content[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body1-font-size, 17px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 500);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: white;\n  --mdc-list-list-item-supporting-text-color: rgba(255, 255, 255, 0.7);\n  --mdc-list-list-item-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-disabled-label-text-color: white;\n  --mdc-list-list-item-disabled-leading-icon-color: white;\n  --mdc-list-list-item-disabled-trailing-icon-color: white;\n  --mdc-list-list-item-hover-label-text-color: white;\n  --mdc-list-list-item-hover-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-focus-label-text-color: white;\n  --mdc-list-list-item-hover-state-layer-color: white;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.08;\n  --mdc-list-list-item-focus-state-layer-color: white;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.24;\n}\n\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-one-line-container-height: 48px;\n  --mdc-list-list-item-two-line-container-height: 64px;\n  --mdc-list-list-item-three-line-container-height: 88px;\n}\n\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line[_ngcontent-%COMP%] {\n  height: 56px;\n}\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines[_ngcontent-%COMP%], .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-font: Roboto;\n  --mdc-list-list-item-label-text-line-height: 24px;\n  --mdc-list-list-item-label-text-size: 17px;\n  --mdc-list-list-item-label-text-tracking: 0.0179em;\n  --mdc-list-list-item-label-text-weight: 500;\n  --mdc-list-list-item-supporting-text-font: Roboto;\n  --mdc-list-list-item-supporting-text-line-height: 20px;\n  --mdc-list-list-item-supporting-text-size: 15px;\n  --mdc-list-list-item-supporting-text-tracking: 0.0179em;\n  --mdc-list-list-item-supporting-text-weight: 400;\n  --mdc-list-list-item-trailing-supporting-text-font: Roboto;\n  --mdc-list-list-item-trailing-supporting-text-line-height: 14px;\n  --mdc-list-list-item-trailing-supporting-text-size: 13px;\n  --mdc-list-list-item-trailing-supporting-text-tracking: 0.0893em;\n  --mdc-list-list-item-trailing-supporting-text-weight: 500;\n}\n\n.mdc-list-group__subheader[_ngcontent-%COMP%] {\n  font: 400 16px / 28px Roboto;\n  letter-spacing: 0.0094em;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: #424242;\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n  border-right: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n}\n\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  min-height: 40px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]   .mat-mdc-form-field-flex[_ngcontent-%COMP%]   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  top: 20px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-notched-outline--upgraded[_ngcontent-%COMP%]   .mdc-floating-label--float-above[_ngcontent-%COMP%] {\n  --mat-mdc-form-field-label-transform: translateY(\n          -26.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper.mdc-text-field--outlined[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mdc-text-field--no-label[_ngcontent-%COMP%]:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)   .mat-mdc-form-field-infix[_ngcontent-%COMP%] {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-text-field-wrapper[_ngcontent-%COMP%]:not(.mdc-text-field--outlined)   .mat-mdc-floating-label[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-mdc-paginator-container[_ngcontent-%COMP%] {\n  min-height: 56px;\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-caption-font-size, 13px);\n  line-height: var(--mdc-typography-caption-line-height, 14px);\n  font-weight: var(--mdc-typography-caption-font-weight, 500);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0.0893em);\n  -webkit-text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-paginator[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.6);\n}\n.mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n\n.mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n\n.mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #fff);\n}\n\n.mat-mdc-tab-header[_ngcontent-%COMP%]   .mdc-tab[_ngcontent-%COMP%] {\n  height: 48px;\n}\n\n.mdc-tab[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fff;\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n\n.mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%] {\n  padding: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  margin: calc((var(--mdc-checkbox-touch-target-size, 40px) - 40px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__background[_ngcontent-%COMP%] {\n  top: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  left: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n}\n.mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__native-control[_ngcontent-%COMP%] {\n  top: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  right: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  left: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  width: var(--mdc-checkbox-touch-target-size, 40px);\n  height: var(--mdc-checkbox-touch-target-size, 40px);\n}\n\n@media all and (-ms-high-contrast: none) {\n  .mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__focus-ring[_ngcontent-%COMP%] {\n    display: none;\n  }\n}\n\n.mdc-form-field[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fff;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-text-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #424242;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-filled-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #424242;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-elevation: 0;\n}\n\n.mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n}\n.mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fff;\n}\n.mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-mdc-button[_ngcontent-%COMP%], .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n\n.mat-mdc-raised-button[_ngcontent-%COMP%], .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-mdc-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-raised-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-unelevated-button.mat-mdc-button-base[_ngcontent-%COMP%], .mat-mdc-outlined-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  height: 36px;\n}\n\n.mdc-button[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n\n.mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-icon-button-disabled-icon-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 48px;\n  max-width: 48px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  margin-right: 4px;\n  margin-left: 4px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 48px;\n   \n  left: 50%;\n  width: 48px;\n  transform: translate(-50%, -50%);\n}\n\n.mat-mdc-fab[_ngcontent-%COMP%], .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.08;\n}\n.mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.24;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #424242;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-fab-icon-color: rgba(255, 255, 255, 0.5);\n  --mat-mdc-fab-color: rgba(255, 255, 255, 0.5);\n}\n\n.mdc-fab--extended[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-button-font-size, 15px);\n  line-height: var(--mdc-typography-button-line-height, 20px);\n  font-weight: var(--mdc-typography-button-font-weight, 400);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, 0.0333em);\n  -webkit-text-decoration: var(--mdc-typography-button-text-decoration, none);\n          text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: rgba(0, 0, 0, 0.87);\n  --mdc-snackbar-container-color: #d9d9d9;\n  --mdc-snackbar-supporting-text-color: rgba(66, 66, 66, 0.87);\n}\n\n.mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mdc-snackbar-supporting-text-font: Roboto;\n  --mdc-snackbar-supporting-text-line-height: 20px;\n  --mdc-snackbar-supporting-text-size: 15px;\n  --mdc-snackbar-supporting-text-weight: 400;\n}\n\n.mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #424242);\n}\n\n.mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n\n.mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.mdc-data-table__cell[_ngcontent-%COMP%], .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n.mdc-data-table__pagination-total[_ngcontent-%COMP%], .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.87);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-table[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  min-height: 52px;\n}\n.mat-mdc-table[_ngcontent-%COMP%]   .mdc-data-table__header-row[_ngcontent-%COMP%] {\n  height: 56px;\n}\n\n.mdc-data-table__content[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-body2-font-size, 15px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, 0.0179em);\n  -webkit-text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, Roboto));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, 0.0067em);\n  -webkit-text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n          text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n\n.mat-badge[_ngcontent-%COMP%] {\n  position: relative;\n}\n\n.mat-badge.mat-badge[_ngcontent-%COMP%] {\n  overflow: visible;\n}\n\n.mat-badge-hidden[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n\n.ng-animate-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%], .mat-badge-content._mat-animation-noopable[_ngcontent-%COMP%] {\n  transition: none;\n}\n\n.mat-badge-content.mat-badge-active[_ngcontent-%COMP%] {\n  transform: none;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -16px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -8px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-small.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -8px;\n}\n\n.mat-badge-medium[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -22px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -11px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-medium.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -11px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -28px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-before[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: -14px;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-badge-large.mat-badge-overlap.mat-badge-after[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  right: auto;\n  left: -14px;\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n\n.mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n\n.mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #6e6e6e;\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-badge-content[_ngcontent-%COMP%] {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, sans-serif;\n}\n\n.mat-badge-small[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 9px;\n}\n\n.mat-badge-large[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-size: 24px;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: #424242;\n  color: white;\n}\n\n.mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n  background: #424242;\n}\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: white;\n}\n\n.mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #595959;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #595959;\n}\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #595959;\n}\n\n.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #212121;\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n  background-color: black;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: #424242;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #595959;\n}\n\n.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-label-content[_ngcontent-%COMP%] {\n  line-height: 48px;\n}\n\n.mat-button-toggle[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: white;\n}\n\n.mat-datepicker-toggle[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(255, 255, 255, 0.12);\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%], .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-calendar-body-cell-content[_ngcontent-%COMP%], .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: white;\n  border-color: transparent;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.24);\n}\n\n.mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n\n.mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n\n.mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n\n.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n\n.mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n\n.mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n\n.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n\n@media (hover: hover) {\n  .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: #424242;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n\n.mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  padding: 8px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__ripple[_ngcontent-%COMP%] {\n  width: 40px;\n  height: 40px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  margin-right: 0px;\n  margin-left: 0px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size[_ngcontent-%COMP%]   .mdc-icon-button__focus-ring[_ngcontent-%COMP%] {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mdc-icon-button__touch[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 50%;\n  height: 40px;\n   \n  left: 50%;\n  width: 40px;\n  transform: translate(-50%, -50%);\n}\n.mat-calendar-controls[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-mdc-button-base[_ngcontent-%COMP%]   .mat-mdc-button-touch-target[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.mat-calendar[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-calendar-body[_ngcontent-%COMP%] {\n  font-size: 13px;\n}\n\n.mat-calendar-body-label[_ngcontent-%COMP%], .mat-calendar-period-button[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-calendar-table-header[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\n  font-size: 11px;\n  font-weight: 400;\n}\n\n.mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%] {\n  background: #424242;\n  color: white;\n}\n.mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n\n@media (hover: none) {\n  .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: #424242;\n  }\n}\n.mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-expansion-panel-header-description[_ngcontent-%COMP%], .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.3);\n}\n.mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n.mat-expansion-panel-header[_ngcontent-%COMP%] {\n  font-family: Roboto;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-expansion-panel-content[_ngcontent-%COMP%] {\n  font: 400 15px / 20px Roboto;\n  letter-spacing: 0.0179em;\n}\n\n.mat-grid-tile-header[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%] {\n  font-size: 15px;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%], .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%] {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2), .mat-grid-tile-footer[_ngcontent-%COMP%]   .mat-line[_ngcontent-%COMP%]:nth-child(n+2) {\n  font-size: 13px;\n}\n\n.mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #303030;\n  color: white;\n}\n\n.mat-drawer[_ngcontent-%COMP%] {\n  background-color: #424242;\n  color: white;\n}\n.mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n.mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n[dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n\n.mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(189, 189, 189, 0.6);\n}\n\n.mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n.mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(255, 255, 255, 0.7);\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(255, 255, 255, 0.7);\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: white;\n}\n.mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n\n.mat-stepper-horizontal[_ngcontent-%COMP%], .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: #424242;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-horizontal-stepper-header[_ngcontent-%COMP%] {\n  height: 72px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%], .mat-vertical-stepper-header[_ngcontent-%COMP%] {\n  padding: 24px 24px;\n}\n\n.mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  top: -16px;\n  bottom: -16px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before {\n  top: 36px;\n}\n\n.mat-stepper-label-position-bottom[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  top: 36px;\n}\n\n.mat-stepper-vertical[_ngcontent-%COMP%], .mat-stepper-horizontal[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-step-label[_ngcontent-%COMP%] {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-step-sub-label-error[_ngcontent-%COMP%] {\n  font-weight: normal;\n}\n\n.mat-step-label-error[_ngcontent-%COMP%] {\n  font-size: 17px;\n}\n\n.mat-step-label-selected[_ngcontent-%COMP%] {\n  font-size: 17px;\n  font-weight: 500;\n}\n\n.mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #c6c6c6;\n}\n\n.mat-toolbar[_ngcontent-%COMP%] {\n  background: #212121;\n  color: white;\n}\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n\n.mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n  min-height: 64px;\n}\n\n.mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n  height: 64px;\n}\n\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows[_ngcontent-%COMP%] {\n    min-height: 56px;\n  }\n  .mat-toolbar-row[_ngcontent-%COMP%], .mat-toolbar-single-row[_ngcontent-%COMP%] {\n    height: 56px;\n  }\n}\n.mat-toolbar[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%], .mat-toolbar[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%] {\n  font: 500 20px / 32px Roboto;\n  letter-spacing: 0.0075em;\n  margin: 0;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  background: #424242;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: white;\n}\n\n.mat-tree-node[_ngcontent-%COMP%] {\n  min-height: 48px;\n}\n\n.mat-tree[_ngcontent-%COMP%] {\n  font-family: Roboto, sans-serif;\n}\n\n.mat-tree-node[_ngcontent-%COMP%], .mat-nested-tree-node[_ngcontent-%COMP%] {\n  font-weight: 400;\n  font-size: 15px;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:hover:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option[_ngcontent-%COMP%]:focus:not(.mdc-list-item--disabled), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mat-mdc-option-active[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-mdc-option.mdc-list-item--selected[_ngcontent-%COMP%]:not(.mdc-list-item--disabled)   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-optgroup-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled[_ngcontent-%COMP%] {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-primary[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-accent[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-warn[_ngcontent-%COMP%]   .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%]::after {\n  color: #fafafa;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal[_ngcontent-%COMP%]::after {\n  color: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full[_ngcontent-%COMP%] {\n  background: #b0b0b0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-app-background[_ngcontent-%COMP%], .theme-alternate.mat-app-background[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z0[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z0[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z1[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z1[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z2[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z2[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z3[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z3[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z4[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z4[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z5[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z5[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z6[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z6[_ngcontent-%COMP%] {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z7[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z7[_ngcontent-%COMP%] {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z8[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z8[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z9[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z9[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z10[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z10[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z11[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z11[_ngcontent-%COMP%] {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z12[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z12[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z13[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z13[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z14[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z14[_ngcontent-%COMP%] {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z15[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z15[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z16[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z16[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z17[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z17[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z18[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z18[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z19[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z19[_ngcontent-%COMP%] {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z20[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z20[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z21[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z21[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z22[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z22[_ngcontent-%COMP%] {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z23[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z23[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-elevation-z24[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-elevation-specific.mat-elevation-z24[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-outlined[_ngcontent-%COMP%] {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-card-subtitle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(250, 27, 49, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(27, 250, 228, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-accent[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%] {\n  --mdc-linear-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-dots[_ngcontent-%COMP%] {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='rgba(255, 0, 0, 0.25)'/%3E%3C/svg%3E\");\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-bar.mat-warn[_ngcontent-%COMP%]   .mdc-linear-progress__buffer-bar[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tooltip[_ngcontent-%COMP%] {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:hover   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-surface--hover[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled.mdc-ripple-upgraded--background-focused[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-ripple-upgraded):focus   .mdc-text-field__ripple[_ngcontent-%COMP%]::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled) {\n  background-color: whitesmoke;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.42);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--filled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-primary, #fa1b31);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]   .mdc-text-field__ripple[_ngcontent-%COMP%]::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n@media all {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.3);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: rgba(0, 0, 0, 0.06);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%]:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-floating-label[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-character-counter[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--leading[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--prefix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-text-field__affix--suffix[_ngcontent-%COMP%] {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n    border-color: GrayText;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--disabled.mdc-text-field--filled[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-text-field--end-aligned[_ngcontent-%COMP%]   .mdc-text-field__input[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker), .theme-alternate[_ngcontent-%COMP%]   .mdc-floating-label--required[_ngcontent-%COMP%]:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  \n  \n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-error[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]:hover   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused[_ngcontent-%COMP%]   .mat-mdc-form-field-focus-overlay[_ngcontent-%COMP%] {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled[_ngcontent-%COMP%]   .mat-mdc-form-field-infix[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-accent[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-secondary, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--focused[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):hover   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::after {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-floating-label[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--invalid    + .mdc-text-field-helper-line[_ngcontent-%COMP%]   .mdc-text-field-helper-text--validation-msg[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]   .mdc-text-field__input[_ngcontent-%COMP%] {\n  caret-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-text-field__icon--trailing[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-line-ripple[_ngcontent-%COMP%]::before {\n  border-bottom-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover   .mdc-notched-outline[_ngcontent-%COMP%]   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--invalid[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-warn[_ngcontent-%COMP%]   .mdc-text-field--outlined[_ngcontent-%COMP%]:not(.mdc-text-field--disabled).mdc-text-field--focused   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-error, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field[_ngcontent-%COMP%]   .mdc-notched-outline__notch[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-placeholder[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-value[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-primary[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(250, 27, 49, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-accent[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(27, 250, 228, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field.mat-focused.mat-warn[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-invalid[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(255, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]   .mat-mdc-select.mat-mdc-select-disabled[_ngcontent-%COMP%]   .mat-mdc-select-arrow[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-dialog-container[_ngcontent-%COMP%] {\n  --mdc-dialog-container-color: white;\n  --mdc-dialog-with-divider-divider-color: rgba(0, 0, 0, 0.12);\n  --mdc-dialog-subhead-color: rgba(0, 0, 0, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #e0e0e0;\n  --mdc-chip-elevated-disabled-container-color: #e0e0e0;\n  --mdc-chip-label-text-color: #212121;\n  --mdc-chip-disabled-label-text-color: #212121;\n  --mdc-chip-with-icon-icon-color: #212121;\n  --mdc-chip-with-icon-disabled-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #212121;\n  --mdc-chip-with-icon-selected-icon-color: #212121;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #fa1b31;\n  --mdc-chip-elevated-disabled-container-color: #fa1b31;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: #1bfae4;\n  --mdc-chip-elevated-disabled-container-color: #1bfae4;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted[_ngcontent-%COMP%] {\n  --mdc-chip-elevated-container-color: red;\n  --mdc-chip-elevated-disabled-container-color: red;\n  --mdc-chip-label-text-color: white;\n  --mdc-chip-disabled-label-text-color: white;\n  --mdc-chip-with-icon-icon-color: white;\n  --mdc-chip-with-icon-disabled-icon-color: white;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: white;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: white;\n  --mdc-chip-with-icon-selected-icon-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-chip-focus-overlay[_ngcontent-%COMP%] {\n  background: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%] {\n  --mdc-switch-disabled-selected-handle-color: #424242;\n  --mdc-switch-disabled-unselected-handle-color: #424242;\n  --mdc-switch-disabled-selected-track-color: #424242;\n  --mdc-switch-disabled-unselected-track-color: #424242;\n  --mdc-switch-unselected-focus-state-layer-color: #424242;\n  --mdc-switch-unselected-pressed-state-layer-color: #424242;\n  --mdc-switch-unselected-hover-state-layer-color: #424242;\n  --mdc-switch-unselected-focus-track-color: #e0e0e0;\n  --mdc-switch-unselected-hover-track-color: #e0e0e0;\n  --mdc-switch-unselected-pressed-track-color: #e0e0e0;\n  --mdc-switch-unselected-track-color: #e0e0e0;\n  --mdc-switch-unselected-focus-handle-color: #212121;\n  --mdc-switch-unselected-hover-handle-color: #212121;\n  --mdc-switch-unselected-pressed-handle-color: #212121;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #616161;\n  --mdc-switch-selected-icon-color: #fff;\n  --mdc-switch-disabled-selected-icon-color: #fff;\n  --mdc-switch-disabled-unselected-icon-color: #fff;\n  --mdc-switch-unselected-icon-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slide-toggle[_ngcontent-%COMP%]   .mdc-switch--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-primary[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-accent[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-radio-button.mat-warn[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider[_ngcontent-%COMP%] {\n  --mdc-slider-label-container-color: black;\n  --mdc-slider-label-label-text-color: white;\n  --mdc-slider-disabled-handle-color: #000;\n  --mdc-slider-disabled-active-track-color: #000;\n  --mdc-slider-disabled-inactive-track-color: #000;\n  --mdc-slider-with-tick-marks-disabled-container-color: #000;\n  --mat-mdc-slider-value-indicator-opacity: 0.6;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-primary[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #fa1b31;\n  --mdc-slider-focus-handle-color: #fa1b31;\n  --mdc-slider-hover-handle-color: #fa1b31;\n  --mdc-slider-active-track-color: #fa1b31;\n  --mdc-slider-inactive-track-color: #fa1b31;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: #fa1b31;\n  --mat-mdc-slider-ripple-color: #fa1b31;\n  --mat-mdc-slider-hover-ripple-color: rgba(250, 27, 49, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-accent[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: #1bfae4;\n  --mdc-slider-focus-handle-color: #1bfae4;\n  --mdc-slider-hover-handle-color: #1bfae4;\n  --mdc-slider-active-track-color: #1bfae4;\n  --mdc-slider-inactive-track-color: #1bfae4;\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: #1bfae4;\n  --mat-mdc-slider-ripple-color: #1bfae4;\n  --mat-mdc-slider-hover-ripple-color: rgba(27, 250, 228, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-slider.mat-warn[_ngcontent-%COMP%] {\n  --mdc-slider-handle-color: red;\n  --mdc-slider-focus-handle-color: red;\n  --mdc-slider-hover-handle-color: red;\n  --mdc-slider-active-track-color: red;\n  --mdc-slider-inactive-track-color: red;\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: red;\n  --mat-mdc-slider-ripple-color: red;\n  --mat-mdc-slider-hover-ripple-color: rgba(255, 0, 0, 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-menu-surface[_ngcontent-%COMP%] {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 0.38;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__secondary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__overline-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-icon[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--disabled.mdc-list-item--with-trailing-meta[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-primary, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-deprecated-list-group__subheader[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%]::after {\n  border-bottom-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-list-divider[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[disabled][_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]   .mat-icon-no-color[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-submenu-icon[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item[_ngcontent-%COMP%]:hover:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-program-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item.cdk-keyboard-focused[_ngcontent-%COMP%]:not([disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-menu-item-highlighted[_ngcontent-%COMP%]:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%] {\n  --mdc-list-list-item-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, 0.54);\n  --mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-disabled-label-text-color: black;\n  --mdc-list-list-item-disabled-leading-icon-color: black;\n  --mdc-list-list-item-disabled-trailing-icon-color: black;\n  --mdc-list-list-item-hover-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-focus-label-text-color: rgba(0, 0, 0, 0.87);\n  --mdc-list-list-item-hover-state-layer-color: black;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.04;\n  --mdc-list-list-item-focus-state-layer-color: black;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #fa1b31;\n  --mdc-radio-selected-hover-icon-color: #fa1b31;\n  --mdc-radio-selected-icon-color: #fa1b31;\n  --mdc-radio-selected-pressed-icon-color: #fa1b31;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: #1bfae4;\n  --mdc-radio-selected-hover-icon-color: #1bfae4;\n  --mdc-radio-selected-icon-color: #1bfae4;\n  --mdc-radio-selected-pressed-icon-color: #1bfae4;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-accent[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: red;\n  --mdc-radio-selected-hover-icon-color: red;\n  --mdc-radio-selected-icon-color: red;\n  --mdc-radio-selected-pressed-icon-color: red;\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-option.mat-warn[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%]   .mdc-radio--disabled[_ngcontent-%COMP%]    + label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated[_ngcontent-%COMP%]   .mdc-list-item__primary-text[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--selected.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base.mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--activated.mdc-list-item--with-leading-icon[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__start[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-list-base[_ngcontent-%COMP%]   .mdc-list-item--disabled[_ngcontent-%COMP%]   .mdc-list-item__end[_ngcontent-%COMP%] {\n  opacity: 1;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-decrement[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-increment[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-first[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-last[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][_ngcontent-%COMP%]   .mat-mdc-paginator-icon[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%] {\n  background-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link.mat-mdc-tab-disabled[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #fa1b31);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, #1bfae4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-accent[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled).mdc-tab--active   .mdc-tab__text-label[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]:not(.mat-mdc-tab-disabled)   .mdc-tab-indicator__content--underline[_ngcontent-%COMP%] {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, red);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mdc-tab__ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-warn[_ngcontent-%COMP%]   .mat-mdc-tab-link[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-primary[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #fa1b31;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-accent[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: #1bfae4;\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-group.mat-background-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-nav-bar.mat-background-warn[_ngcontent-%COMP%] {\n  --mat-mdc-tab-header-with-background-background-color: red;\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-tab-header-pagination-chevron[_ngcontent-%COMP%] {\n  border-color: var(--mdc-theme-on-surface, #000);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-form-field[_ngcontent-%COMP%] {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox[_ngcontent-%COMP%]   .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: #fa1b31;\n  --mdc-checkbox-selected-hover-icon-color: #fa1b31;\n  --mdc-checkbox-selected-icon-color: #fa1b31;\n  --mdc-checkbox-selected-pressed-icon-color: #fa1b31;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-primary[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: #1bfae4;\n  --mdc-checkbox-selected-hover-icon-color: #1bfae4;\n  --mdc-checkbox-selected-icon-color: #1bfae4;\n  --mdc-checkbox-selected-pressed-icon-color: #1bfae4;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-accent[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%] {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: red;\n  --mdc-checkbox-selected-hover-icon-color: red;\n  --mdc-checkbox-selected-icon-color: red;\n  --mdc-checkbox-selected-pressed-icon-color: red;\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mat-mdc-checkbox-ripple[_ngcontent-%COMP%]   .mat-ripple-element[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox.mat-warn[_ngcontent-%COMP%]   .mdc-checkbox--selected[_ngcontent-%COMP%]    ~ .mdc-checkbox__ripple[_ngcontent-%COMP%] {\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-checkbox-disabled[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-text-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-text-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fff;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #fa1b31;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: #1bfae4;\n  --mdc-filled-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-filled-button-container-color: red;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-filled-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-filled-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fff;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #fa1b31;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: #1bfae4;\n  --mdc-protected-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-protected-button-container-color: red;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-protected-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-elevation: 0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-outlined-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-outlined-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-raised-button.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-unelevated-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fa1b31;\n  --mat-mdc-button-ripple-color: rgba(250, 27, 49, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #1bfae4;\n  --mat-mdc-button-ripple-color: rgba(27, 250, 228, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: red;\n  --mat-mdc-button-ripple-color: rgba(255, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-primary[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-accent[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button.mat-warn[_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-icon-button[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-icon-button-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:hover   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.04;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-program-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[_ngcontent-%COMP%]:active   .mat-mdc-button-persistent-ripple[_ngcontent-%COMP%]::before {\n  opacity: 0.12;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-unthemed[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-unthemed[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fff;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-primary[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-primary[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #fa1b31;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-accent[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-accent[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: #1bfae4;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab.mat-warn[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab.mat-warn[_ngcontent-%COMP%] {\n  --mdc-fab-container-color: red;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-fab[disabled][disabled][_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-mdc-mini-fab[disabled][disabled][_ngcontent-%COMP%] {\n  --mdc-fab-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-fab-icon-color: rgba(0, 0, 0, 0.38);\n  --mat-mdc-fab-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-snack-bar-container[_ngcontent-%COMP%] {\n  --mat-mdc-snack-bar-button-color: #1bfae4;\n  --mdc-snackbar-container-color: #333333;\n  --mdc-snackbar-supporting-text-color: rgba(255, 255, 255, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%] {\n  background-color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  background-color: var(--mdc-theme-surface, #fff);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row--selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__leading[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__notch[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-select--outlined[_ngcontent-%COMP%]:not(.mdc-select--disabled)   .mdc-notched-outline__trailing[_ngcontent-%COMP%] {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__row[_ngcontent-%COMP%]:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__header-cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-total[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-rows-per-page-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__cell[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n[dir=rtl][_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mdc-data-table__pagination-button[_ngcontent-%COMP%]   .mdc-button__icon[dir=rtl][_ngcontent-%COMP%] {\n  \n  \n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-table[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-accent[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-mdc-progress-spinner.mat-warn[_ngcontent-%COMP%] {\n  --mdc-circular-progress-active-indicator-color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: #fa1b31;\n}\n.cdk-high-contrast-active[_ngcontent-%COMP%]   .theme-alternate[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-accent[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-warn[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  color: white;\n  background: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-badge-disabled[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-bottom-sheet-container[_ngcontent-%COMP%] {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]), .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle-focus-overlay[_ngcontent-%COMP%] {\n  background-color: black;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical[_ngcontent-%COMP%]   .mat-button-toggle[_ngcontent-%COMP%]    + .mat-button-toggle[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-checked.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-appearance-standard[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-disabled.mat-button-toggle-checked[_ngcontent-%COMP%] {\n  background-color: #bdbdbd;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-standalone.mat-button-toggle-appearance-standard[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-button-toggle-group-appearance-standard[_ngcontent-%COMP%] {\n  border: solid 1px #e0e0e0;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-arrow[_ngcontent-%COMP%] {\n  fill: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-next-button[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%]   .mat-calendar-previous-button[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header-divider[_ngcontent-%COMP%]::after {\n  background: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-table-header[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-label[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell-content[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-form-field-disabled[_ngcontent-%COMP%]   .mat-date-range-input-separator[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-preview[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.24);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-today[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(250, 27, 49, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(250, 27, 49, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(250, 27, 49, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(250, 27, 49, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(250, 27, 49, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content[_ngcontent-%COMP%] {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(27, 250, 228, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(27, 250, 228, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(27, 250, 228, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(27, 250, 228, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-accent[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(27, 250, 228, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]::before {\n  background: rgba(255, 0, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to right, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-end[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-calendar-body-comparison-bridge-start[_ngcontent-%COMP%]::before {\n  background: linear-gradient(to left, rgba(255, 0, 0, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-range[_ngcontent-%COMP%]    > .mat-calendar-body-comparison-identical[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range[_ngcontent-%COMP%]::after {\n  background: #a8dab5;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-comparison-identical.mat-calendar-body-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-in-comparison-range[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background: #46a35e;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-disabled[_ngcontent-%COMP%]    > .mat-calendar-body-selected[_ngcontent-%COMP%] {\n  background-color: rgba(255, 0, 0, 0.4);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-today.mat-calendar-body-selected[_ngcontent-%COMP%] {\n  box-shadow: inset 0 0 0 1px white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-keyboard-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical), .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .cdk-program-focused[_ngcontent-%COMP%]   .mat-calendar-body-active[_ngcontent-%COMP%]    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(255, 0, 0, 0.3);\n}\n@media (hover: hover) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content.mat-warn[_ngcontent-%COMP%]   .mat-calendar-body-cell[_ngcontent-%COMP%]:not(.mat-calendar-body-disabled):hover    > .mat-calendar-body-cell-content[_ngcontent-%COMP%]:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: rgba(255, 0, 0, 0.3);\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-content-touch[_ngcontent-%COMP%] {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-datepicker-toggle-active.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-date-range-input-inner[disabled][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-divider-vertical[_ngcontent-%COMP%] {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%] {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-action-row[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-keyboard-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]   .mat-expansion-panel-header.cdk-program-focused[_ngcontent-%COMP%]:not([aria-disabled=true]), .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded)   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel[_ngcontent-%COMP%]:not(.mat-expanded):not([aria-disabled=true])   .mat-expansion-panel-header[_ngcontent-%COMP%]:hover {\n    background: white;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-indicator[_ngcontent-%COMP%]::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-title[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-expansion-panel-header[aria-disabled=true][_ngcontent-%COMP%]   .mat-expansion-panel-header-description[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-primary[_ngcontent-%COMP%] {\n  color: #fa1b31;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-accent[_ngcontent-%COMP%] {\n  color: #1bfae4;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-icon.mat-warn[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-container[_ngcontent-%COMP%] {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%] {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer.mat-drawer-push[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer[_ngcontent-%COMP%]:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side[_ngcontent-%COMP%] {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n.theme-alternate[_ngcontent-%COMP%]   [dir=rtl][_ngcontent-%COMP%]   .mat-drawer-side.mat-drawer-end[_ngcontent-%COMP%] {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-drawer-backdrop.mat-drawer-shown[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-keyboard-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.cdk-program-focused[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover:not([aria-disabled]), .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=false] {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]:hover {\n    background: none;\n  }\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-optional[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.54);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-accent[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon[_ngcontent-%COMP%] {\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-selected[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-done[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-step-header.mat-warn[_ngcontent-%COMP%]   .mat-step-icon-state-edit[_ngcontent-%COMP%] {\n  background-color: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-icon-state-error[_ngcontent-%COMP%] {\n  background-color: transparent;\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-active[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-step-header[_ngcontent-%COMP%]   .mat-step-label.mat-step-label-error[_ngcontent-%COMP%] {\n  color: red;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical[_ngcontent-%COMP%] {\n  background-color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-stepper-vertical-line[_ngcontent-%COMP%]::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::before, .theme-alternate[_ngcontent-%COMP%]   .mat-horizontal-stepper-header[_ngcontent-%COMP%]::after, .theme-alternate[_ngcontent-%COMP%]   .mat-stepper-horizontal-line[_ngcontent-%COMP%] {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-sort-header-arrow[_ngcontent-%COMP%] {\n  color: #757575;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-primary[_ngcontent-%COMP%] {\n  background: #fa1b31;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-accent[_ngcontent-%COMP%] {\n  background: #1bfae4;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar.mat-warn[_ngcontent-%COMP%] {\n  background: red;\n  color: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-ripple[_ngcontent-%COMP%] {\n  background-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-focused[_ngcontent-%COMP%]   .mat-form-field-label[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-value[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-form-field.mat-focused[_ngcontent-%COMP%]   .mat-select-arrow[_ngcontent-%COMP%] {\n  color: inherit;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]   .mat-input-element[_ngcontent-%COMP%] {\n  caret-color: currentColor;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree[_ngcontent-%COMP%] {\n  background: white;\n}\n.theme-alternate[_ngcontent-%COMP%]   .mat-tree-node[_ngcontent-%COMP%], .theme-alternate[_ngcontent-%COMP%]   .mat-nested-tree-node[_ngcontent-%COMP%] {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-raised-button[_ngcontent-%COMP%], .mat-stroked-button[_ngcontent-%COMP%], .mat-flat-button[_ngcontent-%COMP%] {\n  padding: 0 1.15em;\n  margin: 0 0.65em;\n  min-width: 3em;\n  line-height: 36.4px;\n}\n\n.mat-standard-chip[_ngcontent-%COMP%] {\n  padding: 0.5em 0.85em;\n  min-height: 2.5em;\n}\n\n.material-icons[_ngcontent-%COMP%] {\n  font-size: 24px;\n  font-family: \"Material Icons\", \"Material Icons\";\n}\n.material-icons[_ngcontent-%COMP%]   .mat-badge-content[_ngcontent-%COMP%] {\n  font-family: \"Roboto\";\n}\n\nhtml[_ngcontent-%COMP%], body[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\nbody[_ngcontent-%COMP%] {\n  margin: 0;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n[_nghost-%COMP%] {\n  display: block;\n  height: 100%;\n}\n\nmain[_ngcontent-%COMP%] {\n  min-width: 100vw;\n  min-height: 100vh;\n}\n\n.multiline-tooltip[_ngcontent-%COMP%] {\n  white-space: pre-line;\n}\n\n.spacer[_ngcontent-%COMP%] {\n  flex: 1 1 auto;\n}\n\n\n.row[_ngcontent-%COMP%] {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-left: -15px;\n  margin-right: -15px;\n  margin-left: -15px;\n  \n}\n.row[_ngcontent-%COMP%]   .col[_ngcontent-%COMP%] {\n  flex-basis: 0;\n  flex-grow: 1;\n  max-width: 100%;\n  position: relative;\n  width: 100%;\n  min-height: 1px;\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-bottom: 1em;\n}\n\n.loading-shade[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 56px;\n  right: 0;\n  background: rgba(0, 0, 0, 0.15);\n  z-index: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.loading-shade.all[_ngcontent-%COMP%] {\n  bottom: 0;\n}\n\n.side-menu-content[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n.side-menu-content[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  margin: 0 0 1em 0;\n  height: 64px;\n  width: 100%;\n  text-align: center;\n  background-color: #1bfae4;\n}\n.side-menu-content[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .img-logo[_ngcontent-%COMP%] {\n  width: 50px;\n  height: 50px;\n  object-fit: contain;\n}\n.side-menu-content[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]   .company-name[_ngcontent-%COMP%] {\n  margin: 0 0 0 1em;\n}\n.side-menu-content[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  width: 100%;\n  min-height: 100px;\n}\n.side-menu-content[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%]   .menu-item[_ngcontent-%COMP%] {\n  box-sizing: border-box;\n  text-align: center;\n  cursor: pointer;\n  -webkit-user-select: none;\n          user-select: none;\n  height: 50px;\n  width: 90%;\n  display: flex;\n  justify-content: none;\n  align-items: center;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  margin: 0 0 0.3em 0;\n  padding: 0 0.5em;\n  border-radius: 5px;\n  transition: background-color 0.2s ease-in-out;\n}\n.side-menu-content[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%]   .menu-item[_ngcontent-%COMP%]   .text[_ngcontent-%COMP%] {\n  margin: 0 0 0 1em;\n}\n.side-menu-content[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%]   .menu-item[_ngcontent-%COMP%]   .menu-spacer[_ngcontent-%COMP%] {\n  width: 24px;\n}\n.side-menu-content[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%]   .menu-item.active[_ngcontent-%COMP%] {\n  background-color: #f66d73;\n  color: #000;\n}\n.side-menu-content[_ngcontent-%COMP%]   .menu[_ngcontent-%COMP%]   .menu-item[_ngcontent-%COMP%]:hover {\n  background-color: #f99da1;\n  color: #000;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"]
});

/***/ }),

/***/ 4471:
/*!*********************************************!*\
  !*** ./src/app/services/loading.service.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LoadingService": () => (/* binding */ LoadingService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 2560);

class LoadingService {
  constructor() {
    this.loading = false;
  }
  changeLoadingState() {
    this.loading = !this.loading;
  }
  activeLoading() {
    this.loading = true;
  }
  deactiveLoading() {
    this.loading = false;
  }
}
LoadingService.ɵfac = function LoadingService_Factory(t) {
  return new (t || LoadingService)();
};
LoadingService.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: LoadingService,
  factory: LoadingService.ɵfac,
  providedIn: 'root'
});

/***/ }),

/***/ 8270:
/*!*******************************************!*\
  !*** ./src/app/services/utils.service.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UtilsService": () => (/* binding */ UtilsService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 2560);

class UtilsService {
  constructor() {}
  /**
   * @description Create a PaginationConfig object with MatPaginator, MatSort and filter string. If doesn't have MatPaginator or MatSort, use default values.
   * @returns PaginationConfig
   * @param paginator MatPaginator
   * @param sort MatSort
   * @param filter string
   *
   */
  createPaginationConfig(paginator, sort, filter) {
    const pagination = {};
    if (paginator) {
      // Fill Take and Skip
      pagination['take'] = paginator.pageSize;
      pagination['skip'] = paginator.pageIndex * paginator.pageSize;
    } else {
      // Start in first page with 10 items
      pagination['take'] = 10;
      pagination['skip'] = 0;
    }
    if (sort) {
      // Fill order (asc or desc) and OrderColumn (column name)
      pagination['order'] = sort.direction ? sort.direction.toUpperCase() : 'ASC';
      pagination['orderColumn'] = sort.active ? sort.active : 'id';
    } else {
      // Order by id asc
      pagination['order'] = 'ASC';
      pagination['orderColumn'] = 'id';
    }
    if (filter) {
      pagination['filter'] = filter;
    } else {
      pagination['filter'] = '';
    }
    return pagination;
  }
  getErrorText(form, control) {
    if (!form || !form.control.get(control.config.name)) {
      return '';
    } else if (control.config.required && form.control.get(control.config.name).hasError('required') && control.config.errors.required) {
      return control.config.errors.required;
    } else if (control.config.minlength && form.control.get(control.config.name).hasError('minlength') && control.config.errors.minlength) {
      return control.config.errors.minlength;
    } else if (control.config.maxlength && form.control.get(control.config.name).hasError('maxlength') && control.config.errors.maxlength) {
      return control.config.errors.maxlength;
    } else if (control.config.email && form.control.get(control.config.name).hasError('email') && control.config.errors.email) {
      return control.config.errors.email;
    } else if (control.config.pattern && form.control.get(control.config.name).hasError('pattern') && control.config.errors.pattern) {
      return control.config.errors.pattern;
    } else if (control.config.mask && form.control.get(control.config.name).hasError('mask') && control.config.errors.mask) {
      return control.config.errors.mask;
    } else if (control.config.customValidators['cpfValidator'] && form.control.get(control.config.name).hasError('invalidCpf') && control.config.errors.invalidCpf) {
      return control.config.errors.invalidCpf;
    } else if (control.config.customValidators['urlValidator'] && form.control.get(control.config.name).hasError('invalidUrl') && control.config.errors.invalidUrl) {
      return control.config.errors.invalidUrl;
    } else {
      return '';
    }
  }
}
UtilsService.ɵfac = function UtilsService_Factory(t) {
  return new (t || UtilsService)();
};
UtilsService.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: UtilsService,
  factory: UtilsService.ɵfac,
  providedIn: 'root'
});

/***/ }),

/***/ 4431:
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ 4497);
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app/app.module */ 6747);


_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__.platformBrowser().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_0__.AppModule).catch(err => console.error(err));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendor"], () => (__webpack_exec__(4431)));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=main.js.map
{"version":3,"file":"src_app_pages_workouts_workouts_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGkE;;;;;;;;;;;;;;;;;;;;;;;ICFhEC,4DAAAA,cAA8D;IAC5DA,uDAAAA,kBAA2B;IAC7BA,0DAAAA,EAAM;;;;;IAsCEA,4DAAAA,eAA2C;IAAAA,oDAAAA,GAEzC;IAAAA,0DAAAA,EAAW;;;;IAF8BA,uDAAAA,GAEzC;IAFyCA,+DAAAA,iCAEzC;;;;;IACFA,4DAAAA,gBAA8C;IAC5CA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,oDACF;;;;;IA0BQA,4DAAAA,qBAGC;IACCA,oDAAAA,GACF;IAAAA,0DAAAA,EAAa;;;;IAHXA,wDAAAA,wBAAoB;IAEpBA,uDAAAA,GACF;IADEA,gEAAAA,wBACF;;;;;IAEFA,4DAAAA,eAAmC;IAAAA,oDAAAA,GAEjC;IAAAA,0DAAAA,EAAW;;;;IAFsBA,uDAAAA,GAEjC;IAFiCA,+DAAAA,gCAEjC;;;;;IACFA,4DAAAA,gBAAsC;IACpCA,oDAAAA,GACF;IAAAA,0DAAAA,EAAY;;;;;IADVA,uDAAAA,GACF;IADEA,gEAAAA,wCACF;;;;;;IA3BZA,4DAAAA,aAAmD;IAIvCA,oDAAAA,GAAsB;IAAAA,0DAAAA,EAAK;IAC/BA,4DAAAA,cAAuB;IAERA,oDAAAA,GAAgB;IAAAA,0DAAAA,EAAY;IACvCA,4DAAAA,sBAMC;IALCA,wDAAAA;MAAA;MAAA;MAAA,OAAaA,yDAAAA,wBACzB;IAAA,EADoC;IAMxBA,wDAAAA,mFAKa;IACfA,0DAAAA,EAAa;IACbA,wDAAAA,8EAEa;IACbA,wDAAAA,gFAEY;IACdA,0DAAAA,EAAiB;IAEnBA,uDAAAA,WAAW;IACbA,0DAAAA,EAAmB;;;;;IA3BbA,uDAAAA,GAAsB;IAAtBA,gEAAAA,6BAAsB;IAGXA,uDAAAA,GAAgB;IAAhBA,+DAAAA,eAAgB;IAEzBA,uDAAAA,GAAwB;IAAxBA,wDAAAA,0BAAwB;IAOLA,uDAAAA,GAAqB;IAArBA,wDAAAA,kCAAqB;IAM/BA,uDAAAA,GAAsB;IAAtBA,wDAAAA,6BAAsB;IAGrBA,uDAAAA,GAAwB;IAAxBA,wDAAAA,sCAAwB;;;ADtEpD,IAAKC,WAQJ;AARD,WAAKA,WAAW;EACdA,iDAAU;EACVA,iDAAU;EACVA,mDAAW;EACXA,uDAAa;EACbA,qDAAY;EACZA,iDAAU;EACVA,qDAAY;AACd,CAAC,EARIA,WAAW,KAAXA,WAAW;AA8BV,MAAOC,uBAAuB;EAgClCC,YACUC,YAA0B,EAC1BC,QAAwB,EACxBC,MAAc,EACfC,cAA8B,EAC7BC,cAA+B,EAC/BC,kBAAsC,EACtCC,kBAAsC;IANtC,iBAAY,GAAZN,YAAY;IACZ,aAAQ,GAARC,QAAQ;IACR,WAAM,GAANC,MAAM;IACP,mBAAc,GAAdC,cAAc;IACb,mBAAc,GAAdC,cAAc;IACd,uBAAkB,GAAlBC,kBAAkB;IAClB,uBAAkB,GAAlBC,kBAAkB;IAtC5B,SAAI,GAAmC;MACrCC,IAAI,EAAE,IAAIZ,4EAAY,CAAC;QACrBa,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;UACNF,IAAI,EAAE,MAAM;UACZG,IAAI,EAAE,iBAAiB;UACvBC,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAE;YACND,QAAQ,EAAE;;;OAGf;KACF;IAED,iBAAY,GAAmB,EAAE;IACjC,aAAQ,GAAG,CACT;MAAEE,EAAE,EAAEhB,WAAW,CAACiB,MAAM;MAAEP,IAAI,EAAE;IAAS,CAAE,EAC3C;MAAEM,EAAE,EAAEhB,WAAW,CAACkB,MAAM;MAAER,IAAI,EAAE;IAAS,CAAE,EAC3C;MAAEM,EAAE,EAAEhB,WAAW,CAACmB,OAAO;MAAET,IAAI,EAAE;IAAO,CAAE,EAC1C;MAAEM,EAAE,EAAEhB,WAAW,CAACoB,SAAS;MAAEV,IAAI,EAAE;IAAQ,CAAE,EAC7C;MAAEM,EAAE,EAAEhB,WAAW,CAACqB,QAAQ;MAAEX,IAAI,EAAE;IAAQ,CAAE,EAC5C;MAAEM,EAAE,EAAEhB,WAAW,CAACsB,MAAM;MAAEZ,IAAI,EAAE;IAAO,CAAE,EACzC;MAAEM,EAAE,EAAEhB,WAAW,CAACuB,QAAQ;MAAEb,IAAI,EAAE;IAAQ,CAAE,CAC7C;IAED,oBAAe,GAAkB,EAAE;IAInC,WAAM,GAAG,KAAK;IACd,WAAM,GAAkB,IAAI;IAU1B,IAAI,CAACc,6BAA6B,EAAE;EACtC;EAEAC,QAAQ,IAAU;EACZC,eAAe;IAAA;IAAA;MACnB,KAAI,CAACC,eAAe,SAAS,KAAI,CAAClB,kBAAkB,CAACmB,MAAM,EAAE;MAC7D,KAAI,CAACC,UAAU,EAAE;MACjB,KAAI,CAACzB,QAAQ,CAAC0B,MAAM,CAACC,SAAS;QAAA,mLAAC,WAAOD,MAAM,EAAI;UAC9C,IAAIA,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE;YAC1B,KAAI,CAACE,MAAM,GAAG,IAAI;YAClB,KAAI,CAACC,MAAM,GAAG,CAACH,MAAM,CAAC,IAAI,CAAC;YAC3B;YACAI,UAAU,CAAC,MAAK;cACd,KAAI,CAAC5B,cAAc,CAAC6B,aAAa,EAAE;YACrC,CAAC,EAAE,EAAE,CAAC;YAEN;YACA,IAAI;cACF,MAAMC,IAAI,SAAS,KAAI,CAAC7B,cAAc,CAAC8B,OAAO,CAAC,CAACP,MAAM,CAAC,IAAI,CAAC,EAAE,CAC5D,cAAc,CACf,CAAC;cACFQ,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,IAAI,CAAC;cACzB,KAAI,CAACI,OAAO,CAACC,QAAQ,CAAC,MAAM,CAAC,CAACC,QAAQ,CAACN,IAAI,CAAC1B,IAAI,CAAC;cACjD,KAAI,CAACiC,gBAAgB,CAACP,IAAI,CAAC;aAC5B,CAAC,OAAOQ,KAAK,EAAE;cACdN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;aACrB,SAAS;cACRV,UAAU,CAAC,MAAK;gBACd,KAAI,CAAC5B,cAAc,CAACuC,eAAe,EAAE;cACvC,CAAC,EAAE,GAAG,CAAC;;;QAGb,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC;IAAC;EACL;EAEQrB,6BAA6B;IACnC,IAAI,CAACsB,YAAY,GAAG,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAEC,GAAG,IAAI;MAC5C,OAAO,IAAInD,4EAAY,CAAC;QACtBa,KAAK,EAAEsC,GAAG,CAACvC,IAAI;QACfwC,aAAa,EAAE,CAAC;UAAExC,IAAI,EAAE,YAAY;UAAEyC,KAAK,EAAE,CAAC;QAAC,CAAE,CAAC;QAClDA,KAAK,EAAE,CAAC,CAAC;QACTvC,MAAM,EAAE;UACNF,IAAI,EAAE,MAAMuC,GAAG,CAACjC,EAAE,CAACoC,QAAQ,EAAE,EAAE;UAC/BtC,QAAQ,EAAE,IAAI;UACdC,MAAM,EAAE;YACND,QAAQ,EAAE;;;OAGf,CAAC;IACJ,CAAC,CAAC;EACJ;EAEQe,UAAU;IAChB,IAAI,CAACiB,YAAY,CAACE,GAAG,CAAEC,GAAG,IAAI;MAC5B,MAAMI,SAAS,GAAGJ,GAAG,CAACC,aAAa;MACnCG,SAAS,CAACC,IAAI,CACZ,GAAG,IAAI,CAAC3B,eAAe,CAACqB,GAAG,CAAEO,CAAC,KAAM;QAAE7C,IAAI,EAAE6C,CAAC,CAAC7C,IAAI;QAAEyC,KAAK,EAAEI,CAAC,CAACvC;MAAE,CAAE,CAAC,CAAC,CACpE;MAED,OAAO;QAAE,GAAGiC,GAAG;QAAEC,aAAa,EAAEG;MAAS,CAAE;IAC7C,CAAC,CAAC;EACJ;EAEQV,gBAAgB,CAACP,IAAmB;IAC1C,KAAK,MAAMa,GAAG,IAAIb,IAAI,CAACU,YAAY,EAAE;MACnC,MAAMU,OAAO,GAAG,IAAI,CAACV,YAAY,CAACW,IAAI,CACnCC,CAAC,IAAKA,CAAC,CAAC9C,MAAM,CAACF,IAAI,KAAK,MAAMuC,GAAG,CAACA,GAAG,EAAE,CACzC;MACD,IAAIO,OAAO,EAAE;QACXA,OAAO,CAACL,KAAK,GAAGF,GAAG,CAACU,eAAe;;;EAGzC;EAEAC,YAAY,CAACJ,OAAqB;IAChC,OAAO,IAAI,CAAChB,OAAO,IAAIgB,OAAO,GAC1B,IAAI,CAACrD,YAAY,CAACyD,YAAY,CAAC,IAAI,CAACpB,OAAO,EAAEgB,OAAO,CAAC,GACrD,EAAE;EACR;EAEAK,WAAW;IACT,IAAI,CAAC,IAAI,CAACrB,OAAO,IAAI,CAAC,IAAI,CAACA,OAAO,CAACsB,IAAI,EAAE;MACvC,OAAO,EAAE;;IAGX,MAAMrB,QAAQ,GAAG,IAAI,CAACD,OAAO,CAACsB,IAAI,CAACrB,QAAQ;IAC3C,MAAMsB,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACtB,QAAQ,CAAC;IAElC,IAAIwB,GAAG,GAAG,EAAE;IACZ,KAAK,MAAMC,GAAG,IAAIH,IAAI,EAAE;MACtB,IAAI,IAAI,CAACH,YAAY,CAAC,IAAI,CAACE,IAAI,CAACI,GAAG,CAAC,CAAC,EACnCD,GAAG,IAAI,GAAG,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,CAACvD,KAAK,KAAK,IAAI,CAACiD,YAAY,CAClD,IAAI,CAACE,IAAI,CAACI,GAAG,CAAC,CACf,MAAM;;IAGX,OAAOD,GAAG;EACZ;EAEAE,UAAU,CAACX,OAAqB;IAC9BlB,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B;EAEA6B,UAAU,CAAC1D,IAAY,EAAE2D,KAAU;IACjC/B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE7B,IAAI,EAAE2D,KAAK,CAAC;EACxC;EAEMC,QAAQ;IAAA;IAAA;MACZhC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,MAAI,CAACC,OAAO,CAAC;MACrC,MAAMJ,IAAI,GAAG,MAAI,CAACI,OAAO,CAACW,KAAK;MAC/Bb,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,IAAI,CAAC;MAE/B,MAAMmC,KAAK,GAAG;QACZ7D,IAAI,EAAE0B,IAAI,CAAC1B,IAAI;QACfoC,YAAY,EAAE,MAAI,CAACA,YAAY,CAC5B0B,MAAM,CAAEd,CAAC,IAAKA,CAAC,CAACP,KAAK,KAAK,CAAC,CAAC,CAAC,CAC7BH,GAAG,CAAEU,CAAC,IAAI;UACT,OAAO;YACLT,GAAG,EAAE,CAACS,CAAC,CAAC9C,MAAM,CAACF,IAAI,CAAC+D,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjCd,eAAe,EAAED,CAAC,CAACP;WACpB;QACH,CAAC;OACa;MAElB,IAAI,MAAI,CAACnB,MAAM,EAAE;QACf;QAEA,IAAI;UACF,MAAM0C,YAAY,SAAS,MAAI,CAACnE,cAAc,CAACoE,MAAM,CAAC,MAAI,CAAC1C,MAAO,EAAE;YAClEvB,IAAI,EAAE6D,KAAK,CAAC7D;WACb,CAAC;UAEF;UACA,MAAMkE,MAAM,SAAS,MAAI,CAACpE,kBAAkB,CAACqE,UAAU,CACrDN,KAAK,CAACzB,YAAY,CAACE,GAAG,CAAEU,CAAC,IAAI;YAC3B,OAAO;cACL,GAAGA,CAAC;cACJoB,eAAe,EAAE,MAAI,CAAC7C;aACvB;UACH,CAAC,CAAC,CACH;UACD,MAAI,CAAC5B,MAAM,CAAC0E,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;SACnC,CAAC,OAAOnC,KAAK,EAAE;UACdN,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEK,KAAK,CAAC;;OAExC,MAAM;QACL;QACA,IAAI;UACF;UACA,MAAM8B,YAAY,SAAS,MAAI,CAACnE,cAAc,CAACyE,MAAM,CAACT,KAAK,CAAC;UAC5D;UAEA,MAAI,CAAClE,MAAM,CAAC0E,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;SACnC,CAAC,OAAOnC,KAAK,EAAE;UACdN,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEK,KAAK,CAAC;;;IAExC;EACH;;AAtMW3C,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAgF;EAAAC;IAAA;;;;;;;;;;;;;MC1CpCnF,4DAAAA,iBAAyC;MACvCA,wDAAAA,2DAEM;MAENA,4DAAAA,iBAA0C;MAIvBA,oDAAAA,GAAwB;MAAAA,0DAAAA,EAAY;MAC/CA,4DAAAA,eA8BE;MA1BAA,wDAAAA;QAAA,gBAAkB,MAAM;MAAA,EAAQ;MAJlCA,0DAAAA,EA8BE;MACFA,wDAAAA,uEAEa;MACbA,wDAAAA,yEAEY;MACdA,0DAAAA,EAAiB;MAEnBA,uDAAAA,cAAuB;MACzBA,0DAAAA,EAAM;MAENA,4DAAAA,cAAiB;MAETA,oDAAAA,sBAAc;MAAAA,0DAAAA,EAAK;MAG3BA,wDAAAA,+DAkCM;MAENA,4DAAAA,cAAiB;MACfA,uDAAAA,cAAuB;MACvBA,4DAAAA,cAA4B;MAOxBA,wDAAAA;QAAA,OAASoF,cAAU;MAAA,EAAC;MAEpBpF,oDAAAA,gBACF;MAAAA,0DAAAA,EAAS;MACTA,4DAAAA,kBAQC;MACWA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAW;;;;MAlHDA,uDAAAA,GAA4B;MAA5BA,wDAAAA,oCAA4B;MAQzCA,uDAAAA,GAAwB;MAAxBA,+DAAAA,wBAAwB;MAGjCA,uDAAAA,GAAiC;MAAjCA,wDAAAA,sCAAiC;MA6BxBA,uDAAAA,GAA8B;MAA9BA,wDAAAA,sCAA8B;MAG7BA,uDAAAA,GAAgC;MAAhCA,wDAAAA,4CAAgC;MAahBA,uDAAAA,GAAe;MAAfA,wDAAAA,6BAAe;MA4C3CA,uDAAAA,GAAiC;MAAjCA,wDAAAA,yBAAiC;MAUjCA,uDAAAA,GAAmC;MAAnCA,yDAAAA,qBAAmC;MACnCA,wDAAAA,iCAA4B;;;;;;;;;;;;;;;;;;;;;;;AC/GiB;AACE;AAC6B;;;AAEtF,MAAMuF,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEH,kEAAiBA;AAAA,CAAE,EAC1C;EAAEE,IAAI,EAAE,KAAK;EAAEC,SAAS,EAAEvF,+FAAuBA;AAAA,CAAE,CACpD;AAMK,MAAOwF,qBAAqB;AAArBA,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA;AAAqB;AAArBA,qBAAqB;YAHtBL,kEAAqB,CAACE,MAAM,CAAC,EAC7BF,yDAAY;AAAA;;sHAEXK,qBAAqB;IAAAE,UAAAA,yDAAAA;IAAAC,UAFtBR,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACV8C;;;;;;;;;;AAchE,MAAOC,iBAAkB,SAAQQ,gFAA4B;EACjE3F,YACEG,MAAc,EACPyF,eAAgC,EACvCxF,cAA8B;IAE9B,MAAM8B,IAAI,GAAoB;MAC5B2D,KAAK,EAAE,SAAS;MAChBC,aAAa,EAAE,CAAC,MAAM,CAAC;MACvBC,OAAO,EAAE,CACP;QAAEvF,IAAI,EAAE,IAAI;QAAEqF,KAAK,EAAE;MAAI,CAAE,EAC3B;QAAErF,IAAI,EAAE,MAAM;QAAEqF,KAAK,EAAE;MAAM;MAC7B;MAAA,CACD;;MACDR,IAAI,EAAE;KACP;IACD,KAAK,CAAClF,MAAM,EAAEyF,eAAe,EAAE1D,IAAI,EAAE9B,cAAc,CAAC;IAb7C,oBAAe,GAAfwF,eAAe;EAcxB;;AAjBWT,iBAAkB;mBAAlBA,iBAAiB;AAAA;AAAjBA,iBAAkB;QAAlBA,iBAAiB;EAAAJ;EAAAiB,WAAAA,wEAAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChB9BvG,4DAAAA,iBAAyC;MAEnBA,oDAAAA,GAAW;MAAAA,0DAAAA,EAAK;MAClCA,4DAAAA,gBAAyD;MAAhBA,wDAAAA;QAAA,OAASoF,SAAK;MAAA,EAAC;MACtDpF,4DAAAA,kBAAyB;MAAAA,oDAAAA,UAAG;MAAAA,0DAAAA,EAAW;MACvCA,oDAAAA,YACF;MAAAA,0DAAAA,EAAS;MAGXA,4DAAAA,aAA4B;MAEbA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAY;MAC9BA,4DAAAA,gBAIE;MADAA,wDAAAA;QAAA,OAASoF,wBAAoB;MAAA,EAAC;MAHhCpF,0DAAAA,EAIE;MAEFA,4DAAAA,mBAAoB;MAAAA,oDAAAA,cAAM;MAAAA,0DAAAA,EAAW;MACrCA,4DAAAA,gBAAU;MAAAA,oDAAAA,IAAyC;MAAAA,0DAAAA,EAAW;MAKlEA,4DAAAA,2BAQC;MAHCA,wDAAAA;QAAA,OAASoF,gBAAY;MAAA,EAAC;QAAA,OACXA,kBAAc;MAAA,EADH;QAAA,OAENA,uBAAmB;MAAA,EAFb;MAGvBpF,0DAAAA,EAAmB;;;MA9BAA,uDAAAA,GAAW;MAAXA,+DAAAA,WAAW;MAiBjBA,uDAAAA,IAAyC;MAAzCA,gEAAAA,iDAAyC;MAMrDA,uDAAAA,GAAmB;MAAnBA,wDAAAA,wBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBwB;AAEmB;AACT;AAC6B;AACpB;AACO;AACkB;AACP;AACwB;;AAiBtG,MAAOiH,cAAc;AAAdA,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA;AAAc;AAAdA,cAAc;aAFd,CAACJ,wDAAc,EAAE,CAAC;EAAAjB,UAV3BY,yDAAY,EACZd,2EAAqB,EACrBe,uDAAW,EACXC,+DAAmB,EACnBM,sHAA2B,EAC3BF,qGAAoB,EACpBC,8FAAgB;AAAA;;sHAMPE,cAAc;IAAAC,eAdV5B,kEAAiB,EAAEpF,+FAAuB;IAAA0F,UAEvDY,yDAAY,EACZd,2EAAqB,EACrBe,uDAAW,EACXC,+DAAmB,EACnBM,sHAA2B,EAC3BF,qGAAoB,EACpBC,8FAAgB,EAChBJ,sDAAgB,EAChBC,iDAAW;EAAA;AAAA;;;;;;;;;;;;;;;;;ACpByC;;;AAKlD,MAAOQ,kBAAmB,SAAQD,iEAAgB;EACtDhH,YAAYkH,IAAgB;IAC1B,KAAK,CAAC,eAAe,EAAEA,IAAI,CAAC;EAC9B;EAEAvC,UAAU,CAAC/B,YAA2B;IACpC,MAAMuE,GAAG,GAAG,IAAI,CAACD,IAAI,CAACE,KAAK,CAAC,GAAG,IAAI,CAAC/B,IAAI,cAAc,EAAEzC,YAAY,CAAC;IACrE,OAAO,IAAI,CAACyE,OAAO,CAACF,GAAG,CAAC;EAC1B;;AARWF,kBAAmB;mBAAnBA,kBAAkB;AAAA;AAAlBA,kBAAmB;SAAnBA,kBAAkB;EAAAK,SAAlBL,kBAAkB;EAAAM,YAFjB;AAAM;;;;;;;;;;;;;;;;;ACLoC;;;AAMlD,MAAOC,eAAgB,SAAQR,iEAAgB;EACnDhH,YAAYkH,IAAgB;IAC1B,KAAK,CAAC,iBAAiB,EAAEA,IAAI,CAAC;EAChC;;AAHWM,eAAgB;mBAAhBA,eAAe;AAAA;AAAfA,eAAgB;SAAhBA,eAAe;EAAAF,SAAfE,eAAe;EAAAD,YAFd;AAAM","sources":["./src/app/pages/workouts/workout-details/workout-details.component.ts","./src/app/pages/workouts/workout-details/workout-details.component.html","./src/app/pages/workouts/workouts-routing.module.ts","./src/app/pages/workouts/workouts.component.ts","./src/app/pages/workouts/workouts.component.html","./src/app/pages/workouts/workouts.module.ts","./src/app/services/training-day.service.ts","./src/app/services/workouts.service.ts"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ControlInput } from 'src/app/core/classes/control.class';\nimport { ExerciseSetService } from 'src/app/services/exercise-set.service';\nimport { ExercisesService } from 'src/app/services/exercises.service';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { TrainingDayService } from 'src/app/services/training-day.service';\nimport { UtilsService } from 'src/app/services/utils.service';\nimport { WorkoutsService } from 'src/app/services/workouts.service';\nimport { ExerciseSet } from '../../exercise-set/exercise-set-details/exercise-set-details.component';\n\nenum WeekingDays {\n  Sunday = 0,\n  Monday = 1,\n  Tuesday = 2,\n  Wednesday = 3,\n  Thursday = 4,\n  Friday = 5,\n  Saturday = 6,\n}\n\nexport interface TrainingSheet {\n  id?: number;\n  name: string;\n  trainingDays: TrainingDay[];\n}\nexport interface TrainingDay {\n  id?: number;\n  day: number;\n  trainingSheetId: number;\n  exerciseGroupId: number;\n}\n\n@Component({\n  selector: 'app-workout-details',\n  templateUrl: './workout-details.component.html',\n  styleUrls: [\n    '../../../core/shared/scss/details-item.shared.scss',\n    './workout-details.component.scss',\n  ],\n})\nexport class WorkoutDetailsComponent {\n  form: { [id: string]: ControlInput } = {\n    name: new ControlInput({\n      label: 'Nome',\n      config: {\n        name: 'name',\n        hint: 'Nome do usuário',\n        required: true,\n        errors: {\n          required: 'Campo obrigatório',\n        },\n      },\n    }),\n  };\n\n  trainingDays: ControlInput[] = [];\n  weekDays = [\n    { id: WeekingDays.Sunday, name: 'Domingo' },\n    { id: WeekingDays.Monday, name: 'Segunda' },\n    { id: WeekingDays.Tuesday, name: 'Terça' },\n    { id: WeekingDays.Wednesday, name: 'Quarta' },\n    { id: WeekingDays.Thursday, name: 'Quinta' },\n    { id: WeekingDays.Friday, name: 'Sexta' },\n    { id: WeekingDays.Saturday, name: 'Sábado' },\n  ];\n\n  allExerciceSets: ExerciseSet[] = [];\n\n  @ViewChild('reactiveForm') formRef!: NgForm;\n\n  isEdit = false;\n  editId: number | null = null;\n  constructor(\n    private utilsService: UtilsService,\n    private actRoute: ActivatedRoute,\n    private router: Router,\n    public loadingService: LoadingService,\n    private workoutService: WorkoutsService,\n    private trainingDayService: TrainingDayService,\n    private exersiceSetService: ExerciseSetService\n  ) {\n    this.createTrainingDaysControllers();\n  }\n\n  ngOnInit(): void {}\n  async ngAfterViewInit() {\n    this.allExerciceSets = await this.exersiceSetService.getAll();\n    this.insertSets();\n    this.actRoute.params.subscribe(async (params) => {\n      if (params['id'] !== 'new') {\n        this.isEdit = true;\n        this.editId = +params['id'];\n        // Load data...\n        setTimeout(() => {\n          this.loadingService.activeLoading();\n        }, 50);\n\n        // Get data from API\n        try {\n          const data = await this.workoutService.getById(+params['id'], [\n            'trainingDays',\n          ]);\n          console.log('data', data);\n          this.formRef.controls['name'].setValue(data.name);\n          this.fillTrainingDays(data);\n        } catch (error) {\n          console.error(error);\n        } finally {\n          setTimeout(() => {\n            this.loadingService.deactiveLoading();\n          }, 200);\n        }\n      }\n    });\n  }\n\n  private createTrainingDaysControllers() {\n    this.trainingDays = this.weekDays.map((day) => {\n      return new ControlInput({\n        label: day.name,\n        selectOptions: [{ name: 'Sem treino', value: -1 }],\n        value: -1,\n        config: {\n          name: `td_${day.id.toString()}`,\n          required: true,\n          errors: {\n            required: 'Campo obrigatório',\n          },\n        },\n      });\n    });\n  }\n\n  private insertSets() {\n    this.trainingDays.map((day) => {\n      const atualList = day.selectOptions;\n      atualList.push(\n        ...this.allExerciceSets.map((x) => ({ name: x.name, value: x.id }))\n      );\n\n      return { ...day, selectOptions: atualList };\n    });\n  }\n\n  private fillTrainingDays(data: TrainingSheet) {\n    for (const day of data.trainingDays) {\n      const control = this.trainingDays.find(\n        (e) => e.config.name === `td_${day.day}`\n      );\n      if (control) {\n        control.value = day.exerciseGroupId;\n      }\n    }\n  }\n\n  getErrorText(control: ControlInput) {\n    return this.formRef && control\n      ? this.utilsService.getErrorText(this.formRef, control)\n      : '';\n  }\n\n  issueValues() {\n    if (!this.formRef || !this.formRef.form) {\n      return '';\n    }\n\n    const controls = this.formRef.form.controls;\n    const keys = Object.keys(controls);\n\n    let ret = '';\n    for (const key of keys) {\n      if (this.getErrorText(this.form[key]))\n        ret += `${this.form[key].label}: ${this.getErrorText(\n          this.form[key]\n        )}\\r\\n`;\n    }\n\n    return ret;\n  }\n\n  maskFilled(control: ControlInput) {\n    console.log('maskFilled');\n  }\n\n  dateEvents(name: string, event: any) {\n    console.log('dateEvents', name, event);\n  }\n\n  async onSubmit() {\n    console.log('onSubmit', this.formRef);\n    const data = this.formRef.value;\n    console.log('form value', data);\n\n    const sheet = {\n      name: data.name,\n      trainingDays: this.trainingDays\n        .filter((e) => e.value !== -1)\n        .map((e) => {\n          return {\n            day: +e.config.name.split('_')[1],\n            exerciseGroupId: e.value,\n          };\n        }),\n    } as TrainingSheet;\n\n    if (this.isEdit) {\n      // Update\n\n      try {\n        const sheetCreated = await this.workoutService.update(this.editId!, {\n          name: sheet.name,\n        });\n\n        // update list Days\n        const result = await this.trainingDayService.updateList(\n          sheet.trainingDays.map((e) => {\n            return {\n              ...e,\n              trainingSheetId: this.editId!,\n            };\n          })\n        );\n        this.router.navigate(['workouts']);\n      } catch (error) {\n        console.log('error on update', error);\n      }\n    } else {\n      // Create\n      try {\n        // Create Sheet\n        const sheetCreated = await this.workoutService.create(sheet);\n        // Create Days\n\n        this.router.navigate(['workouts']);\n      } catch (error) {\n        console.log('error on create', error);\n      }\n    }\n  }\n}\n","<section class=\"master mat-elevation-z2\">\n  <div class=\"loading-shade all\" *ngIf=\"loadingService.loading\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <form class=\"form\" #reactiveForm=\"ngForm\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <mat-form-field>\n          <mat-label>{{ form[\"name\"].label }}</mat-label>\n          <input\n            matInput\n            [type]=\"form['name'].config.type\"\n            [name]=\"form['name'].config.name\"\n            [(ngModel)]=\"form['name'].value\"\n            [placeholder]=\"form['name'].config.placeholder\"\n            [disabled]=\"form['name'].config.disabled\"\n            [readonly]=\"form['name'].config.readonly\"\n            [required]=\"form['name'].config.required\"\n            [minlength]=\"form['name'].config.minlength\"\n            [maxlength]=\"form['name'].config.maxlength\"\n            [pattern]=\"form['name'].config.pattern\"\n            [email]=\"form['name'].config.email\"\n            [mask]=\"\n              form['name'].config.mask && form['name'].config.maskConfig.mask\n                ? form['name'].config.maskConfig.mask\n                : null\n            \"\n            [dropSpecialCharacters]=\"\n              form['name'].config.mask &&\n              form['name'].config.maskConfig.dropSpecialCharacters\n                ? form['name'].config.maskConfig.dropSpecialCharacters\n                : true\n            \"\n            [validation]=\"\n              form['name'].config.mask &&\n              form['name'].config.maskConfig.validation\n                ? form['name'].config.maskConfig.validation\n                : false\n            \"\n          />\n          <mat-hint *ngIf=\"form['name'].config.hint\">{{\n            form[\"name\"].config.hint\n          }}</mat-hint>\n          <mat-error *ngIf=\"getErrorText(form['name'])\">\n            {{ getErrorText(form[\"name\"]) }}\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"col\"></div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <h4>Dias da semana</h4>\n      </div>\n    </div>\n    <div class=\"row\" *ngFor=\"let item of trainingDays\">\n      <div class=\"col\">\n        <mat-card class=\"day-card\">\n          <mat-card-content>\n            <h4>Dia - {{ item.label }}</h4>\n            <div class=\"day-group\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>{{ item.label }}</mat-label>\n                <mat-select\n                  [(ngModel)]=\"item.value\"\n                  [name]=\"item.config.name\"\n                  [placeholder]=\"item.config.placeholder\"\n                  [disabled]=\"item.config.disabled\"\n                  [required]=\"item.config.required\"\n                >\n                  <mat-option\n                    *ngFor=\"let item of item.selectOptions\"\n                    [value]=\"item.value\"\n                  >\n                    {{ item.name }}\n                  </mat-option>\n                </mat-select>\n                <mat-hint *ngIf=\"item.config.hint\">{{\n                  form[\"url\"].config.hint\n                }}</mat-hint>\n                <mat-error *ngIf=\"getErrorText(item)\">\n                  {{ getErrorText(item) }}\n                </mat-error>\n              </mat-form-field>\n            </div>\n            <div></div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\"></div>\n      <div class=\"col submit-col\">\n        <button\n          class=\"submit-btn\"\n          type=\"button\"\n          mat-raised-button\n          color=\"accent\"\n          [disabled]=\"reactiveForm.invalid\"\n          (click)=\"onSubmit()\"\n        >\n          Salvar\n        </button>\n        <button\n          mat-icon-button\n          aria-label=\"Help Form Button\"\n          type=\"button\"\n          class=\"help-btn\"\n          [class.show]=\"reactiveForm.invalid\"\n          [matTooltip]=\"issueValues()\"\n          matTooltipClass=\"multiline-tooltip\"\n        >\n          <mat-icon>help</mat-icon>\n        </button>\n      </div>\n    </div>\n  </form>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { WorkoutsComponent } from './workouts.component';\nimport { WorkoutDetailsComponent } from './workout-details/workout-details.component';\n\nconst routes: Routes = [\n  { path: '', component: WorkoutsComponent },\n  { path: ':id', component: WorkoutDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WorkoutsRoutingModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MasterTable } from 'src/app/core/classes/master-table.class';\nimport { DataMasterTable } from 'src/app/core/interfaces/data-master-table.interface';\nimport { LoadingService } from 'src/app/services/loading.service';\nimport { ServiceBackendItemService } from 'src/app/services/service-backend-item.service';\nimport { WorkoutsService } from 'src/app/services/workouts.service';\n\n@Component({\n  selector: 'app-workouts',\n  templateUrl: './workouts.component.html',\n  styleUrls: [\n    '../../core/shared/scss/master-details.shared.scss',\n    './workouts.component.scss',\n  ],\n})\nexport class WorkoutsComponent extends MasterTable<WorkoutsService> {\n  constructor(\n    router: Router,\n    public workoutsService: WorkoutsService,\n    loadingService: LoadingService\n  ) {\n    const data: DataMasterTable = {\n      title: 'Treinos',\n      targetFilters: ['Name'],\n      columns: [\n        { name: 'id', title: 'ID' },\n        { name: 'name', title: 'Name' },\n        // { name: 'description', title: 'Description' },\n      ],\n      path: '/workouts',\n    };\n    super(router, workoutsService, data, loadingService);\n  }\n\n  // add()\n  // changeFilter(filter: any)\n  // edit(row: any)\n  // delete(row: any)\n  // changeTable(event: any)\n}\n","<section class=\"master mat-elevation-z2\">\n  <div class=\"header-content\">\n    <h2 class=\"title\">{{ title }}</h2>\n    <button mat-raised-button color=\"accent\" (click)=\"add()\">\n      <mat-icon class=\"mat-24\">add</mat-icon>\n      Add\n    </button>\n  </div>\n\n  <div class=\"filter-content\">\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Filtrar</mat-label>\n      <input\n        matInput\n        placeholder=\"Filtre aqui\"\n        (input)=\"changeFilter($event)\"\n      />\n\n      <mat-icon matPrefix>search</mat-icon>\n      <mat-hint>Filtre por {{ targetFilters.join(\", \") }}</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <!-- Table -->\n  <app-master-table\n    [columns]=\"columns\"\n    [service]=\"workoutsService\"\n    functionName=\"getByFilter\"\n    [filterChange$]=\"filterChange$\"\n    (edit$)=\"edit($event)\"\n    (delete$)=\"delete($event)\"\n    (changeTable$)=\"changeTable($event)\"\n  ></app-master-table>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WorkoutsRoutingModule } from './workouts-routing.module';\nimport { WorkoutsComponent } from './workouts.component';\nimport { WorkoutDetailsComponent } from './workout-details/workout-details.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\nimport { MaterialBundleModule } from 'src/app/core/material-bundle/material-bundle.module';\nimport { ComponentsModule } from 'src/app/core/shared/components/components.module';\nimport { DrivenFormsDirectivesModule } from 'src/app/core/shared/directives/driven-forms-directives.module';\n\n@NgModule({\n  declarations: [WorkoutsComponent, WorkoutDetailsComponent],\n  imports: [\n    CommonModule,\n    WorkoutsRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DrivenFormsDirectivesModule,\n    MaterialBundleModule,\n    ComponentsModule,\n    NgxMaskDirective,\n    NgxMaskPipe,\n  ],\n  providers: [provideNgxMask()],\n})\nexport class WorkoutsModule {}\n","import { Injectable } from '@angular/core';\nimport { TrainingDay } from '../pages/workouts/workout-details/workout-details.component';\nimport { HttpClient } from '@angular/common/http';\nimport { BaseModelService } from './base-model.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainingDayService extends BaseModelService {\n  constructor(http: HttpClient) {\n    super('/training-day', http);\n  }\n\n  updateList(trainingDays: TrainingDay[]) {\n    const req = this.http.patch(`${this.path}/update-list`, trainingDays);\n    return this.request(req);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseModelService } from './base-model.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WorkoutsService extends BaseModelService {\n  constructor(http: HttpClient) {\n    super('/training-sheet', http);\n  }\n}\n"],"names":["ControlInput","i0","WeekingDays","WorkoutDetailsComponent","constructor","utilsService","actRoute","router","loadingService","workoutService","trainingDayService","exersiceSetService","name","label","config","hint","required","errors","id","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","createTrainingDaysControllers","ngOnInit","ngAfterViewInit","allExerciceSets","getAll","insertSets","params","subscribe","isEdit","editId","setTimeout","activeLoading","data","getById","console","log","formRef","controls","setValue","fillTrainingDays","error","deactiveLoading","trainingDays","weekDays","map","day","selectOptions","value","toString","atualList","push","x","control","find","e","exerciseGroupId","getErrorText","issueValues","form","keys","Object","ret","key","maskFilled","dateEvents","event","onSubmit","sheet","filter","split","sheetCreated","update","result","updateList","trainingSheetId","navigate","create","selectors","viewQuery","ctx","RouterModule","WorkoutsComponent","routes","path","component","WorkoutsRoutingModule","forChild","imports","exports","MasterTable","workoutsService","title","targetFilters","columns","features","decls","vars","consts","template","CommonModule","FormsModule","ReactiveFormsModule","NgxMaskDirective","NgxMaskPipe","provideNgxMask","MaterialBundleModule","ComponentsModule","DrivenFormsDirectivesModule","WorkoutsModule","declarations","BaseModelService","TrainingDayService","http","req","patch","request","factory","providedIn","WorkoutsService"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}